{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///telepat0.3.min.js","webpack:///webpack/bootstrap ea191d777fed5801e6b8","webpack:///./src/telepat.js","webpack:///./~/process/browser.js","webpack:///./~/fs/index.js","webpack:///./~/pouchdb/lib/index-browser.js","webpack:///./~/js-extend/extend.js","webpack:///./~/debug/browser.js","webpack:///./~/debug/debug.js","webpack:///./~/ms/index.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/lie/lib/browser.js","webpack:///./~/immediate/lib/browser.js","webpack:///./~/events/events.js","webpack:///./~/argsarray/index.js","webpack:///./~/scope-eval/scope_eval.js","webpack:///./~/spark-md5/spark-md5.js","webpack:///./~/vuvuzela/index.js","webpack:///./~/es6-promise-pool/es6-promise-pool.js","webpack:///./src/api.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/component-emitter/index.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./~/superagent/lib/request.js","webpack:///./~/crypto-js/sha256.js","webpack:///./~/crypto-js/core.js","webpack:///./src/logger.js","webpack:///./~/loglevel/lib/loglevel.js","webpack:///./src/error.js","webpack:///./src/event.js","webpack:///./src/monitor.js","webpack:///./~/jsondiffpatch/src/main.js","webpack:///./~/jsondiffpatch/src/environment.js","webpack:///./~/jsondiffpatch/src/diffpatcher.js","webpack:///./~/jsondiffpatch/src/processor.js","webpack:///./~/jsondiffpatch/src/pipe.js","webpack:///./~/jsondiffpatch/src/contexts/diff.js","webpack:///./~/jsondiffpatch/src/contexts/context.js","webpack:///./~/jsondiffpatch/src/clone.js","webpack:///./~/jsondiffpatch/src/contexts/patch.js","webpack:///./~/jsondiffpatch/src/contexts/reverse.js","webpack:///./~/jsondiffpatch/src/filters/trivial.js","webpack:///./~/jsondiffpatch/src/filters/nested.js","webpack:///./~/jsondiffpatch/src/filters/arrays.js","webpack:///./~/jsondiffpatch/src/filters/lcs.js","webpack:///./~/jsondiffpatch/src/filters/dates.js","webpack:///./~/jsondiffpatch/src/filters/texts.js","webpack:///./~/jsondiffpatch/public/external ^\\.\\/.*$","webpack:///./~/jsondiffpatch/public/external/diff_match_patch_uncompressed.js","webpack:///./~/jsondiffpatch/src/date-reviver.js","webpack:///./~/jsondiffpatch/src ^\\.\\/.*$","webpack:///./~/jsondiffpatch/src/formatters/annotated.js","webpack:///./~/jsondiffpatch/src/formatters/base.js","webpack:///./~/jsondiffpatch/src/formatters/console.js","webpack:///./~/chalk/index.js","webpack:///./~/escape-string-regexp/index.js","webpack:///./~/ansi-styles/index.js","webpack:///./~/strip-ansi/index.js","webpack:///./~/ansi-regex/index.js","webpack:///./~/has-ansi/index.js","webpack:///./~/supports-color/index.js","webpack:///./~/jsondiffpatch/src/formatters/html.js","webpack:///./~/jsondiffpatch/src/formatters/index.js","webpack:///./~/jsondiffpatch/src/formatters/jsonpatch.js","webpack:///./~/jsondiffpatch/src/formatters ^\\.\\/.*$","webpack:///./~/jsondiffpatch/src/main-formatters.js","webpack:///./~/jsondiffpatch/src/main-full.js","webpack:///./src/channel.js","webpack:///./src/user.js","webpack:///./src/admin.js","webpack:///./~/socket.io-client/lib/index.js","webpack:///./~/socket.io-client/lib/url.js","webpack:///./~/socket.io-client/~/parseuri/index.js","webpack:///./~/socket.io-client/~/debug/browser.js","webpack:///./~/socket.io-client/~/debug/debug.js","webpack:///./~/socket.io-client/~/debug/~/ms/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js","webpack:///(webpack)/buildin/module.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/isarray/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/binary.js","webpack:///./~/socket.io-client/~/socket.io-parser/is-buffer.js","webpack:///./~/socket.io-client/lib/manager.js","webpack:///./~/socket.io-client/~/engine.io-client/index.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/index.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/socket.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/index.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/socket.io-client/~/engine.io-client/~/has-cors/index.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transport.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js","webpack:///./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/component-emitter/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/parseqs/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/component-inherit/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/yeast/index.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/socket.io-client/~/engine.io-client/lib/transports/websocket.js","webpack:///./~/socket.io-client/~/indexof/index.js","webpack:///./~/socket.io-client/~/engine.io-client/~/parsejson/index.js","webpack:///./~/socket.io-client/lib/socket.js","webpack:///./~/socket.io-client/~/component-emitter/index.js","webpack:///./~/socket.io-client/~/to-array/index.js","webpack:///./~/socket.io-client/lib/on.js","webpack:///./~/socket.io-client/~/component-bind/index.js","webpack:///./~/socket.io-client/~/has-binary/index.js","webpack:///./~/socket.io-client/~/has-binary/~/isarray/index.js","webpack:///./~/socket.io-client/~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","process","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_fs","_fs2","_pouchdb","_pouchdb2","_api","_api2","_logger","_logger2","_error","_error2","_event","_event2","_monitor","_monitor2","_channel","_channel2","_user","_user2","Telepat","getUserHome","env","platform","getTelepatDir","dir","existsSync","mkdirSync","_db","window","_socketEndpoint","_socket","_persistentConnectionOptions","_sessionId","connected","connecting","configured","currentAppId","collections","subscriptions","admin","user","collectionEvent","_this","callback","arguments","undefined","get","err","res","resultingError","emit","remove","channel","model","index","body","content","add","_addCollection","bind","_deleteCollection","_updateCollection","on","operation","parentId","parentObject","delta","collection","addCollection","warn","patches","updateCollection","deleteCollection","_this2","reauth","newAdmin","_this3","options","apiEndpoint","socketEndpoint","_updateUser","completeRegistration","identifier","UDID","info","self","then","doc","appId","put","newObject","_id","device_id","application_id","getCollections","registerDevice","request","os","userAgent","navigator","volatile","type","active","token","persistent","disconnect","_this4","apiKey","timerInterval","apps","app","persistentConnection","ioOptions","data","sessionId","updateUDID","message","processMessage","_this5","close","unsubscribe","isAdmin","logout","unhook","level","setLevel","name","removeCallback","onSubscribe","_this6","subscriptionKeyForOptions","subscribe","from","fromName","to","subject","recipients","from_name","_this7","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","push","apply","title","browser","argv","version","versions","addListener","once","off","removeListener","removeAllListeners","binding","cwd","chdir","umask","console","log","global","_interopDefault","ex","mangle","unmangle","substring","_Map","store","_Set","isArray","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","slice","byteLength","targetArray","Uint8Array","sourceArray","set","cloneBinaryObject","size","webkitSlice","isPlainObject","proto","getPrototypeOf","Ctor","constructor","funcToString","objectCtorString","clone","Date","toISOString","hasOwnProperty","called","getArguments","toPromise","func","usedCB","tempCB","pop","resp","promise","PouchPromise","fulfill","reject","mesg","result","adapterFun","logApiCall","enabled","logArgs","origCallback","responseArgs","_closed","_destroyed","taskqueue","isReady","addTask","failed","pick","arr","prop","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","collapseResultsAndFinish","results","perDocResults","forEach","docs","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","Math","min","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","offset","docId","j","docIdx","docRequests","requestsById","docOpts","open_revs","map","rev","filter","formatResult","param","error","requests","keys","isChromeApp","chrome","storage","local","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","db_name","dbName","newValue","addEventListener","attachEvent","Changes$1","events","EventEmitter","_listeners","guardedConsole","method","randomNumber","max","maxTimeout","parseInt","ratio","random","range","defaultBackOff","explainError","status","str","PouchError","reason","createError","CustomPouchError","generateErrorFromResponse","UNKNOWN_ERROR","tryFilter","req","msg","toString","BAD_REQUEST","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","INVALID_ID","test","RESERVED_ID","MISSING_ID","listenerCount","ee","parseDesignDocFunctionName","s","parts","split","normalizeDesignDocFunctionName","normalized","join","parseUri","parser","exec","uri","encoded","indexOf","decodeURIComponent","qName","replace","qParser","$0","$1","$2","upsert","diffFun","docRev","_rev","newDoc","tryAndPut","updated","getValue","radix","uuid","chars","out","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","a","b","collectLeaves","leaves","isLeaf","acc","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","mid","low","high","insertSorted","idx","splice","pathToTree","path","numStemmed","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","maybeStem","stemmed","stemmedNode","merge","newTree","stemmedRevs","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","evalFilter","input","scopedEval","evalView","code","tryCatchInChangeListener","Changes","onDestroy","cancel","complete","onChange","isCancelled","doChanges","processChange","changeList","style","changes","_conflicts","compare","left","right","arrayFirst","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","start","bStart","computeHeight","height","edges","prnt","edge","allDocsKeysQuery","api","skip","limit","descending","_allDocs","finalResults","all","subOpts","jsExtend","extend","optKey","resolve","total_rows","rows","doNextCompaction","task","_compactionQueue","last_seq","_compact","shift","attachmentNameError","charAt","AbstractPouchDB","TaskQueue","parseAdapter","match","adapter","adapterName","skipIdb","PouchDB","adapters","localStorage","prefix","preferredAdapters","usePrefix","use_prefix","prepareForDestruction","onDestroyed","onConstructorDestroyed","destructionListeners","_destructionListeners","has","__opts","auto_compaction","prefixedName","backend","_adapter","debug","valid","fail","ready","setUpEventEmitter","Pouch","eventEmitter","destructListeners","toObject","reduce","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","toLowerCase","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","atob$1","arrayBufferToBinaryString","buffer","binary","bytes","String","fromCharCode","readAsBinaryString","blob","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","btoa$1","rawToBase64","raw","sliceBlob","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","next","setImmediateShim","loadNextChunk","done","destroy","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","ceil","Md5","stringMd5","hash","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","prev","cb","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$","winningRevIsDeleted","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","MISSING_DOC","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","slowJsonParse","JSON","parse","vuvuzela","safeJsonParse","safeJsonStringify","json","stringify","tryCode","that","applyNext","taskQueue","running","action","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","seq","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","row","attNames","compactRevs","count","deleteOrphanedAttachments","possiblyOrphanedDigests","countReq","attAndSeqStore","IDBKeyRange","bound","attStore","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","getKey","cursor","openCursor","only","event","digestSeq","primaryKey","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","idbChanges","startTransaction","DOC_STORE","LOCAL_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","verifyAttachments","preconditionErrored","fetchExistingDocs","idbProcessDocs","revs_limit","numFetched","readMetadata","notify","_meta","docCount","docCountDelta","verifyAttachment","MISSING_STUB","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","createKeyRange","inclusiveEnd","upperBound","lowerBound","handleKeyRangeError","idbAllDocs","allDocsQuery","fetchDocAsynchronously","docIdRevIndex","allDocsInner","onGetCursor","onResultsReady","onTxnComplete","startkey","endkey","inclusive_end","keyRange","allDocs","checkBlobSupport","DETECT_BLOB_SUPPORT_STORE","matchedChrome","matchedEdge","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","META_STORE","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","docIdRev","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","cachedDBs","updateSeq","doc_count","update_seq","idb_attachment_format","_changes","onGetMetadata","lastSeq","onGetWinningDoc","fetchWinningDoc","winningDoc","filtered","numResults","returnDocs","docIds","docIdsToMetadata","fetchChanges","objectStores","since","continuous","doc_ids","return_docs","_close","NOT_OPEN","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","ret","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","onversionchange","checkSetupComplete","meta","blobSupportPromise","val","IDBPouch","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","num","select","selector","table","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","isAndroid","websqlBulkDocs","websqlChanges","_name","_docCount","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","params","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","hex","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","addDigestSeq","digestSeqs","digestSeqPairs","pair","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","idCallback","onGetVersion","dbVersion","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","migrated","dbid","tasks","nextMigration","setup","fetchVersion","db_version","countDocs","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","websql_encoding","totalRows","criteria","l","selectStmt","view","reportChange","maxSeq","escaped","putLocal","values","rowsAffected","removeLocal","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","WebSqlPouch","wrappedFetch","wrappedPromise","fetch","response","fetchRequest","timer","headers","Headers","fetchOptions","credentials","processData","url","fetchResponse","statusCode","text","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","onreadystatechange","XMLHttpRequest","exception","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","testXhr","ajax$1","hasXhr","defaultBody","ajaxCore","onSuccess","v","missing","res$2","defaultOptions","cache","ajax","ua","isSafari","isIE","isEdge","shouldCacheBust","isBlobUrl","hasArgs","now","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$1","hasUrlPrefix","protocol","getHost","substr","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","k","HttpPouch","ajax$$","userOpts","reqAjax","ajaxOpts","log$1","_ajax","ajaxPromise","adapterFun$$","skipSetup","skip_setup","setupPromise","checkExists","dbUrl","encodeAttachmentId","attachmentId","nAuth","unescape","Authorization","compact","ping","compact_running","interval","doBulkGet","doBulkGetShim","onResult","batchNum","numBatches","batchSize","MAX_SIMULTANEOUS_REVS","supportsBulkGet","supportsBulkGetMap","floor","fetchAttachments","filenames","PromisePool","fetchAllAttachments","docOrDocs","revs_info","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","Content-Type","_put","start_key","end_key","paramStr","batch_size","CHANGES_BATCH_SIZE","leftToFetch","feed","heartbeat","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","revsDiff","HttpPouch$1","pad","padWith","upToLength","padding","targetLength","padLeft","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","isNaN","origKey","toJSON","indexify","numToIndexableString","toIndexableString","objKey","zero","SEP","parseNumber","originalIdx","neg","numAsString","magAsString","MAGNITUDE_DIGITS","magnitude","MIN_MAGNITUDE","ch","parseFloat","stack","metaStack","lastMetaElement","element","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","TaskQueue$1","createView","cachedViews","sourceDB","viewName","mapFun","reduceFun","temporary","viewSignature","_cachedViews","promiseForView","diffFunction","views","fullViewName","depDbs","depDbName","registerDependentDatabase","lastSeqDoc","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","log$2","parseViewName","isGenOne","emitError","tryCode$1","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","readAttachmentsAsBlobOrBuffer$1","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","getMetaDoc","defaultMetaDoc","metaDocId","getKeyValueDocs","metaDoc","processKvDocs","kvDocsRes","kvDocs","oldKeysMap","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","uniq","docData","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","bulkDocs","getQueue","persistentQueues","updateView","sequentialize","updateViewInQueue","mapResults","origMap","currentSeq","processNextBatch","onError","CHANGES_BATCH_SIZE$1","lastKey","jl","complexKey","indexableKey","reduceView","shouldGroup","builtInReduce","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","shouldReduce","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","createViewOpts","tempViewQueue","cleanup","fin","stale","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","state","getAllDocs","bulkGetOpts","bulkGetResponse","cancelled","bulkGetInfo","resultDocs","Boolean","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","unshift","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","LOWEST_SEQ","sourceId","hasSessionId","rest","isForbiddenError","backOff","retry","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterFun","filterViewName","queryData","md5sum","replicate$1","initCheckpointer","checkpointer","repId","writeDocs","changedDocs","currentBatch","bulkOpts","completeReplication","errorsById","create","errorsNo","doc_write_failures","docs_written","errors","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","immediate","pendingBatch","changesOpts","live","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicate","replicateRet","srcPouch","targetPouch","sync","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removeAll","isChange","isDenied","isPaused","isActive","removed","canceled","optsPush","optsPull","pull","success","replication","other","inherits","lie","Promise","mangled","Function","setItem","getItem","eventFunction","inprogress","notifyLocalWindows","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","filterChanges","newPromise","ddoc","filterName","filters","post","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","maxHeight","revTree","candidates","promises","onComplete","finishOpenRevs","indexOfRev","howMany","_revs_info","incompatibleOpt","_type","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","deletedMap","trueName","RegExp","execute","addToPreferredAdapters","plugin","defaults","defaultOpts","PouchAlt","atob","btoa","setImmediate","promiseFactory","promisedCallback","callbackify","finalPromiseFactory","_sum","_count","_stats","sumsqr","_sumsqr","viewCleanup","mapreduce","updateTarget","updateSource","readOnlySource","comparisons","targetDoc","sourceDoc","1","_readyCalled","each","sources","source","useColors","document","documentElement","firebug","formatArgs","namespace","humanize","color","lastC","save","namespaces","removeItem","load","r","localstorage","colors","formatters","enable","selectColor","prevColor","disabled","curr","ms","prevTime","coerce","format","formatter","logFn","fn","skips","names","disable","n","d","h","short","round","long","plural","ctor","superCtor","super_","TempCtor","INTERNAL","resolver","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","handlers","getThen","thenable","tryToUnwrap","tryCatch","iterable","allResolver","resolveFromAll","outValue","resolved","race","REJECTED","FULFILLED","oldQueue","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","createTextNode","observe","characterData","MessageChannel","createElement","scriptEl","parentNode","removeChild","appendChild","port1","onmessage","port2","postMessage","_events","_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","listeners","context","listener","newListener","warned","trace","g","fired","list","position","evlistener","emitter","argsArray","hasProp","scope","cmn","q","t","add32","ff","gg","hh","ii","md5cycle","md5blk","md5blks","md5blk_array","md51","tail","tmp","lo","hi","md51_array","subarray","rhex","hex_chr","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","hexToBinaryString","SparkMD5","reset","lsw","msw","clamp","begin","contents","_buff","_length","_hash","_finish","getState","setState","hashBinary","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","EventTarget","removeEventListener","dispatchEvent","isGenerator","functionToIterator","promiseToIterator","toIterator","PromisePoolEvent","concurrency","_concurrency","_options","_iterator","_done","_size","_promise","_callbacks","_proceed","_fireEvent","_settle","_onPooledPromiseFulfilled","_onPooledPromiseRejected","_trackPromise","_superagent","_superagent2","_sha","_sha2","API","authenticationToken","tokenUpdateCallback","newToken","endpoint","del","needsTokenUpdate","updateToken","serialize","pairs","pushEncodedKeyValuePair","subkey","parseString","parseHeader","line","field","lines","fields","trim","isJSON","mime","Response","statusText","_setStatusProperties","header","getAllResponseHeaders","_setHeaderProperties","_parseBody","Request","_header","original","rawResponse","new_err","Emitter","requestBase","getXHR","location","ActiveXObject","serializeObject","types","html","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","statusType","clientError","serverError","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","_responseType","accept","pass","file","_getFormData","_formData","FormData","_callback","crossDomainError","crossDomain","_timeoutError","_timeout","_appendQueryString","_data","_aborted","handleProgress","total","percent","hasListeners","_timer","_withCredentials","_isHost","contentType","_serializer","head","patch","mixin","callbacks","_parser","_fullfilledPromise","innerResolve","innerReject","use","getHeader","unset","redirects","_maxRedirects","RequestConstructor","CryptoJS","C","C_lib","lib","WordArray","Hasher","C_algo","algo","H","K","isPrime","sqrtN","sqrt","getFractionalBits","nPrime","pow","W","SHA256","_doReset","_doProcessBlock","M","words","f","gamma0x","gamma0","gamma1x","gamma1","maj","sigma0","sigma1","_doFinalize","nBitsTotal","_nDataBytes","nBitsLeft","sigBytes","_process","_createHelper","HmacSHA256","_createHmacHelper","Base","F","overrides","subtype","mixIn","$super","propertyName","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","thatByte","nBytes","rcache","m_w","m_z","mask","_r","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","utf8Str","BufferedBlockAlgorithm","_append","doFlush","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","processedWords","cfg","update","messageUpdate","finalize","hasher","HMAC","_loglevel","_loglevel2","originalFactory","methodFactory","methodName","logLevel","rawMethod","definition","realMethod","undefinedType","bindMethod","enableLoggingWhenConsoleArrives","loggerName","replaceLoggingMethods","logMethods","defaultMethodFactory","Logger","defaultLevel","persistLevelIfPossible","levelNum","levelName","toUpperCase","storageKey","ignore","cookie","getPersistedLevel","storedLevel","levels","currentLevel","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","persist","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","_typeof","Symbol","iterator","Event","eventFunctions","_jsondiffpatch","_jsondiffpatch2","jsondiffpatch","objectHash","textDiff","minLength","Monitor","objectPropertyTrimFilter","trimObject","trimmedObject","leftIsArray","leftType","rightIsArray","rightType","processor","pipes","before","_updateRunning","_processingPatch","_lastObjects","objects","subscriptionOptions","subscriptionKey","addCallback","updateCallback","processDeltaObject","timerFunction","totalDiff","subKey","diffKeys","objKeys","publicKey","op","setInterval","oldValue","lastRoot","pathComponents","subscription","$$event","environment","DiffPatcher","dateReviver","defaultInstance","unpatch","isBrowser","homepage","packageInfoModuleName","packageInfo","formatterModuleName","Processor","Pipe","DiffContext","PatchContext","ReverseContext","trivial","nested","arrays","dates","texts","pipe","collectChildrenDiffFilter","diffFilter","objectsDiffFilter","shouldHaveResult","collectChildrenPatchFilter","patchFilter","collectChildrenReverseFilter","reverseFilter","selfOptions","lastPipe","lastContext","nextPipe","nextAfterChildren","hasResult","exiting","resultCheck","prepend","after","clear","should","noResult","Context","defaultClone","setResult","cloneDiffValues","exit","switchTo","child","childName","children","cloneRegExp","re","regexMatch","getTime","cloned","regexArgs","_t","propertyFilter","arraysHaveMatchByRef","array1","array2","len1","len2","index1","val1","index2","val2","matchItems","value1","value2","matchByPosition","hash1","hash2","hashCache1","hashCache2","lcs","ARRAY_MOVE","arrayIndexOf","matchContext","commonHead","commonTail","trimmed1","trimmed2","removedItems","indices1","detectMove","includeValueOnMove","removedItemsLength","indexOnArray2","indices2","isMove","removeItemIndex1","numerically","numericallyBy","toRemove","toInsert","toModify","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","newName","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","deleteIndex","defaultMatch","lengthMatrix","matrix","backtrack","sequence","subsequence","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","required","diff_match_patch","dmpModuleName","dmp","diff_match_patch_not_found","txt1","txt2","patch_toText","patch_make","patch_apply","patch_fromText","textPatchFailed","diffMatchPatch","textDeltaReverse","lineTmp","lineHeader","lineAdd","lineRemove","headerRegex","lineStart","webpackContext","webpackContextResolve","./diff_match_patch_uncompressed","./diff_match_patch_uncompressed.js","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","Diff","diff_main","text1","text2","opt_checklines","opt_deadline","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_lineMode_","diff_bisect_","diff_linesToChars_","linearray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","text1_length","text2_length","max_d","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","x1","k1_offset","y1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","diff_linesToCharsMunge_","lineEnd","lineArrayLength","lineArray","lineHash","chars1","chars2","pointermin","pointermax","pointermid","pointerstart","pointerend","diff_commonOverlap_","text_length","best","pattern","found","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length","diff_cleanupSemanticScore_","one","two","score","punctuation","whitespace","linebreak","blanklineEnd","blanklineStart","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","pattern_amp","pattern_lt","pattern_gt","pattern_para","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","decodeURI","match_main","match_bitap_","match_bitapScore_","accuracy","proximity","match_alphabet_","score_threshold","best_loc","matchmask","bin_min","bin_mid","last_rd","bin_max","rd","charMatch","patch_addContext_","start2","length1","suffix","start1","length2","opt_b","opt_c","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","nullPadding","patch_addPadding","patch_splitMax","start_loc","expected_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","postcontext","textline","textPointer","patchHeader","sign","coords1","coords2","UTC","./clone","./clone.js","./contexts/context","./contexts/context.js","./contexts/diff","./contexts/diff.js","./contexts/patch","./contexts/patch.js","./contexts/reverse","./contexts/reverse.js","./date-reviver","./date-reviver.js","./diffpatcher","./diffpatcher.js","./environment","./environment.js","./filters/arrays","./filters/arrays.js","./filters/dates","./filters/dates.js","./filters/lcs","./filters/lcs.js","./filters/nested","./filters/nested.js","./filters/texts","./filters/texts.js","./filters/trivial","./filters/trivial.js","./formatters/annotated","./formatters/annotated.js","./formatters/base","./formatters/base.js","./formatters/console","./formatters/console.js","./formatters/html","./formatters/html.js","./formatters/index","./formatters/index.js","./formatters/jsonpatch","./formatters/jsonpatch.js","./main","./main-formatters","./main-formatters.js","./main-full","./main-full.js","./main.js","./pipe","./pipe.js","./processor","./processor.js","base","BaseFormatter","AnnotatedFormatter","includeMoveDestinations","prepareContext","indent","indentLevel","indentPad","htmlNote","typeFormattterErrorFormatter","formatTextDiffString","parseTextDiff","chr","pieces","pieceIndex","piecesLength","piece","rootBegin","nodeType","rootEnd","nodeBegin","leftKey","nodeEnd","isLast","format_unchanged","format_movedestination","format_node","formatDeltaChildren","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","moved","textdiff","formatAnyChange","deltaType","getDeltaType","annotator","format_added","format_modified","format_deleted","format_moved","format_textdiff","getObjectKeys","property","trimUnderscore","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","recurse","typeFormattterNotFound","movedFrom","useMoveOriginHere","leftValue","typeFormattter","forEachDeltaKey","arrayKeys","moveDestinations","lineOutput","pieceOutput","chalk","green","red","movedestination","gray","yellow","unchanged","white","bgRed","textDiffLine","ConsoleFormatter","outLine","pushColor","popColor","formatValue","build","_styles","applyStyle","__proto__","argsLen","nestedStyles","ansiStyles","closeRe","styles","escapeStringRegexp","stripAnsi","hasAnsi","supportsColor","defineProps","grey","hasColor","stripColor","matchOperatorsRe","codes","bold","dim","italic","underline","inverse","hidden","strikethrough","black","blue","magenta","cyan","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","ansiRegex","stdout","isTTY","TERM","htmlEscape","replacements","HtmlFormatter","adjustArrows","getElementText","textContent","innerText","eachByQuery","elems","querySelectorAll","eachChildren","arrow","arrowParent","svg","display","destinationElem","destination","querySelector","container","getAttribute","distance","offsetTop","setAttribute","top","curve","nodeClass","hasArrows","showUnchanged","show","delay","classes","showing","hiding","visible","classList","intervalId","clearInterval","hideUnchanged","annotated","jsonpatch","consoleModuleName","JSONFormatter","sortBy","pred","opsByDescendingOrder","removeOps","splitA","splitB","compareByIndexDesc","partition","coll","reorderOps","jsonFormattedDiff","removeOpsOtherOps","otherOps","removeOpsReverse","named","pushCurrentOp","currentPath","indexA","indexB","lastA","lastB","./annotated","./annotated.js","./base","./base.js","./console","./console.js","./html","./html.js","./index","./index.js","./jsonpatch","./jsonpatch.js","Channel","monitor","_addCallback","_updateCallback","_removeCallback","objectsArray","objectsCount","order","_sortObjectArray","objectKeys","context_id","_admin","_admin2","User","setAdmin","_setAdmin","_customProperties","_userChannel","canReauth","_saveToken","userContainer","email","callbackURL","callbackUrl","newPassword","user_id","facebookToken","_login","access_token","userId","Admin","userChannel","users","updateApp","new","model_name","addUser","deleteUser","updateUser","register","lookup","io","parsed","sameNamespace","nsps","newConnection","forceNew","multiplex","Manager","socket","managers","connect","Socket","parseuri","ipv6","href","authority","ipv6uri","Encoder","encodeAsString","nsp","BINARY_EVENT","BINARY_ACK","encodeAsBinary","writeEncoding","bloblessData","deconstruction","deconstructPacket","pack","packet","buffers","removeBlobs","Decoder","reconstructor","decodeString","BinaryReconstructor","reconPack","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encode","takeBinaryData","finishedReconstruction","binData","reconstructPacket","runInContext","undef","isSupported","serialized","stringifySupported","isExtended","getClass","parseSupported","SyntaxError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","members","Properties","valueOf","isConstructor","hasProperty","objectTypes","Escapes","92","34","8","12","10","13","9","leadingZeroes","toPaddedString","width","unicodePrefix","useCharIndex","symbols","indentation","className","date","time","hours","minutes","seconds","milliseconds","Index","Source","Unescapes","47","98","116","110","102","114","lex","isSigned","hasMembers","walk","isLoader","function","freeExports","freeGlobal","previousJSON","isRestored","JSON3","webpackPolyfill","deprecate","__webpack_amd_options__","_deconstructPacket","placeholder","_placeholder","newData","packetData","_reconstructPacket","_removeBlobs","curKey","containingObject","File","pendingBlobs","fileReader","onload","Buffer","isBuffer","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","jitter","lastPing","packetBuffer","decoder","autoConnect","eio","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","onping","onpong","ondata","ondecoded","onConnecting","encodedPackets","write","processPacketQueue","sub","onclose","duration","onreconnect","attempt","hostname","secure","agent","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","writeBuffer","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","o","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","setTransport","onDrain","onPacket","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","onOpen","upgrades","onHandshake","setPing","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","pingTimeoutTimer","pingIntervalTimer","sendPacket","prevBufferLen","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","polling","xd","xs","isSSL","xdomain","xscheme","XHR","JSONP","websocket","hasCORS","XDomainRequest","Polling","async","isBinary","unloadHandler","inherit","doWrite","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","hasXDR","onLoad","requestsCount","fromError","ui8Arr","dataArray","hasXHR2","yeast","doOpen","poll","onPause","decodePayload","doClose","packets","callbackfn","encodePayload","schema","decodePacket","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","ary","eachWithIndex","hasBinary","sliceBuffer","base64encoder","utf8","isPhantomJS","pong","packetslist","utf8encode","readAsDataURL","b64data","typed","basic","utf8decode","decodeBase64Packet","asArray","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","decodePayloadAsBinary","totalLength","resultArray","bufferIndex","isString","ab","lenStr","binaryIdentifier","lengthAry","bufferTail","numberTooLong","tailArray","msgLength","_hasBinary","arraybuffer","abv","encoded1","encoded2","encoded3","encoded4","bufferLength","err_cb","proxy","bail","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","mapArrayBufferViews","chunk","copy","byteOffset","BlobBuilderConstructor","bb","BlobConstructor","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","qs","qry","alphabet","decoded","JSONPPolling","___eio","script","rNewline","rEscapedNewline","iframe","insertAt","getElementsByTagName","insertBefore","isUAgecko","initIframe","iframeId","area","submit","WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","ws","supports","addEventListeners","ev","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","acks","receiveBuffer","sendBuffer","disconnected","toArray","hasBin","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","parserType","flags","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","rand","deviation"],"mappings":"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","file":"telepat0.3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Telepat\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Telepat\"] = factory();\n\telse\n\t\troot[\"Telepat\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Telepat\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Telepat\"] = factory();\n\telse\n\t\troot[\"Telepat\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fs = __webpack_require__(2);\n\t\n\tvar _fs2 = _interopRequireDefault(_fs);\n\t\n\tvar _pouchdb = __webpack_require__(3);\n\t\n\tvar _pouchdb2 = _interopRequireDefault(_pouchdb);\n\t\n\tvar _api = __webpack_require__(17);\n\t\n\tvar _api2 = _interopRequireDefault(_api);\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _error = __webpack_require__(27);\n\t\n\tvar _error2 = _interopRequireDefault(_error);\n\t\n\tvar _event = __webpack_require__(28);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _monitor = __webpack_require__(29);\n\t\n\tvar _monitor2 = _interopRequireDefault(_monitor);\n\t\n\tvar _channel = __webpack_require__(66);\n\t\n\tvar _channel2 = _interopRequireDefault(_channel);\n\t\n\tvar _user = __webpack_require__(67);\n\t\n\tvar _user2 = _interopRequireDefault(_user);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * The `Telepat` object is the first object you want to instantiate while working with the Telepat SDK.\n\t * It exposes methods and properties that enable you to register, login, subscribe to objects and to users.\n\t *\n\t * @class Telepat\n\t *\n\t * @example\n\t * let telepat = new Telepat();\n\t * telepat.connect({\n\t *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n\t *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n\t *  apiKey: 'APP-API-KEY',\n\t *  appId: 'APP-ID'\n\t * }, (err, res) => {\n\t *  if (err) {\n\t *    // Treat connection error\n\t *    console.log(err);\n\t *    return;\n\t *  }\n\t *\n\t *  // Display all collections\n\t *  console.log(telepat.collections);\n\t *\n\t *  // Login, display and update user data\n\t *  telepat.on('login', () => {\n\t *    console.log(telepat.user.data);\n\t *    telepat.user.data.change = true;\n\t *  });\n\t *  telepat.user.login('user', 'pass');\n\t *\n\t *  // Subscribe to data\n\t *  let articleChannel = telepat.subscribe({\n\t *    channel: {\n\t *      context: 'collection-identifier',\n\t *      model: 'article'\n\t *    }\n\t *  }, () => {\n\t *    console.log(articleChannel.objectsArray);\n\t *    articleChannel.objects['object-identifier'].title = 'new title';\n\t *\n\t *    articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n\t *      // Update interface on data updates\n\t *    });\n\t *  });\n\t * });\n\t */\n\tvar Telepat = function () {\n\t  function Telepat() {\n\t    _classCallCheck(this, Telepat);\n\t\n\t    function getUserHome() {\n\t      return process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'];\n\t    }\n\t\n\t    function getTelepatDir() {\n\t      var dir = getUserHome() + '/.telepat-cli';\n\t\n\t      if (!_fs2.default.existsSync(dir)) {\n\t        _fs2.default.mkdirSync(dir, 744);\n\t      }\n\t      return dir;\n\t    }\n\t\n\t    this._db = new _pouchdb2.default(typeof window !== 'undefined' ? '/_telepat' : getTelepatDir());\n\t    this._event = new _event2.default(_logger2.default);\n\t    this._monitor = new _monitor2.default();\n\t    this._socketEndpoint = null;\n\t    this._socket = null;\n\t    this._persistentConnectionOptions = null;\n\t    this._sessionId = null;\n\t\n\t    /**\n\t     * Indicates whether the current instance is connected to the backend\n\t     * @type {boolean}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.connected = false;\n\t    /**\n\t     * Indicates whether the current instance is in the process of connecting to the backend.\n\t     * If true, the `connect` event will be fired as soon as connection is established.\n\t     * @type {boolean}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.connecting = false;\n\t    /**\n\t     * Indicates whether the current instance is properly configured and ready for connection.\n\t     * @type {boolean}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.configured = false;\n\t    /**\n\t     * If connected, this property reflects the current app id.\n\t     * @type {string}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.currentAppId = null;\n\t    /**\n\t     * This object contains details about all the collections available for the currently connected application.\n\t     * You can read this after the `connect` event is emitted, or if the `connected` property is true.\n\t     * Each available collection is stored as an Object, using a key whose name is equal to the collection's id.\n\t     * Modifications to collection objects stored within will be automatically synchronized with the Telepat backend.\n\t     * @type {Object}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.collections = {};\n\t    /**\n\t     * This object contains references to all of the {@link Channel}s that are actively subscribed.\n\t     * Each channel is stored using a key equal to the channel's unique identifier.\n\t     * @type {Object}\n\t     * @memberof Telepat\n\t     * @instance\n\t     */\n\t    this.subscriptions = {};\n\t    /**\n\t     * This property becomes available after successfully logging in as an administrator.\n\t     * It gives you access to a instance of the {@link Admin} class, allowing you access to administrator functionality.\n\t     * @type {Admin}\n\t     * @memberof Telepat\n\t     * @instance\n\t     *\n\t     * @example\n\t     * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n\t     *  if (err) {\n\t     *    // Treat login error\n\t     *  } else {\n\t     *    telepat.admin.getAppUsers((err) => {\n\t     *      if (err) {\n\t     *        // Treat error\n\t     *      } else {\n\t     *        // Treat success\n\t     *        console.log(telepat.admin.users);\n\t     *      }\n\t     *    })\n\t     *  }\n\t     * });\n\t     */\n\t    this.admin = null;\n\t    /**\n\t     * An instance of the {@link User} class, this allows you to access user functionality like logging in,\n\t     * accessing and modifying current user data or registering new user accounts.\n\t     * @type {User}\n\t     * @memberof Telepat\n\t     * @instance\n\t     *\n\t     * @example\n\t     * telepat.user.login('email', 'password', (err) => {\n\t     *  if (err) {\n\t     *    // Treat login error\n\t     *  } else {\n\t     *    // Treat successful login\n\t     *    console.log(telepat.user.data);\n\t     *  }\n\t     * });\n\t     */\n\t    this.user = null;\n\t    this.collectionEvent = new _event2.default(_logger2.default);\n\t  }\n\t\n\t  _createClass(Telepat, [{\n\t    key: 'getCollections',\n\t    value: function getCollections() {\n\t      var _this = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.get('context/all', '', function (err, res) {\n\t        if (err) {\n\t          var resultingError = (0, _error2.default)('Error retrieving collections ' + err);\n\t\n\t          _this.callback(resultingError, null);\n\t          _this._event.emit('error', resultingError);\n\t        } else {\n\t          _this._monitor.remove({ channel: { model: 'context' } });\n\t          _this.collections = {};\n\t          for (var index in res.body.content) {\n\t            _this.collections[res.body.content[index].id] = res.body.content[index];\n\t          }\n\t\n\t          _this._monitor.add({ channel: { model: 'context' } }, _this.collections, _this.collectionEvent, _this._addCollection.bind(_this), _this._deleteCollection.bind(_this), _this._updateCollection.bind(_this));\n\t          _this.collectionEvent.on('update', function (operation, parentId, parentObject, delta) {\n\t            _this._event.emit('collections-update');\n\t          });\n\t          callback(null, _this.collections);\n\t          _this._event.emit('collections-update');\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: '_addCollection',\n\t    value: function _addCollection(collection) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      if (this.admin) {\n\t        this.admin.addCollection(collection, callback);\n\t      } else {\n\t        _logger2.default.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n\t      }\n\t    }\n\t  }, {\n\t    key: '_updateCollection',\n\t    value: function _updateCollection(id, patches) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      if (this.admin) {\n\t        this.admin.updateCollection(id, patches, callback);\n\t      } else {\n\t        _logger2.default.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n\t      }\n\t    }\n\t  }, {\n\t    key: '_deleteCollection',\n\t    value: function _deleteCollection(id) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      if (this.admin) {\n\t        this.admin.deleteCollection(id, callback);\n\t      } else {\n\t        _logger2.default.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n\t      }\n\t    }\n\t  }, {\n\t    key: '_updateUser',\n\t    value: function _updateUser() {\n\t      var _this2 = this;\n\t\n\t      var reauth = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      if (!this.user) {\n\t        this.user = new _user2.default(this._db, this._event, this._monitor, function (newAdmin) {\n\t          _this2.admin = newAdmin;\n\t        }, function () {\n\t          if (reauth) {\n\t            _this2.user.reauth(callback);\n\t          } else {\n\t            callback(null);\n\t          }\n\t        });\n\t      } else {\n\t        callback(null);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Call this to configure Telepat server endpoints without connecting to a specific app.\n\t     *\n\t     * @param {Object} options Object containing all configuration options for connection\n\t     * @param {string} options.apiEndpoint The Telepat API endpoint URL\n\t     * @param {string} options.socketEndpoint The Telepat socket endpoint URL\n\t     * @param {boolean} [options.reauth=false] Should reauth previously logged in user on connection\n\t     * @param {TelepatCallback} callback Callback invoked after configuration is finished\n\t     * @fires Telepat.event:configure\n\t     *\n\t     * @example\n\t     * let telepat = new Telepat();\n\t     * telepat.configure({\n\t     *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n\t     *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT'\n\t     * }, (err, res) => {\n\t     *  // Handle configuration\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'configure',\n\t    value: function configure() {\n\t      var _this3 = this;\n\t\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      if (typeof options.apiEndpoint !== 'undefined') {\n\t        _api2.default.apiEndpoint = options.apiEndpoint + '/';\n\t      } else {\n\t        callback((0, _error2.default)('Configure options must provide an apiEndpoint property'));\n\t      }\n\t      // - `socketEndpoint`: the host and port number for the socket service\n\t      if (typeof options.socketEndpoint !== 'undefined') {\n\t        this._socketEndpoint = options.socketEndpoint;\n\t      } else {\n\t        callback((0, _error2.default)('Configure options must provide an socketEndpoint property'));\n\t      }\n\t\n\t      this._updateUser(options.reauth, function () {\n\t        _this3._event.emit('configure');\n\t        _this3.configured = true;\n\t        callback(null, _this3);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to connect to a specific Telepat app.\n\t     * This is usually the first thing you need to do after instantiating the Telepat object.\n\t     *\n\t     * @param {Object} options Object containing all configuration options for connection\n\t     * @param {string} options.apiKey Your app API key\n\t     * @param {string} options.appId Your app id\n\t     * @param {string} [options.apiEndpoint] The Telepat API endpoint URL. If this is absent from the connect options, it must have been previously set by calling {@link #Telepat#configure configure}.\n\t     * @param {string} [options.socketEndpoint] The Telepat socket endpoint URL.\n\t     *  If this is absent from the connect options, it must have been previously set by calling {@link #Telepat#configure configure}.\n\t     * @param {boolean} [options.reauth=false] Should reauth previously logged in user on connection\n\t     * @param {Object} [options.persistentConnection=null] Set this to configure receiving updates via persistent channels, like push notifications.\n\t     * @param {Object} [options.ioOptions={}] Configuration options for socket.io\n\t     * @param {boolean} [options.updateUDID=false] Set this to true to force the client to update the saved device identifier.\n\t     * @param {number} [options.timerInterval=150] Frequency of running diff (in miliseconds) to check for object updates.\n\t     * @param {TelepatCallback} callback Callback invoked after configuration is finished\n\t     * @fires Telepat.event:connect\n\t     * @fires Telepat.event:disconnect\n\t     *\n\t     * @example\n\t     * // Simple connection to backend\n\t     *\n\t     * let telepat = new Telepat();\n\t     * telepat.connect({\n\t     *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n\t     *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n\t     *  apiKey: 'APP-API-KEY',\n\t     *  appId: 'APP-ID'\n\t     * }, (err, res) => {\n\t     *  // Handle connection\n\t     * });\n\t     *\n\t     * @example\n\t     * // Using connection event\n\t     *\n\t     * let telepat = new Telepat();\n\t     * telepat.connect({\n\t     *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n\t     *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n\t     *  apiKey: 'APP-API-KEY',\n\t     *  appId: 'APP-ID'\n\t     * });\n\t     * let connectCallbackId = telepat.on('connect', {\n\t     *  telepat.removeCallback(connectCallbackId);\n\t     *  // Handle connection\n\t     * });\n\t     *\n\t     * @example\n\t     * // Activating the push notifications transport.\n\t     * // Do this when running inside a mobile OS, for example.\n\t     * telepat.connect({\n\t     *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n\t     *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n\t     *  apiKey: 'APP-API-KEY',\n\t     *  appId: 'APP-ID',\n\t     *  persistentConnection: {\n\t     *    type: 'ios',\n\t     *    token: 'DEVICE-NOTIFICATION-TOKEN',\n\t     *    active: 1\n\t     *  }\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'connect',\n\t    value: function connect() {\n\t      var _this4 = this;\n\t\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      var self = this;\n\t\n\t      function completeRegistration(res) {\n\t        if (res.body.content.identifier !== undefined) {\n\t          _api2.default.UDID = res.body.content.identifier;\n\t          _logger2.default.info('Received new UDID: ' + _api2.default.UDID);\n\t\n\t          self._db.get(':deviceId').then(function (doc) {\n\t            doc[_api2.default.appId] = _api2.default.UDID;\n\t            _logger2.default.warn('Replacing existing UDID');\n\t            self._db.put(doc).catch(function (err) {\n\t              _logger2.default.warn('Could not persist UDID. Error: ' + err);\n\t            });\n\t          }).catch(function () {\n\t            var newObject = {\n\t              _id: ':deviceId'\n\t            };\n\t\n\t            newObject[_api2.default.appId] = _api2.default.UDID;\n\t            self._db.put(newObject).catch(function (err) {\n\t              _logger2.default.warn('Could not persist UDID. Error: ' + err);\n\t            });\n\t          });\n\t        }\n\t        self._socket.emit('bind_device', {\n\t          'device_id': _api2.default.UDID,\n\t          'application_id': _api2.default.appId\n\t        });\n\t\n\t        _logger2.default.info('Connection established');\n\t\n\t        self.getCollections(function () {\n\t          self._updateUser(options.reauth, function () {\n\t            self.currentAppId = _api2.default.appId;\n\t            self.connected = true;\n\t            self.connecting = false;\n\t            self._event.emit('connect');\n\t            callback(null, self);\n\t          });\n\t        });\n\t        return true;\n\t      }\n\t\n\t      function registerDevice() {\n\t        var request = {\n\t          'info': {\n\t            'os': 'web',\n\t            'userAgent': typeof navigator !== 'undefined' ? navigator.userAgent : 'node'\n\t          },\n\t          'volatile': {\n\t            'type': 'sockets',\n\t            'active': 1,\n\t            'token': self._sessionId\n\t          }\n\t        };\n\t\n\t        if (self._persistentConnectionOptions) {\n\t          request.persistent = self._persistentConnectionOptions;\n\t          if (request.persistent.active === 1) {\n\t            request.volatile.active = 0;\n\t          }\n\t        }\n\t        _api2.default.call('device/register', request, function (err, res) {\n\t          if (err) {\n\t            _api2.default.UDID = null;\n\t            _api2.default.call('device/register', request, function (err, res) {\n\t              if (err) {\n\t                self._socket.disconnect();\n\t                self._event.emit('disconnect', err);\n\t                self.currentAppId = null;\n\t                self.connected = false;\n\t                self.connecting = false;\n\t                callback((0, _error2.default)('Device registration failed with error: ' + err));\n\t              } else {\n\t                completeRegistration(res);\n\t              }\n\t            });\n\t          } else {\n\t            completeRegistration(res);\n\t          }\n\t        });\n\t      }\n\t\n\t      if (typeof options !== 'undefined') {\n\t        if (typeof options.apiKey === 'undefined') {\n\t          return callback((0, _error2.default)('Connect options must provide an apiKey property'));\n\t        }\n\t        if (typeof options.appId === 'undefined') {\n\t          return callback((0, _error2.default)('Connect options must provide an appId property'));\n\t        }\n\t        if (typeof options.apiEndpoint !== 'undefined') {\n\t          _api2.default.apiEndpoint = options.apiEndpoint + '/';\n\t        } else if (!_api2.default.apiEndpoint) {\n\t          return callback((0, _error2.default)('Connect options must provide an apiEndpoint property, or you must run `configure` first'));\n\t        }\n\t        if (typeof options.socketEndpoint !== 'undefined') {\n\t          this._socketEndpoint = options.socketEndpoint;\n\t        } else if (!this._socketEndpoint) {\n\t          return callback((0, _error2.default)('Connect options must provide an socketEndpoint property, or you must run `configure` first'));\n\t        }\n\t        if (typeof options.timerInterval !== 'undefined') {\n\t          this._monitor.timerInterval = options.timerInterval;\n\t        }\n\t      } else {\n\t        return callback((0, _error2.default)('Options object not provided to the connect function'));\n\t      }\n\t\n\t      this.connecting = true;\n\t\n\t      if (this.connected) {\n\t        this.disconnect();\n\t      }\n\t\n\t      _api2.default.apiKey = options.apiKey;\n\t      _api2.default.appId = options.appId;\n\t\n\t      if (this.admin && this.admin.apps) {\n\t        this.admin.app = this.admin.apps[_api2.default.appId];\n\t      }\n\t\n\t      this._persistentConnectionOptions = options.persistentConnection || this._persistentConnectionOptions;\n\t\n\t      this._socket = __webpack_require__(69)(this._socketEndpoint, options.ioOptions || {});\n\t      _logger2.default.info('Connecting to socket service ' + this._socketEndpoint);\n\t\n\t      if (true) {\n\t        // eslint-disable-line no-undef\n\t        this._socket.on('welcome', function (data) {\n\t          _this4._sessionId = data.sessionId;\n\t\n\t          if (options.updateUDID) {\n\t            registerDevice();\n\t          } else {\n\t            _this4._db.get(':deviceId').then(function (doc) {\n\t              if (doc[_api2.default.appId]) {\n\t                _api2.default.UDID = doc[_api2.default.appId];\n\t                _logger2.default.info('Retrieved saved UDID: ' + _api2.default.UDID);\n\t              }\n\t              registerDevice();\n\t            }).catch(function () {\n\t              registerDevice();\n\t            });\n\t          }\n\t        });\n\t      } else {\n\t        if (options.updateUDID) {\n\t          registerDevice();\n\t        } else {\n\t          this._db.get(':deviceId').then(function (doc) {\n\t            if (doc[_api2.default.appId]) {\n\t              _api2.default.UDID = doc[_api2.default.appId];\n\t              _logger2.default.info('Retrieved saved UDID: ' + _api2.default.UDID);\n\t            }\n\t            registerDevice();\n\t          }).catch(function () {\n\t            registerDevice();\n\t          });\n\t        }\n\t      }\n\t\n\t      this._socket.on('message', function (message) {\n\t        _this4._monitor.processMessage(message);\n\t      });\n\t\n\t      this._socket.on('context-update', function () {\n\t        _this4.getCollections();\n\t      });\n\t\n\t      this._socket.on('disconnect', function () {});\n\t\n\t      this._socket.on('reconnect', function () {\n\t        self._socket.emit('bind_device', {\n\t          'device_id': _api2.default.UDID,\n\t          'application_id': _api2.default.appId\n\t        });\n\t      });\n\t\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Call this function to disconnect the client from the Telepat backend.\n\t     * @fires Telepat.event:disconnect\n\t     */\n\t\n\t  }, {\n\t    key: 'disconnect',\n\t    value: function disconnect() {\n\t      var _this5 = this;\n\t\n\t      this._socket.close();\n\t      this._socket = null;\n\t      this._sessionId = null;\n\t      this.collections = null;\n\t      this._monitor.remove({ channel: { model: 'context' } });\n\t\n\t      for (var key in this.subscriptions) {\n\t        this.subscriptions[key].unsubscribe();\n\t      }\n\t      this.subscriptions = {};\n\t\n\t      if (!this.user.isAdmin) {\n\t        this.user.logout(function () {\n\t          _this5.admin.unhook();\n\t          _this5.admin = null;\n\t          _this5.user = null;\n\t        });\n\t      }\n\t\n\t      _api2.default.apiKey = null;\n\t      _api2.default.appId = null;\n\t      _api2.default.UDID = null;\n\t\n\t      this._event.emit('disconnect');\n\t      this.currentAppId = null;\n\t      this.connected = false;\n\t    }\n\t  }, {\n\t    key: 'processMessage',\n\t\n\t\n\t    /**\n\t     * Forwards messages reveived via external channels to the processing unit.\n\t     * Use this if you've configured external transports (like push notifications), and you need to pass received payloads\n\t     * to the processing engine.\n\t     *\n\t     * @param {string} message The delta update notification received from Telepat\n\t     */\n\t    value: function processMessage(message) {\n\t      this._monitor.processMessage(message);\n\t    }\n\t\n\t    /**\n\t     * You can tweak the logger verbosity using this function.\n\t     *\n\t     * @param {string} level One of `'debug'`, `'info'`, `'warn'` or `'error'`\n\t     */\n\t\n\t  }, {\n\t    key: 'setLogLevel',\n\t    value: function setLogLevel(level) {\n\t      _logger2.default.setLevel(level);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Invoked when client has connected to the backend.\n\t     *\n\t     * @event connect\n\t     */\n\t    /**\n\t     * Invoked when client has disconnected from the backend.\n\t     *\n\t     * @event disconnect\n\t     * @type {Error}\n\t     */\n\t    /**\n\t     * Invoked when client configuration has completed.\n\t     *\n\t     * @event configure\n\t     */\n\t    /**\n\t     * Invoked on any operation error.\n\t     *\n\t     * @event error\n\t     * @type {Error}\n\t     */\n\t    /**\n\t     * Invoked when the available collections have updated.\n\t     *\n\t     * @event collections-update\n\t     */\n\t    /**\n\t     * Invoked when client has successfully logged in.\n\t     *\n\t     * @event login\n\t     */\n\t    /**\n\t     * Invoked when there was an error with logging in.\n\t     *\n\t     * @event login-error\n\t     * @type {Error}\n\t     */\n\t    /**\n\t     * Invoked when client has successfully logged out.\n\t     *\n\t     * @event logout\n\t     */\n\t    /**\n\t     * Invoked when there was an error with logging out.\n\t     *\n\t     * @event logout-error\n\t     * @type {Error}\n\t     */\n\t\n\t    /**\n\t     * Call this function to add callbacks to be invoked on event triggers.\n\t     * Available callbacks:\n\t     *\n\t     * | Name                                                         | Description           |\n\t     * | ------------------------------------------------------------ | --------------------- |\n\t     * | {@link #Telepat.event:connect connect}                       | Invoked when client has connected to the backend |\n\t     * | {@link #Telepat.event:disconnect disconnect}                 | Invoked when client has disconnected from the backend |\n\t     * | {@link #Telepat.event:configure configure}                   | Invoked when client configuration has completed |\n\t     * | {@link #Telepat.event:error error}                           | Invoked on any operation error |\n\t     * | {@link #Telepat.event:collections-update collections-update} | Invoked when the available collections have updated |\n\t     * | {@link #Telepat.event:login login}                           | Invoked when client has successfully logged in |\n\t     * | {@link #Telepat.event:login-error login-error}               | Invoked when there was an error with logging in |\n\t     * | {@link #Telepat.event:logout logout}                         | Invoked when client has successfully logged out |\n\t     * | {@link #Telepat.event:logout-error logout-error}             | Invoked when there was an error with logging out |\n\t     *\n\t     * @param {string} name The name of the event to associate the callback with\n\t     * @param {function} callback The callback to be executed\n\t     * @return {number} A callback id. Save this in order to later remove the callback from the event (using {@link #Telepat#removeCallback removeCallback})\n\t     *\n\t     * @example\n\t     * telepat.on('connect', () => {\n\t     *  console.log('connected');\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(name, callback) {\n\t      return this._event.on(name, callback);\n\t    }\n\t  }, {\n\t    key: 'removeCallback',\n\t\n\t\n\t    /**\n\t     * Call this function to remove callbacks that have been set using {@link #Telepat#on on}.\n\t     *\n\t     * @param {string} name The name of the event the callback was associated with\n\t     * @param {number} callbackId The callback id returned by calling {@link #Telepat#on on}\n\t     *\n\t     * @example\n\t     * let connectCallbackId = telepat.on('connect', () => {\n\t     *  // Remove the callback after the first connection event\n\t     *  telepat.removeCallback(connectCallbackId);\n\t     * });\n\t     */\n\t    value: function removeCallback(name, index) {\n\t      return this._event.removeCallback(name, index);\n\t    }\n\t  }, {\n\t    key: 'subscribe',\n\t\n\t\n\t    /**\n\t     * Use this function to create a new {@link Channel} object and retrieve its objects.\n\t     *\n\t     * @param {Object} options The object describing the required subscription\n\t     * @param {function} onSubscribe Callback invoked when subscription is ready\n\t     * @param {Object} [options.channel] Describes the basic properties of the objects requested\n\t     * @param {string} [options.channel.context] The id of the collection in which you're searching for objects\n\t     * @param {string} [options.channel.model] The model of the objects you're searching for (needs to be defined in the schema first)\n\t     * @param {string} [options.channel.id] If set, specifies the id of the unique object that you're querying for\n\t     * @param {Object} [options.channel.parent] If set, specifies the parent id and parent model of the objects you're querying for.\n\t     * @param {string} [options.channel.parent.model] The model of the parent object\n\t     * @param {string} [options.channel.parent.id] The id of the parent object\n\t     * @param {string} [options.channel.user] If set, specifies the user id of the creator of the objects you're querying for.\n\t     * @param {Object} [options.sort] An object that defines how returned objects should be sorted. Each object key is a property name, and each value can be either `asc` or `desc`.\n\t     * @param {Object} [options.filters] An object describing how returned objects should be filtered.\n\t     * @param {number} [options.offset] The offset that should be applied for the returned objects (for pagination)\n\t     * @param {number} [options.limit] The maximum number of objects to be returned in this batch (for pagination)\n\t     * @return {Channel} The new {@link Channel} object\n\t     *\n\t     * @example\n\t     * // A simple subscription to all objects of type `article`\n\t     * // in a specific collection\n\t     *\n\t     * let articleChannel = telepat.subscribe({\n\t     *  channel: {\n\t     *    context: 'context-unique-identifier',\n\t     *    model: 'article'\n\t     *  }\n\t     * }, () => {\n\t     *  console.log(articleChannel.objectsArray);\n\t     * });\n\t     *\n\t     * @example\n\t     * // A filtered subscription to all objects of type `article`\n\t     * // in a specific collection, that have one of two specific tag values\n\t     *\n\t     * let articleChannel = telepat.subscribe({\n\t     *  channel: {\n\t     *    context: 'context-unique-identifier',\n\t     *    model: 'article'\n\t     *  },\n\t     *  filters: {\n\t     *    or: [\n\t     *      {\n\t     *        is: {\n\t     *          tag: 'specific-tag-value'\n\t     *        }\n\t     *      },\n\t     *      {\n\t     *        is: {\n\t     *          tag: 'another-tag-value'\n\t     *        }\n\t     *      }\n\t     *    ]\n\t     *  }\n\t     * }, () => {\n\t     *  console.log(articleChannel.objectsArray);\n\t     * });\n\t     *\n\t     * @example\n\t     * // A simple subscription to all objects of type `article`\n\t     * // in a specific collection, sorted by created date descending\n\t     *\n\t     * let articleChannel = telepat.subscribe({\n\t     *  channel: {\n\t     *    context: 'context-unique-identifier',\n\t     *    model: 'article'\n\t     *  },\n\t     *  sort: {\n\t     *    created: 'desc'\n\t     *  }\n\t     * }, () => {\n\t     *  console.log(articleChannel.objectsArray);\n\t     * });\n\t     *\n\t     * @example\n\t     * // A simple subscription to all objects of type `comment`\n\t     * // in a specific collection, that belong to a specific article parent\n\t     *\n\t     * let articleChannel = telepat.subscribe({\n\t     *  channel: {\n\t     *    context: 'context-unique-identifier',\n\t     *    model: 'comment',\n\t     *    parent: {\n\t     *      model: 'article',\n\t     *      id: 'article-parent-unique-identifier'\n\t     *    }\n\t     *  }\n\t     * }, () => {\n\t     *  console.log(articleChannel.objectsArray);\n\t     * });\n\t     */\n\t    value: function subscribe(options, onSubscribe) {\n\t      var _this6 = this;\n\t\n\t      var channel = new _channel2.default(this._monitor, options);\n\t      var key = _monitor2.default.subscriptionKeyForOptions(options);\n\t\n\t      this.subscriptions[key] = channel;\n\t      channel.subscribe();\n\t      if (onSubscribe !== undefined) {\n\t        channel.on('subscribe', onSubscribe);\n\t      }\n\t      channel.on('_unsubscribe', function () {\n\t        delete _this6.subscriptions[key];\n\t      });\n\t      return channel;\n\t    }\n\t  }, {\n\t    key: 'getChannel',\n\t\n\t\n\t    /**\n\t     * Same as {@link #Telepat#subscribe subscribe} method, but returns the new {@link Channel} object without calling subscribe on it.\n\t     *\n\t     * @param  {Object} options Same as {@link #Telepat#subscribe subscribe} Options\n\t     * @return {Channel} The new {@link Channel} object\n\t     */\n\t    value: function getChannel(options) {\n\t      var key = _monitor2.default.subscriptionKeyForOptions(options);\n\t\n\t      if (this.subscriptions[key]) {\n\t        return this.subscriptions[key];\n\t      }\n\t      return new _channel2.default(this._monitor, options);\n\t    }\n\t  }, {\n\t    key: 'sendEmail',\n\t    value: function sendEmail(from, fromName, to, subject, body, callback) {\n\t      _api2.default.call('/email', {\n\t        'recipients': to,\n\t        'from': from,\n\t        'from_name': fromName,\n\t        'subject': subject,\n\t        'body': body\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Send email failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'get',\n\t    value: function get(options, callback) {\n\t      var _this7 = this;\n\t\n\t      options['no_subscribe'] = true;\n\t      _api2.default.call('object/subscribe', options, function (err, res) {\n\t        if (err) {\n\t          _this7._event.emit('error', (0, _error2.default)('Get objects failed with error: ' + err));\n\t          callback((0, _error2.default)('Get objects failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Telepat;\n\t}();\n\t\n\texports.default = Telepat;\n\t;\n\t\n\t/**\n\t * This callback is displayed as part of the Requester class.\n\t * @callback TelepatCallback\n\t * @param {Error} err If there was an error processing the requested operation, this will reference the error object resulted\n\t * @param {*} res The operation response\n\t */\n\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tconsole.log(\"I'm `fs` modules\");\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar jsExtend = __webpack_require__(4);\n\tvar debug = _interopDefault(__webpack_require__(5));\n\tvar inherits = _interopDefault(__webpack_require__(8));\n\tvar lie = _interopDefault(__webpack_require__(9));\n\tvar events = __webpack_require__(11);\n\tvar getArguments = _interopDefault(__webpack_require__(12));\n\tvar scopedEval = _interopDefault(__webpack_require__(13));\n\tvar Md5 = _interopDefault(__webpack_require__(14));\n\tvar vuvuzela = _interopDefault(__webpack_require__(15));\n\tvar PromisePool = _interopDefault(__webpack_require__(16));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\t\n\t// based on https://github.com/montagejs/collections\n\tfunction mangle(key) {\n\t  return '$' + key;\n\t}\n\tfunction unmangle(key) {\n\t  return key.substring(1);\n\t}\n\tfunction _Map() {\n\t  this.store = {};\n\t}\n\t_Map.prototype.get = function (key) {\n\t  var mangled = mangle(key);\n\t  return this.store[mangled];\n\t};\n\t_Map.prototype.set = function (key, value) {\n\t  var mangled = mangle(key);\n\t  this.store[mangled] = value;\n\t  return true;\n\t};\n\t_Map.prototype.has = function (key) {\n\t  var mangled = mangle(key);\n\t  return mangled in this.store;\n\t};\n\t_Map.prototype.delete = function (key) {\n\t  var mangled = mangle(key);\n\t  var res = mangled in this.store;\n\t  delete this.store[mangled];\n\t  return res;\n\t};\n\t_Map.prototype.forEach = function (cb) {\n\t  var keys = Object.keys(this.store);\n\t  for (var i = 0, len = keys.length; i < len; i++) {\n\t    var key = keys[i];\n\t    var value = this.store[key];\n\t    key = unmangle(key);\n\t    cb(value, key);\n\t  }\n\t};\n\t\n\tfunction _Set(array) {\n\t  this.store = new _Map();\n\t\n\t  // init with an array\n\t  if (array && Array.isArray(array)) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      this.add(array[i]);\n\t    }\n\t  }\n\t}\n\t_Set.prototype.add = function (key) {\n\t  return this.store.set(key, true);\n\t};\n\t_Set.prototype.has = function (key) {\n\t  return this.store.has(key);\n\t};\n\t\n\tfunction isBinaryObject(object) {\n\t  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n\t    (typeof Blob !== 'undefined' && object instanceof Blob);\n\t}\n\t\n\tfunction cloneArrayBuffer(buff) {\n\t  if (typeof buff.slice === 'function') {\n\t    return buff.slice(0);\n\t  }\n\t  // IE10-11 slice() polyfill\n\t  var target = new ArrayBuffer(buff.byteLength);\n\t  var targetArray = new Uint8Array(target);\n\t  var sourceArray = new Uint8Array(buff);\n\t  targetArray.set(sourceArray);\n\t  return target;\n\t}\n\t\n\tfunction cloneBinaryObject(object) {\n\t  if (object instanceof ArrayBuffer) {\n\t    return cloneArrayBuffer(object);\n\t  }\n\t  var size = object.size;\n\t  var type = object.type;\n\t  // Blob\n\t  if (typeof object.slice === 'function') {\n\t    return object.slice(0, size, type);\n\t  }\n\t  // PhantomJS slice() replacement\n\t  return object.webkitSlice(0, size, type);\n\t}\n\t\n\t// most of this is borrowed from lodash.isPlainObject:\n\t// https://github.com/fis-components/lodash.isplainobject/\n\t// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\t\n\tvar funcToString = Function.prototype.toString;\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\tfunction isPlainObject(value) {\n\t  var proto = Object.getPrototypeOf(value);\n\t  /* istanbul ignore if */\n\t  if (proto === null) { // not sure when this happens, but I guess it can\n\t    return true;\n\t  }\n\t  var Ctor = proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tfunction clone(object) {\n\t  var newObject;\n\t  var i;\n\t  var len;\n\t\n\t  if (!object || typeof object !== 'object') {\n\t    return object;\n\t  }\n\t\n\t  if (Array.isArray(object)) {\n\t    newObject = [];\n\t    for (i = 0, len = object.length; i < len; i++) {\n\t      newObject[i] = clone(object[i]);\n\t    }\n\t    return newObject;\n\t  }\n\t\n\t  // special case: to avoid inconsistencies between IndexedDB\n\t  // and other backends, we automatically stringify Dates\n\t  if (object instanceof Date) {\n\t    return object.toISOString();\n\t  }\n\t\n\t  if (isBinaryObject(object)) {\n\t    return cloneBinaryObject(object);\n\t  }\n\t\n\t  if (!isPlainObject(object)) {\n\t    return object; // don't clone objects like Workers\n\t  }\n\t\n\t  newObject = {};\n\t  for (i in object) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(object, i)) {\n\t      var value = clone(object[i]);\n\t      if (typeof value !== 'undefined') {\n\t        newObject[i] = value;\n\t      }\n\t    }\n\t  }\n\t  return newObject;\n\t}\n\t\n\tfunction once(fun) {\n\t  var called = false;\n\t  return getArguments(function (args) {\n\t    /* istanbul ignore if */\n\t    if (called) {\n\t      // this is a smoke test and should never actually happen\n\t      throw new Error('once called more than once');\n\t    } else {\n\t      called = true;\n\t      fun.apply(this, args);\n\t    }\n\t  });\n\t}\n\t\n\tfunction toPromise(func) {\n\t  //create the function we will be returning\n\t  return getArguments(function (args) {\n\t    // Clone arguments\n\t    args = clone(args);\n\t    var self = this;\n\t    var tempCB =\n\t      (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n\t    // if the last argument is a function, assume its a callback\n\t    var usedCB;\n\t    if (tempCB) {\n\t      // if it was a callback, create a new callback which calls it,\n\t      // but do so async so we don't trap any errors\n\t      usedCB = function (err, resp) {\n\t        process.nextTick(function () {\n\t          tempCB(err, resp);\n\t        });\n\t      };\n\t    }\n\t    var promise = new PouchPromise(function (fulfill, reject) {\n\t      var resp;\n\t      try {\n\t        var callback = once(function (err, mesg) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            fulfill(mesg);\n\t          }\n\t        });\n\t        // create a callback for this invocation\n\t        // apply the function in the orig context\n\t        args.push(callback);\n\t        resp = func.apply(self, args);\n\t        if (resp && typeof resp.then === 'function') {\n\t          fulfill(resp);\n\t        }\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    });\n\t    // if there is a callback, call it back\n\t    if (usedCB) {\n\t      promise.then(function (result) {\n\t        usedCB(null, result);\n\t      }, usedCB);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\tvar log = debug('pouchdb:api');\n\t\n\tfunction adapterFun(name, callback) {\n\t  function logApiCall(self, name, args) {\n\t    /* istanbul ignore if */\n\t    if (log.enabled) {\n\t      var logArgs = [self.name, name];\n\t      for (var i = 0; i < args.length - 1; i++) {\n\t        logArgs.push(args[i]);\n\t      }\n\t      log.apply(null, logArgs);\n\t\n\t      // override the callback itself to log the response\n\t      var origCallback = args[args.length - 1];\n\t      args[args.length - 1] = function (err, res) {\n\t        var responseArgs = [self.name, name];\n\t        responseArgs = responseArgs.concat(\n\t          err ? ['error', err] : ['success', res]\n\t        );\n\t        log.apply(null, responseArgs);\n\t        origCallback(err, res);\n\t      };\n\t    }\n\t  }\n\t\n\t  return toPromise(getArguments(function (args) {\n\t    if (this._closed) {\n\t      return PouchPromise.reject(new Error('database is closed'));\n\t    }\n\t    if (this._destroyed) {\n\t      return PouchPromise.reject(new Error('database is destroyed'));\n\t    }\n\t    var self = this;\n\t    logApiCall(self, name, args);\n\t    if (!this.taskqueue.isReady) {\n\t      return new PouchPromise(function (fulfill, reject) {\n\t        self.taskqueue.addTask(function (failed) {\n\t          if (failed) {\n\t            reject(failed);\n\t          } else {\n\t            fulfill(self[name].apply(self, args));\n\t          }\n\t        });\n\t      });\n\t    }\n\t    return callback.apply(this, args);\n\t  }));\n\t}\n\t\n\t// like underscore/lodash _.pick()\n\tfunction pick(obj, arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var prop = arr[i];\n\t    if (prop in obj) {\n\t      res[prop] = obj[prop];\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t// Most browsers throttle concurrent requests at 6, so it's silly\n\t// to shim _bulk_get by trying to launch potentially hundreds of requests\n\t// and then letting the majority time out. We can handle this ourselves.\n\tvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\t\n\tfunction identityFunction(x) {\n\t  return x;\n\t}\n\t\n\tfunction formatResultForOpenRevsGet(result) {\n\t  return [{\n\t    ok: result\n\t  }];\n\t}\n\t\n\t// shim for P/CouchDB adapters that don't directly implement _bulk_get\n\tfunction bulkGet(db, opts, callback) {\n\t  var requests = opts.docs;\n\t\n\t  // consolidate into one request per doc if possible\n\t  var requestsById = {};\n\t  requests.forEach(function (request) {\n\t    if (request.id in requestsById) {\n\t      requestsById[request.id].push(request);\n\t    } else {\n\t      requestsById[request.id] = [request];\n\t    }\n\t  });\n\t\n\t  var numDocs = Object.keys(requestsById).length;\n\t  var numDone = 0;\n\t  var perDocResults = new Array(numDocs);\n\t\n\t  function collapseResultsAndFinish() {\n\t    var results = [];\n\t    perDocResults.forEach(function (res) {\n\t      res.docs.forEach(function (info) {\n\t        results.push({\n\t          id: res.id,\n\t          docs: [info]\n\t        });\n\t      });\n\t    });\n\t    callback(null, {results: results});\n\t  }\n\t\n\t  function checkDone() {\n\t    if (++numDone === numDocs) {\n\t      collapseResultsAndFinish();\n\t    }\n\t  }\n\t\n\t  function gotResult(docIndex, id, docs) {\n\t    perDocResults[docIndex] = {id: id, docs: docs};\n\t    checkDone();\n\t  }\n\t\n\t  var allRequests = Object.keys(requestsById);\n\t\n\t  var i = 0;\n\t\n\t  function nextBatch() {\n\t\n\t    if (i >= allRequests.length) {\n\t      return;\n\t    }\n\t\n\t    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n\t    var batch = allRequests.slice(i, upTo);\n\t    processBatch(batch, i);\n\t    i += batch.length;\n\t  }\n\t\n\t  function processBatch(batch, offset) {\n\t    batch.forEach(function (docId, j) {\n\t      var docIdx = offset + j;\n\t      var docRequests = requestsById[docId];\n\t\n\t      // just use the first request as the \"template\"\n\t      // TODO: The _bulk_get API allows for more subtle use cases than this,\n\t      // but for now it is unlikely that there will be a mix of different\n\t      // \"atts_since\" or \"attachments\" in the same request, since it's just\n\t      // replicate.js that is using this for the moment.\n\t      // Also, atts_since is aspirational, since we don't support it yet.\n\t      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n\t      docOpts.open_revs = docRequests.map(function (request) {\n\t        // rev is optional, open_revs disallowed\n\t        return request.rev;\n\t      });\n\t\n\t      // remove falsey / undefined revisions\n\t      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\t\n\t      var formatResult = identityFunction;\n\t\n\t      if (docOpts.open_revs.length === 0) {\n\t        delete docOpts.open_revs;\n\t\n\t        // when fetching only the \"winning\" leaf,\n\t        // transform the result so it looks like an open_revs\n\t        // request\n\t        formatResult = formatResultForOpenRevsGet;\n\t      }\n\t\n\t      // globally-supplied options\n\t      ['revs', 'attachments', 'binary', 'ajax'].forEach(function (param) {\n\t        if (param in opts) {\n\t          docOpts[param] = opts[param];\n\t        }\n\t      });\n\t      db.get(docId, docOpts, function (err, res) {\n\t        var result;\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          result = [{error: err}];\n\t        } else {\n\t          result = formatResult(res);\n\t        }\n\t        gotResult(docIdx, docId, result);\n\t        nextBatch();\n\t      });\n\t    });\n\t  }\n\t\n\t  nextBatch();\n\t\n\t}\n\t\n\tfunction isChromeApp() {\n\t  return (typeof chrome !== \"undefined\" &&\n\t    typeof chrome.storage !== \"undefined\" &&\n\t    typeof chrome.storage.local !== \"undefined\");\n\t}\n\t\n\tvar hasLocal;\n\t\n\tif (isChromeApp()) {\n\t  hasLocal = false;\n\t} else {\n\t  try {\n\t    localStorage.setItem('_pouch_check_localstorage', 1);\n\t    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n\t  } catch (e) {\n\t    hasLocal = false;\n\t  }\n\t}\n\t\n\tfunction hasLocalStorage() {\n\t  return hasLocal;\n\t}\n\t\n\tinherits(Changes$1, events.EventEmitter);\n\t\n\t/* istanbul ignore next */\n\tfunction attachBrowserEvents(self) {\n\t  if (isChromeApp()) {\n\t    chrome.storage.onChanged.addListener(function (e) {\n\t      // make sure it's event addressed to us\n\t      if (e.db_name != null) {\n\t        //object only has oldValue, newValue members\n\t        self.emit(e.dbName.newValue);\n\t      }\n\t    });\n\t  } else if (hasLocalStorage()) {\n\t    if (typeof addEventListener !== 'undefined') {\n\t      addEventListener(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    } else { // old IE\n\t      window.attachEvent(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tfunction Changes$1() {\n\t  events.EventEmitter.call(this);\n\t  this._listeners = {};\n\t\n\t  attachBrowserEvents(this);\n\t}\n\tChanges$1.prototype.addListener = function (dbName, id, db, opts) {\n\t  /* istanbul ignore if */\n\t  if (this._listeners[id]) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  var inprogress = false;\n\t  function eventFunction() {\n\t    /* istanbul ignore if */\n\t    if (!self._listeners[id]) {\n\t      return;\n\t    }\n\t    if (inprogress) {\n\t      inprogress = 'waiting';\n\t      return;\n\t    }\n\t    inprogress = true;\n\t    var changesOpts = pick(opts, [\n\t      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n\t      'doc_ids', 'view', 'since', 'query_params', 'binary'\n\t    ]);\n\t\n\t    /* istanbul ignore next */\n\t    function onError() {\n\t      inprogress = false;\n\t    }\n\t\n\t    db.changes(changesOpts).on('change', function (c) {\n\t      if (c.seq > opts.since && !opts.cancelled) {\n\t        opts.since = c.seq;\n\t        opts.onChange(c);\n\t      }\n\t    }).on('complete', function () {\n\t      if (inprogress === 'waiting') {\n\t        setTimeout(function (){\n\t          eventFunction();\n\t        },0);\n\t      }\n\t      inprogress = false;\n\t    }).on('error', onError);\n\t  }\n\t  this._listeners[id] = eventFunction;\n\t  this.on(dbName, eventFunction);\n\t};\n\t\n\tChanges$1.prototype.removeListener = function (dbName, id) {\n\t  /* istanbul ignore if */\n\t  if (!(id in this._listeners)) {\n\t    return;\n\t  }\n\t  events.EventEmitter.prototype.removeListener.call(this, dbName,\n\t    this._listeners[id]);\n\t  delete this._listeners[id];\n\t};\n\t\n\t\n\t/* istanbul ignore next */\n\tChanges$1.prototype.notifyLocalWindows = function (dbName) {\n\t  //do a useless change on a storage thing\n\t  //in order to get other windows's listeners to activate\n\t  if (isChromeApp()) {\n\t    chrome.storage.local.set({dbName: dbName});\n\t  } else if (hasLocalStorage()) {\n\t    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n\t  }\n\t};\n\t\n\tChanges$1.prototype.notify = function (dbName) {\n\t  this.emit(dbName);\n\t  this.notifyLocalWindows(dbName);\n\t};\n\t\n\tfunction guardedConsole(method) {\n\t  /* istanbul ignore else */\n\t  if (console !== 'undefined' && method in console) {\n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t    console[method].apply(console, args);\n\t  }\n\t}\n\t\n\tfunction randomNumber(min, max) {\n\t  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n\t  min = parseInt(min, 10) || 0;\n\t  max = parseInt(max, 10);\n\t  if (max !== max || max <= min) {\n\t    max = (min || 1) << 1; //doubling\n\t  } else {\n\t    max = max + 1;\n\t  }\n\t  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n\t  if(max > maxTimeout) {\n\t    min = maxTimeout >> 1; // divide by two\n\t    max = maxTimeout;\n\t  }\n\t  var ratio = Math.random();\n\t  var range = max - min;\n\t\n\t  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n\t}\n\t\n\tfunction defaultBackOff(min) {\n\t  var max = 0;\n\t  if (!min) {\n\t    max = 2000;\n\t  }\n\t  return randomNumber(min, max);\n\t}\n\t\n\t// designed to give info to browser users, who are disturbed\n\t// when they see http errors in the console\n\tfunction explainError(status, str) {\n\t  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n\t}\n\t\n\tinherits(PouchError, Error);\n\t\n\tfunction PouchError(opts) {\n\t  Error.call(this, opts.reason);\n\t  this.status = opts.status;\n\t  this.name = opts.error;\n\t  this.message = opts.reason;\n\t  this.error = true;\n\t}\n\t\n\tPouchError.prototype.toString = function () {\n\t  return JSON.stringify({\n\t    status: this.status,\n\t    name: this.name,\n\t    message: this.message,\n\t    reason: this.reason\n\t  });\n\t};\n\t\n\tvar UNAUTHORIZED = new PouchError({\n\t  status: 401,\n\t  error: 'unauthorized',\n\t  reason: \"Name or password is incorrect.\"\n\t});\n\t\n\tvar MISSING_BULK_DOCS = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: \"Missing JSON list of 'docs'\"\n\t});\n\t\n\tvar MISSING_DOC = new PouchError({\n\t  status: 404,\n\t  error: 'not_found',\n\t  reason: 'missing'\n\t});\n\t\n\tvar REV_CONFLICT = new PouchError({\n\t  status: 409,\n\t  error: 'conflict',\n\t  reason: 'Document update conflict'\n\t});\n\t\n\tvar INVALID_ID = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: '_id field must contain a string'\n\t});\n\t\n\tvar MISSING_ID = new PouchError({\n\t  status: 412,\n\t  error: 'missing_id',\n\t  reason: '_id is required for puts'\n\t});\n\t\n\tvar RESERVED_ID = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: 'Only reserved document ids may start with underscore.'\n\t});\n\t\n\tvar NOT_OPEN = new PouchError({\n\t  status: 412,\n\t  error: 'precondition_failed',\n\t  reason: 'Database not open'\n\t});\n\t\n\tvar UNKNOWN_ERROR = new PouchError({\n\t  status: 500,\n\t  error: 'unknown_error',\n\t  reason: 'Database encountered an unknown error'\n\t});\n\t\n\tvar BAD_ARG = new PouchError({\n\t  status: 500,\n\t  error: 'badarg',\n\t  reason: 'Some query argument is invalid'\n\t});\n\t\n\tvar INVALID_REQUEST = new PouchError({\n\t  status: 400,\n\t  error: 'invalid_request',\n\t  reason: 'Request was invalid'\n\t});\n\t\n\tvar QUERY_PARSE_ERROR = new PouchError({\n\t  status: 400,\n\t  error: 'query_parse_error',\n\t  reason: 'Some query parameter is invalid'\n\t});\n\t\n\tvar DOC_VALIDATION = new PouchError({\n\t  status: 500,\n\t  error: 'doc_validation',\n\t  reason: 'Bad special document member'\n\t});\n\t\n\tvar BAD_REQUEST = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: 'Something wrong with the request'\n\t});\n\t\n\tvar NOT_AN_OBJECT = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: 'Document must be a JSON object'\n\t});\n\t\n\tvar DB_MISSING = new PouchError({\n\t  status: 404,\n\t  error: 'not_found',\n\t  reason: 'Database not found'\n\t});\n\t\n\tvar IDB_ERROR = new PouchError({\n\t  status: 500,\n\t  error: 'indexed_db_went_bad',\n\t  reason: 'unknown'\n\t});\n\t\n\tvar WSQ_ERROR = new PouchError({\n\t  status: 500,\n\t  error: 'web_sql_went_bad',\n\t  reason: 'unknown'\n\t});\n\t\n\tvar LDB_ERROR = new PouchError({\n\t  status: 500,\n\t  error: 'levelDB_went_went_bad',\n\t  reason: 'unknown'\n\t});\n\t\n\tvar FORBIDDEN = new PouchError({\n\t  status: 403,\n\t  error: 'forbidden',\n\t  reason: 'Forbidden by design doc validate_doc_update function'\n\t});\n\t\n\tvar INVALID_REV = new PouchError({\n\t  status: 400,\n\t  error: 'bad_request',\n\t  reason: 'Invalid rev format'\n\t});\n\t\n\tvar FILE_EXISTS = new PouchError({\n\t  status: 412,\n\t  error: 'file_exists',\n\t  reason: 'The database could not be created, the file already exists.'\n\t});\n\t\n\tvar MISSING_STUB = new PouchError({\n\t  status: 412,\n\t  error: 'missing_stub'\n\t});\n\t\n\tvar INVALID_URL = new PouchError({\n\t  status: 413,\n\t  error: 'invalid_url',\n\t  reason: 'Provided URL is invalid'\n\t});\n\t\n\tfunction createError(error, reason) {\n\t  function CustomPouchError(reason) {\n\t    // inherit error properties from our parent error manually\n\t    // so as to allow proper JSON parsing.\n\t    /* jshint ignore:start */\n\t    for (var p in error) {\n\t      if (typeof error[p] !== 'function') {\n\t        this[p] = error[p];\n\t      }\n\t    }\n\t    /* jshint ignore:end */\n\t    if (reason !== undefined) {\n\t      this.reason = reason;\n\t    }\n\t  }\n\t  CustomPouchError.prototype = PouchError.prototype;\n\t  return new CustomPouchError(reason);\n\t}\n\t\n\tfunction generateErrorFromResponse(err) {\n\t\n\t  if (typeof err !== 'object') {\n\t    var data = err;\n\t    err = UNKNOWN_ERROR;\n\t    err.data = data;\n\t  }\n\t\n\t  if ('error' in err && err.error === 'conflict') {\n\t    err.name = 'conflict';\n\t    err.status = 409;\n\t  }\n\t\n\t  if (!('name' in err)) {\n\t    err.name = err.error || 'unknown';\n\t  }\n\t\n\t  if (!('status' in err)) {\n\t    err.status = 500;\n\t  }\n\t\n\t  if (!('message' in err)) {\n\t    err.message = err.message || err.reason;\n\t  }\n\t\n\t  return err;\n\t}\n\t\n\tfunction tryFilter(filter, doc, req) {\n\t  try {\n\t    return !filter(doc, req);\n\t  } catch (err) {\n\t    var msg = 'Filter function threw: ' + err.toString();\n\t    return createError(BAD_REQUEST, msg);\n\t  }\n\t}\n\t\n\tfunction filterChange(opts) {\n\t  var req = {};\n\t  var hasFilter = opts.filter && typeof opts.filter === 'function';\n\t  req.query = opts.query_params;\n\t\n\t  return function filter(change) {\n\t    if (!change.doc) {\n\t      // CSG sends events on the changes feed that don't have documents,\n\t      // this hack makes a whole lot of existing code robust.\n\t      change.doc = {};\n\t    }\n\t\n\t    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\t\n\t    if (typeof filterReturn === 'object') {\n\t      return filterReturn;\n\t    }\n\t\n\t    if (filterReturn) {\n\t      return false;\n\t    }\n\t\n\t    if (!opts.include_docs) {\n\t      delete change.doc;\n\t    } else if (!opts.attachments) {\n\t      for (var att in change.doc._attachments) {\n\t        /* istanbul ignore else */\n\t        if (change.doc._attachments.hasOwnProperty(att)) {\n\t          change.doc._attachments[att].stub = true;\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t}\n\t\n\tfunction flatten(arrs) {\n\t  var res = [];\n\t  for (var i = 0, len = arrs.length; i < len; i++) {\n\t    res = res.concat(arrs[i]);\n\t  }\n\t  return res;\n\t}\n\t\n\t// Determine id an ID is valid\n\t//   - invalid IDs begin with an underescore that does not begin '_design' or\n\t//     '_local'\n\t//   - any other string value is a valid id\n\t// Returns the specific error object for each case\n\tfunction invalidIdError(id) {\n\t  var err;\n\t  if (!id) {\n\t    err = createError(MISSING_ID);\n\t  } else if (typeof id !== 'string') {\n\t    err = createError(INVALID_ID);\n\t  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n\t    err = createError(RESERVED_ID);\n\t  }\n\t  if (err) {\n\t    throw err;\n\t  }\n\t}\n\t\n\tfunction listenerCount(ee, type) {\n\t  return 'listenerCount' in ee ? ee.listenerCount(type) :\n\t                                 events.EventEmitter.listenerCount(ee, type);\n\t}\n\t\n\tfunction parseDesignDocFunctionName(s) {\n\t  if (!s) {\n\t    return null;\n\t  }\n\t  var parts = s.split('/');\n\t  if (parts.length === 2) {\n\t    return parts;\n\t  }\n\t  if (parts.length === 1) {\n\t    return [s, s];\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction normalizeDesignDocFunctionName(s) {\n\t  var normalized = parseDesignDocFunctionName(s);\n\t  return normalized ? normalized.join('/') : null;\n\t}\n\t\n\t// originally parseUri 1.2.2, now patched by us\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\tvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n\t    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n\tvar qName =\"queryKey\";\n\tvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\t\n\t// use the \"loose\" parser\n\t/* jshint maxlen: false */\n\tvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tfunction parseUri(str) {\n\t  var m = parser.exec(str);\n\t  var uri = {};\n\t  var i = 14;\n\t\n\t  while (i--) {\n\t    var key = keys[i];\n\t    var value = m[i] || \"\";\n\t    var encoded = ['user', 'password'].indexOf(key) !== -1;\n\t    uri[key] = encoded ? decodeURIComponent(value) : value;\n\t  }\n\t\n\t  uri[qName] = {};\n\t  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[qName][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\t// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n\t// the diffFun tells us what delta to apply to the doc.  it either returns\n\t// the doc, or false if it doesn't need to do an update after all\n\tfunction upsert(db, docId, diffFun) {\n\t  return new PouchPromise(function (fulfill, reject) {\n\t    db.get(docId, function (err, doc) {\n\t      if (err) {\n\t        /* istanbul ignore next */\n\t        if (err.status !== 404) {\n\t          return reject(err);\n\t        }\n\t        doc = {};\n\t      }\n\t\n\t      // the user might change the _rev, so save it for posterity\n\t      var docRev = doc._rev;\n\t      var newDoc = diffFun(doc);\n\t\n\t      if (!newDoc) {\n\t        // if the diffFun returns falsy, we short-circuit as\n\t        // an optimization\n\t        return fulfill({updated: false, rev: docRev});\n\t      }\n\t\n\t      // users aren't allowed to modify these values,\n\t      // so reset them here\n\t      newDoc._id = docId;\n\t      newDoc._rev = docRev;\n\t      fulfill(tryAndPut(db, newDoc, diffFun));\n\t    });\n\t  });\n\t}\n\t\n\tfunction tryAndPut(db, doc, diffFun) {\n\t  return db.put(doc).then(function (res) {\n\t    return {\n\t      updated: true,\n\t      rev: res.rev\n\t    };\n\t  }, function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 409) {\n\t      throw err;\n\t    }\n\t    return upsert(db, doc._id, diffFun);\n\t  });\n\t}\n\t\n\t// BEGIN Math.uuid.js\n\t\n\t/*!\n\tMath.uuid.js (v1.4)\n\thttp://www.broofa.com\n\tmailto:robert@broofa.com\n\t\n\tCopyright (c) 2010 Robert Kieffer\n\tDual licensed under the MIT and GPL licenses.\n\t*/\n\t\n\t/*\n\t * Generate a random uuid.\n\t *\n\t * USAGE: Math.uuid(length, radix)\n\t *   length - the desired number of characters\n\t *   radix  - the number of allowable values for each character.\n\t *\n\t * EXAMPLES:\n\t *   // No arguments  - returns RFC4122, version 4 ID\n\t *   >>> Math.uuid()\n\t *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n\t *\n\t *   // One argument - returns ID of the specified length\n\t *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n\t *   \"VcydxgltxrVZSTV\"\n\t *\n\t *   // Two arguments - returns ID of the specified length, and radix. \n\t *   // (Radix must be <= 62)\n\t *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n\t *   \"01001010\"\n\t *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n\t *   \"47473046\"\n\t *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n\t *   \"098F4D35\"\n\t */\n\tvar chars = (\n\t  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n\t  'abcdefghijklmnopqrstuvwxyz'\n\t).split('');\n\tfunction getValue(radix) {\n\t  return 0 | Math.random() * radix;\n\t}\n\tfunction uuid(len, radix) {\n\t  radix = radix || chars.length;\n\t  var out = '';\n\t  var i = -1;\n\t\n\t  if (len) {\n\t    // Compact form\n\t    while (++i < len) {\n\t      out += chars[getValue(radix)];\n\t    }\n\t    return out;\n\t  }\n\t    // rfc4122, version 4 form\n\t    // Fill in random data.  At i==19 set the high bits of clock sequence as\n\t    // per rfc4122, sec. 4.1.5\n\t  while (++i < 36) {\n\t    switch (i) {\n\t      case 8:\n\t      case 13:\n\t      case 18:\n\t      case 23:\n\t        out += '-';\n\t        break;\n\t      case 19:\n\t        out += chars[(getValue(16) & 0x3) | 0x8];\n\t        break;\n\t      default:\n\t        out += chars[getValue(16)];\n\t    }\n\t  }\n\t\n\t  return out;\n\t}\n\t\n\t// We fetch all leafs of the revision tree, and sort them based on tree length\n\t// and whether they were deleted, undeleted documents with the longest revision\n\t// tree (most edits) win\n\t// The final sort algorithm is slightly documented in a sidebar here:\n\t// http://guide.couchdb.org/draft/conflicts.html\n\tfunction winningRev(metadata) {\n\t  var winningId;\n\t  var winningPos;\n\t  var winningDeleted;\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var pos = node.pos;\n\t    if (branches.length) { // non-leaf\n\t      for (var i = 0, len = branches.length; i < len; i++) {\n\t        toVisit.push({pos: pos + 1, ids: branches[i]});\n\t      }\n\t      continue;\n\t    }\n\t    var deleted = !!tree[1].deleted;\n\t    var id = tree[0];\n\t    // sort by deleted, then pos, then id\n\t    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n\t        winningPos !== pos ? winningPos < pos : winningId < id)) {\n\t      winningId = id;\n\t      winningPos = pos;\n\t      winningDeleted = deleted;\n\t    }\n\t  }\n\t\n\t  return winningPos + '-' + winningId;\n\t}\n\t\n\t// Pretty much all below can be combined into a higher order function to\n\t// traverse revisions\n\t// The return value from the callback will be passed as context to all\n\t// children of that node\n\tfunction traverseRevTree(revs, callback) {\n\t  var toVisit = revs.slice();\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var newCtx =\n\t      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n\t    }\n\t  }\n\t}\n\t\n\tfunction sortByPos(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\tfunction collectLeaves(revs) {\n\t  var leaves = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n\t    if (isLeaf) {\n\t      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n\t    }\n\t  });\n\t  leaves.sort(sortByPos).reverse();\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    delete leaves[i].pos;\n\t  }\n\t  return leaves;\n\t}\n\t\n\t// returns revs of all conflicts that is leaves such that\n\t// 1. are not deleted and\n\t// 2. are different than winning revision\n\tfunction collectConflicts(metadata) {\n\t  var win = winningRev(metadata);\n\t  var leaves = collectLeaves(metadata.rev_tree);\n\t  var conflicts = [];\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    var leaf = leaves[i];\n\t    if (leaf.rev !== win && !leaf.opts.deleted) {\n\t      conflicts.push(leaf.rev);\n\t    }\n\t  }\n\t  return conflicts;\n\t}\n\t\n\t// compact a tree by marking its non-leafs as missing,\n\t// and return a list of revs to delete\n\tfunction compactTree(metadata) {\n\t  var revs = [];\n\t  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                               revHash, ctx, opts) {\n\t    if (opts.status === 'available' && !isLeaf) {\n\t      revs.push(pos + '-' + revHash);\n\t      opts.status = 'missing';\n\t    }\n\t  });\n\t  return revs;\n\t}\n\t\n\t// build up a list of all the paths to the leafs in this revision tree\n\tfunction rootToLeaf(revs) {\n\t  var paths = [];\n\t  var toVisit = revs.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, opts: opts});\n\t    if (isLeaf) {\n\t      paths.push({pos: (pos + 1 - history.length), ids: history});\n\t    }\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n\t    }\n\t  }\n\t  return paths.reverse();\n\t}\n\t\n\t// for a better overview of what this is doing, read:\n\t// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n\t//\n\t// But for a quick intro, CouchDB uses a revision tree to store a documents\n\t// history, A -> B -> C, when a document has conflicts, that is a branch in the\n\t// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n\t//\n\t// KeyTree = [Path ... ]\n\t// Path = {pos: position_from_root, ids: Tree}\n\t// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\t\n\tfunction sortByPos$1(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\t// classic binary search\n\tfunction binarySearch(arr, item, comparator) {\n\t  var low = 0;\n\t  var high = arr.length;\n\t  var mid;\n\t  while (low < high) {\n\t    mid = (low + high) >>> 1;\n\t    if (comparator(arr[mid], item) < 0) {\n\t      low = mid + 1;\n\t    } else {\n\t      high = mid;\n\t    }\n\t  }\n\t  return low;\n\t}\n\t\n\t// assuming the arr is sorted, insert the item in the proper place\n\tfunction insertSorted(arr, item, comparator) {\n\t  var idx = binarySearch(arr, item, comparator);\n\t  arr.splice(idx, 0, item);\n\t}\n\t\n\t// Turn a path as a flat array into a tree with a single branch.\n\t// If any should be stemmed from the beginning of the array, that's passed\n\t// in as the second argument\n\tfunction pathToTree(path, numStemmed) {\n\t  var root;\n\t  var leaf;\n\t  for (var i = numStemmed, len = path.length; i < len; i++) {\n\t    var node = path[i];\n\t    var currentLeaf = [node.id, node.opts, []];\n\t    if (leaf) {\n\t      leaf[2].push(currentLeaf);\n\t      leaf = currentLeaf;\n\t    } else {\n\t      root = leaf = currentLeaf;\n\t    }\n\t  }\n\t  return root;\n\t}\n\t\n\t// compare the IDs of two trees\n\tfunction compareTree(a, b) {\n\t  return a[0] < b[0] ? -1 : 1;\n\t}\n\t\n\t// Merge two trees together\n\t// The roots of tree1 and tree2 must be the same revision\n\tfunction mergeTree(in_tree1, in_tree2) {\n\t  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n\t  var conflicts = false;\n\t  while (queue.length > 0) {\n\t    var item = queue.pop();\n\t    var tree1 = item.tree1;\n\t    var tree2 = item.tree2;\n\t\n\t    if (tree1[1].status || tree2[1].status) {\n\t      tree1[1].status =\n\t        (tree1[1].status ===  'available' ||\n\t        tree2[1].status === 'available') ? 'available' : 'missing';\n\t    }\n\t\n\t    for (var i = 0; i < tree2[2].length; i++) {\n\t      if (!tree1[2][0]) {\n\t        conflicts = 'new_leaf';\n\t        tree1[2][0] = tree2[2][i];\n\t        continue;\n\t      }\n\t\n\t      var merged = false;\n\t      for (var j = 0; j < tree1[2].length; j++) {\n\t        if (tree1[2][j][0] === tree2[2][i][0]) {\n\t          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n\t          merged = true;\n\t        }\n\t      }\n\t      if (!merged) {\n\t        conflicts = 'new_branch';\n\t        insertSorted(tree1[2], tree2[2][i], compareTree);\n\t      }\n\t    }\n\t  }\n\t  return {conflicts: conflicts, tree: in_tree1};\n\t}\n\t\n\tfunction doMerge(tree, path, dontExpand) {\n\t  var restree = [];\n\t  var conflicts = false;\n\t  var merged = false;\n\t  var res;\n\t\n\t  if (!tree.length) {\n\t    return {tree: [path], conflicts: 'new_leaf'};\n\t  }\n\t\n\t  for (var i = 0, len = tree.length; i < len; i++) {\n\t    var branch = tree[i];\n\t    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n\t      // Paths start at the same position and have the same root, so they need\n\t      // merged\n\t      res = mergeTree(branch.ids, path.ids);\n\t      restree.push({pos: branch.pos, ids: res.tree});\n\t      conflicts = conflicts || res.conflicts;\n\t      merged = true;\n\t    } else if (dontExpand !== true) {\n\t      // The paths start at a different position, take the earliest path and\n\t      // traverse up until it as at the same point from root as the path we\n\t      // want to merge.  If the keys match we return the longer path with the\n\t      // other merged After stemming we dont want to expand the trees\n\t\n\t      var t1 = branch.pos < path.pos ? branch : path;\n\t      var t2 = branch.pos < path.pos ? path : branch;\n\t      var diff = t2.pos - t1.pos;\n\t\n\t      var candidateParents = [];\n\t\n\t      var trees = [];\n\t      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n\t      while (trees.length > 0) {\n\t        var item = trees.pop();\n\t        if (item.diff === 0) {\n\t          if (item.ids[0] === t2.ids[0]) {\n\t            candidateParents.push(item);\n\t          }\n\t          continue;\n\t        }\n\t        var elements = item.ids[2];\n\t        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n\t          trees.push({\n\t            ids: elements[j],\n\t            diff: item.diff - 1,\n\t            parent: item.ids,\n\t            parentIdx: j\n\t          });\n\t        }\n\t      }\n\t\n\t      var el = candidateParents[0];\n\t\n\t      if (!el) {\n\t        restree.push(branch);\n\t      } else {\n\t        res = mergeTree(el.ids, t2.ids);\n\t        el.parent[2][el.parentIdx] = res.tree;\n\t        restree.push({pos: t1.pos, ids: t1.ids});\n\t        conflicts = conflicts || res.conflicts;\n\t        merged = true;\n\t      }\n\t    } else {\n\t      restree.push(branch);\n\t    }\n\t  }\n\t\n\t  // We didnt find\n\t  if (!merged) {\n\t    restree.push(path);\n\t  }\n\t\n\t  restree.sort(sortByPos$1);\n\t\n\t  return {\n\t    tree: restree,\n\t    conflicts: conflicts || 'internal_node'\n\t  };\n\t}\n\t\n\t// To ensure we dont grow the revision tree infinitely, we stem old revisions\n\tfunction stem(tree, depth) {\n\t  // First we break out the tree into a complete list of root to leaf paths\n\t  var paths = rootToLeaf(tree);\n\t  var maybeStem = {};\n\t\n\t  var result;\n\t  for (var i = 0, len = paths.length; i < len; i++) {\n\t    // Then for each path, we cut off the start of the path based on the\n\t    // `depth` to stem to, and generate a new set of flat trees\n\t    var path = paths[i];\n\t    var stemmed = path.ids;\n\t    var numStemmed = Math.max(0, stemmed.length - depth);\n\t    var stemmedNode = {\n\t      pos: path.pos + numStemmed,\n\t      ids: pathToTree(stemmed, numStemmed)\n\t    };\n\t\n\t    for (var s = 0; s < numStemmed; s++) {\n\t      var rev = (path.pos + s) + '-' + stemmed[s].id;\n\t      maybeStem[rev] = true;\n\t    }\n\t\n\t    // Then we remerge all those flat trees together, ensuring that we dont\n\t    // connect trees that would go beyond the depth limit\n\t    if (result) {\n\t      result = doMerge(result, stemmedNode, true).tree;\n\t    } else {\n\t      result = [stemmedNode];\n\t    }\n\t  }\n\t\n\t  traverseRevTree(result, function (isLeaf, pos, revHash) {\n\t    // some revisions may have been removed in a branch but not in another\n\t    delete maybeStem[pos + '-' + revHash];\n\t  });\n\t\n\t  return {\n\t    tree: result,\n\t    revs: Object.keys(maybeStem)\n\t  };\n\t}\n\t\n\tfunction merge(tree, path, depth) {\n\t  var newTree = doMerge(tree, path);\n\t  var stemmed = stem(newTree.tree, depth);\n\t  return {\n\t    tree: stemmed.tree,\n\t    stemmedRevs: stemmed.revs,\n\t    conflicts: newTree.conflicts\n\t  };\n\t}\n\t\n\t// return true if a rev exists in the rev tree, false otherwise\n\tfunction revExists(revs, rev) {\n\t  var toVisit = revs.slice();\n\t  var splitRev = rev.split('-');\n\t  var targetPos = parseInt(splitRev[0], 10);\n\t  var targetId = splitRev[1];\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    if (node.pos === targetPos && node.ids[0] === targetId) {\n\t      return true;\n\t    }\n\t    var branches = node.ids[2];\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getTrees(node) {\n\t  return node.ids;\n\t}\n\t\n\t// check if a specific revision of a doc has been deleted\n\t//  - metadata: the metadata object from the doc store\n\t//  - rev: (optional) the revision to check. defaults to winning revision\n\tfunction isDeleted(metadata, rev) {\n\t  if (!rev) {\n\t    rev = winningRev(metadata);\n\t  }\n\t  var id = rev.substring(rev.indexOf('-') + 1);\n\t  var toVisit = metadata.rev_tree.map(getTrees);\n\t\n\t  var tree;\n\t  while ((tree = toVisit.pop())) {\n\t    if (tree[0] === id) {\n\t      return !!tree[1].deleted;\n\t    }\n\t    toVisit = toVisit.concat(tree[2]);\n\t  }\n\t}\n\t\n\tfunction isLocalId(id) {\n\t  return (/^_local/).test(id);\n\t}\n\t\n\tfunction evalFilter(input) {\n\t  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n\t}\n\t\n\tfunction evalView(input) {\n\t  var code = [\n\t    'return function(doc) {',\n\t    '  \"use strict\";',\n\t    '  var emitted = false;',\n\t    '  var emit = function (a, b) {',\n\t    '    emitted = true;',\n\t    '  };',\n\t    '  var view = ' + input + ';',\n\t    '  view(doc);',\n\t    '  if (emitted) {',\n\t    '    return true;',\n\t    '  }',\n\t    '};'\n\t  ].join('\\n');\n\t\n\t  return scopedEval(code, {});\n\t}\n\t\n\tinherits(Changes, events.EventEmitter);\n\t\n\tfunction tryCatchInChangeListener(self, change) {\n\t  // isolate try/catches to avoid V8 deoptimizations\n\t  try {\n\t    self.emit('change', change);\n\t  } catch (e) {\n\t    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n\t  }\n\t}\n\t\n\tfunction Changes(db, opts, callback) {\n\t  events.EventEmitter.call(this);\n\t  var self = this;\n\t  this.db = db;\n\t  opts = opts ? clone(opts) : {};\n\t  var complete = opts.complete = once(function (err, resp) {\n\t    if (err) {\n\t      if (listenerCount(self, 'error') > 0) {\n\t        self.emit('error', err);\n\t      }\n\t    } else {\n\t      self.emit('complete', resp);\n\t    }\n\t    self.removeAllListeners();\n\t    db.removeListener('destroyed', onDestroy);\n\t  });\n\t  if (callback) {\n\t    self.on('complete', function (resp) {\n\t      callback(null, resp);\n\t    });\n\t    self.on('error', callback);\n\t  }\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  db.once('destroyed', onDestroy);\n\t\n\t  opts.onChange = function (change) {\n\t    /* istanbul ignore if */\n\t    if (opts.isCancelled) {\n\t      return;\n\t    }\n\t    tryCatchInChangeListener(self, change);\n\t  };\n\t\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    opts.complete = function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        fulfill(res);\n\t      }\n\t    };\n\t  });\n\t  self.once('cancel', function () {\n\t    db.removeListener('destroyed', onDestroy);\n\t    opts.complete(null, {status: 'cancelled'});\n\t  });\n\t  this.then = promise.then.bind(promise);\n\t  this['catch'] = promise['catch'].bind(promise);\n\t  this.then(function (result) {\n\t    complete(null, result);\n\t  }, complete);\n\t\n\t\n\t\n\t  if (!db.taskqueue.isReady) {\n\t    db.taskqueue.addTask(function (failed) {\n\t      if (failed) {\n\t        opts.complete(failed);\n\t      } else if (self.isCancelled) {\n\t        self.emit('cancel');\n\t      } else {\n\t        self.doChanges(opts);\n\t      }\n\t    });\n\t  } else {\n\t    self.doChanges(opts);\n\t  }\n\t}\n\tChanges.prototype.cancel = function () {\n\t  this.isCancelled = true;\n\t  if (this.db.taskqueue.isReady) {\n\t    this.emit('cancel');\n\t  }\n\t};\n\tfunction processChange(doc, metadata, opts) {\n\t  var changeList = [{rev: doc._rev}];\n\t  if (opts.style === 'all_docs') {\n\t    changeList = collectLeaves(metadata.rev_tree)\n\t    .map(function (x) { return {rev: x.rev}; });\n\t  }\n\t  var change = {\n\t    id: metadata.id,\n\t    changes: changeList,\n\t    doc: doc\n\t  };\n\t\n\t  if (isDeleted(metadata, doc._rev)) {\n\t    change.deleted = true;\n\t  }\n\t  if (opts.conflicts) {\n\t    change.doc._conflicts = collectConflicts(metadata);\n\t    if (!change.doc._conflicts.length) {\n\t      delete change.doc._conflicts;\n\t    }\n\t  }\n\t  return change;\n\t}\n\t\n\tChanges.prototype.doChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t\n\t  opts = clone(opts);\n\t  if ('live' in opts && !('continuous' in opts)) {\n\t    opts.continuous = opts.live;\n\t  }\n\t  opts.processChange = processChange;\n\t\n\t  if (opts.since === 'latest') {\n\t    opts.since = 'now';\n\t  }\n\t  if (!opts.since) {\n\t    opts.since = 0;\n\t  }\n\t  if (opts.since === 'now') {\n\t    this.db.info().then(function (info) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        callback(null, {status: 'cancelled'});\n\t        return;\n\t      }\n\t      opts.since = info.update_seq;\n\t      self.doChanges(opts);\n\t    }, callback);\n\t    return;\n\t  }\n\t\n\t\n\t  if (opts.view && !opts.filter) {\n\t    opts.filter = '_view';\n\t  }\n\t\n\t  if (opts.filter && typeof opts.filter === 'string') {\n\t    if (opts.filter === '_view') {\n\t      opts.view = normalizeDesignDocFunctionName(opts.view);\n\t    } else {\n\t      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n\t    }\n\t\n\t    if (this.db.type() !== 'http' && !opts.doc_ids) {\n\t      return this.filterChanges(opts);\n\t    }\n\t  }\n\t\n\t  if (!('descending' in opts)) {\n\t    opts.descending = false;\n\t  }\n\t\n\t  // 0 and 1 should return 1 document\n\t  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n\t  opts.complete = callback;\n\t  var newPromise = this.db._changes(opts);\n\t  /* istanbul ignore else */\n\t  if (newPromise && typeof newPromise.cancel === 'function') {\n\t    var cancel = self.cancel;\n\t    self.cancel = getArguments(function (args) {\n\t      newPromise.cancel();\n\t      cancel.apply(this, args);\n\t    });\n\t  }\n\t};\n\t\n\tChanges.prototype.filterChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t  if (opts.filter === '_view') {\n\t    if (!opts.view || typeof opts.view !== 'string') {\n\t      var err = createError(BAD_REQUEST,\n\t        '`view` filter parameter not found or invalid.');\n\t      return callback(err);\n\t    }\n\t    // fetch a view from a design doc, make it behave like a filter\n\t    var viewName = parseDesignDocFunctionName(opts.view);\n\t    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n\t        ddoc.views[viewName[1]].map;\n\t      if (!mapFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          (ddoc.views ? 'missing json key: ' + viewName[1] :\n\t            'missing json key: views')));\n\t      }\n\t      opts.filter = evalView(mapFun);\n\t      self.doChanges(opts);\n\t    });\n\t  } else {\n\t    // fetch a filter from a design doc\n\t    var filterName = parseDesignDocFunctionName(opts.filter);\n\t    if (!filterName) {\n\t      return self.doChanges(opts);\n\t    }\n\t    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\t      if (!filterFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n\t            : 'missing json key: filters')));\n\t      }\n\t      opts.filter = evalFilter(filterFun);\n\t      self.doChanges(opts);\n\t    });\n\t  }\n\t};\n\t\n\t/*\n\t * A generic pouch adapter\n\t */\n\t\n\tfunction compare(left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t}\n\t\n\t// returns first element of arr satisfying callback predicate\n\tfunction arrayFirst(arr, callback) {\n\t  for (var i = 0; i < arr.length; i++) {\n\t    if (callback(arr[i], i) === true) {\n\t      return arr[i];\n\t    }\n\t  }\n\t}\n\t\n\t// Wrapper for functions that call the bulkdocs api with a single doc,\n\t// if the first result is an error, return an error\n\tfunction yankError(callback) {\n\t  return function (err, results) {\n\t    if (err || (results[0] && results[0].error)) {\n\t      callback(err || results[0]);\n\t    } else {\n\t      callback(null, results.length ? results[0]  : results);\n\t    }\n\t  };\n\t}\n\t\n\t// clean docs given to us by the user\n\tfunction cleanDocs(docs) {\n\t  for (var i = 0; i < docs.length; i++) {\n\t    var doc = docs[i];\n\t    if (doc._deleted) {\n\t      delete doc._attachments; // ignore atts for deleted docs\n\t    } else if (doc._attachments) {\n\t      // filter out extraneous keys from _attachments\n\t      var atts = Object.keys(doc._attachments);\n\t      for (var j = 0; j < atts.length; j++) {\n\t        var att = atts[j];\n\t        doc._attachments[att] = pick(doc._attachments[att],\n\t          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// compare two docs, first by _id then by _rev\n\tfunction compareByIdThenRev(a, b) {\n\t  var idCompare = compare(a._id, b._id);\n\t  if (idCompare !== 0) {\n\t    return idCompare;\n\t  }\n\t  var aStart = a._revisions ? a._revisions.start : 0;\n\t  var bStart = b._revisions ? b._revisions.start : 0;\n\t  return compare(aStart, bStart);\n\t}\n\t\n\t// for every node in a revision tree computes its distance from the closest\n\t// leaf\n\tfunction computeHeight(revs) {\n\t  var height = {};\n\t  var edges = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n\t    var rev = pos + \"-\" + id;\n\t    if (isLeaf) {\n\t      height[rev] = 0;\n\t    }\n\t    if (prnt !== undefined) {\n\t      edges.push({from: prnt, to: rev});\n\t    }\n\t    return rev;\n\t  });\n\t\n\t  edges.reverse();\n\t  edges.forEach(function (edge) {\n\t    if (height[edge.from] === undefined) {\n\t      height[edge.from] = 1 + height[edge.to];\n\t    } else {\n\t      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n\t    }\n\t  });\n\t  return height;\n\t}\n\t\n\tfunction allDocsKeysQuery(api, opts, callback) {\n\t  var keys =  ('limit' in opts) ?\n\t      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n\t      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n\t  if (opts.descending) {\n\t    keys.reverse();\n\t  }\n\t  if (!keys.length) {\n\t    return api._allDocs({limit: 0}, callback);\n\t  }\n\t  var finalResults = {\n\t    offset: opts.skip\n\t  };\n\t  return PouchPromise.all(keys.map(function (key) {\n\t    var subOpts = jsExtend.extend({key: key, deleted: 'ok'}, opts);\n\t    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n\t      delete subOpts[optKey];\n\t    });\n\t    return new PouchPromise(function (resolve, reject) {\n\t      api._allDocs(subOpts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        finalResults.total_rows = res.total_rows;\n\t        resolve(res.rows[0] || {key: key, error: 'not_found'});\n\t      });\n\t    });\n\t  })).then(function (results) {\n\t    finalResults.rows = results;\n\t    return finalResults;\n\t  });\n\t}\n\t\n\t// all compaction is done in a queue, to avoid attaching\n\t// too many listeners at once\n\tfunction doNextCompaction(self) {\n\t  var task = self._compactionQueue[0];\n\t  var opts = task.opts;\n\t  var callback = task.callback;\n\t  self.get('_local/compaction').catch(function () {\n\t    return false;\n\t  }).then(function (doc) {\n\t    if (doc && doc.last_seq) {\n\t      opts.last_seq = doc.last_seq;\n\t    }\n\t    self._compact(opts, function (err, res) {\n\t      /* istanbul ignore if */\n\t      if (err) {\n\t        callback(err);\n\t      } else {\n\t        callback(null, res);\n\t      }\n\t      process.nextTick(function () {\n\t        self._compactionQueue.shift();\n\t        if (self._compactionQueue.length) {\n\t          doNextCompaction(self);\n\t        }\n\t      });\n\t    });\n\t  });\n\t}\n\t\n\tfunction attachmentNameError(name) {\n\t  if (name.charAt(0) === '_') {\n\t    return name + 'is not a valid attachment name, attachment ' +\n\t      'names cannot start with \\'_\\'';\n\t  }\n\t  return false;\n\t}\n\t\n\tinherits(AbstractPouchDB, events.EventEmitter);\n\t\n\tfunction AbstractPouchDB() {\n\t  events.EventEmitter.call(this);\n\t}\n\t\n\tAbstractPouchDB.prototype.post =\n\t  adapterFun('post', function (doc, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return callback(createError(NOT_AN_OBJECT));\n\t  }\n\t  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return cb(createError(NOT_AN_OBJECT));\n\t  }\n\t  invalidIdError(doc._id);\n\t  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n\t    if (doc._deleted) {\n\t      return this._removeLocal(doc, cb);\n\t    } else {\n\t      return this._putLocal(doc, cb);\n\t    }\n\t  }\n\t  if (typeof this._put === 'function' && opts.new_edits !== false) {\n\t    this._put(doc, opts, cb);\n\t  } else {\n\t    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n\t  }\n\t});\n\t\n\tAbstractPouchDB.prototype.putAttachment =\n\t  adapterFun('putAttachment', function (docId, attachmentId, rev,\n\t                                              blob, type) {\n\t  var api = this;\n\t  if (typeof type === 'function') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\t  /* istanbul ignore if */\n\t  if (typeof type === 'undefined') {\n\t    type = blob;\n\t    blob = rev;\n\t    rev = null;\n\t  }\n\t\n\t  function createAttachment(doc) {\n\t    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n\t    doc._attachments = doc._attachments || {};\n\t    doc._attachments[attachmentId] = {\n\t      content_type: type,\n\t      data: blob,\n\t      revpos: ++prevrevpos\n\t    };\n\t    return api.put(doc);\n\t  }\n\t\n\t  return api.get(docId).then(function (doc) {\n\t    if (doc._rev !== rev) {\n\t      throw createError(REV_CONFLICT);\n\t    }\n\t\n\t    return createAttachment(doc);\n\t  }, function (err) {\n\t     // create new doc\n\t    /* istanbul ignore else */\n\t    if (err.reason === MISSING_DOC.message) {\n\t      return createAttachment({_id: docId});\n\t    } else {\n\t      throw err;\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.removeAttachment =\n\t  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n\t                                                 callback) {\n\t  var self = this;\n\t  self.get(docId, function (err, obj) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      callback(err);\n\t      return;\n\t    }\n\t    if (obj._rev !== rev) {\n\t      callback(createError(REV_CONFLICT));\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!obj._attachments) {\n\t      return callback();\n\t    }\n\t    delete obj._attachments[attachmentId];\n\t    if (Object.keys(obj._attachments).length === 0) {\n\t      delete obj._attachments;\n\t    }\n\t    self.put(obj, callback);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.remove =\n\t  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n\t  var doc;\n\t  if (typeof optsOrRev === 'string') {\n\t    // id, rev, opts, callback style\n\t    doc = {\n\t      _id: docOrId,\n\t      _rev: optsOrRev\n\t    };\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t  } else {\n\t    // doc, opts, callback style\n\t    doc = docOrId;\n\t    if (typeof optsOrRev === 'function') {\n\t      callback = optsOrRev;\n\t      opts = {};\n\t    } else {\n\t      callback = opts;\n\t      opts = optsOrRev;\n\t    }\n\t  }\n\t  opts = opts || {};\n\t  opts.was_delete = true;\n\t  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n\t  newDoc._deleted = true;\n\t  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n\t    return this._removeLocal(doc, callback);\n\t  }\n\t  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n\t});\n\t\n\tAbstractPouchDB.prototype.revsDiff =\n\t  adapterFun('revsDiff', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  var ids = Object.keys(req);\n\t\n\t  if (!ids.length) {\n\t    return callback(null, {});\n\t  }\n\t\n\t  var count = 0;\n\t  var missing = new _Map();\n\t\n\t  function addToMissing(id, revId) {\n\t    if (!missing.has(id)) {\n\t      missing.set(id, {missing: []});\n\t    }\n\t    missing.get(id).missing.push(revId);\n\t  }\n\t\n\t  function processDoc(id, rev_tree) {\n\t    // Is this fast enough? Maybe we should switch to a set simulated by a map\n\t    var missingForId = req[id].slice(0);\n\t    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n\t      opts) {\n\t        var rev = pos + '-' + revHash;\n\t        var idx = missingForId.indexOf(rev);\n\t        if (idx === -1) {\n\t          return;\n\t        }\n\t\n\t        missingForId.splice(idx, 1);\n\t        /* istanbul ignore if */\n\t        if (opts.status !== 'available') {\n\t          addToMissing(id, rev);\n\t        }\n\t      });\n\t\n\t    // Traversing the tree is synchronous, so now `missingForId` contains\n\t    // revisions that were not found in the tree\n\t    missingForId.forEach(function (rev) {\n\t      addToMissing(id, rev);\n\t    });\n\t  }\n\t\n\t  ids.map(function (id) {\n\t    this._getRevisionTree(id, function (err, rev_tree) {\n\t      if (err && err.status === 404 && err.message === 'missing') {\n\t        missing.set(id, {missing: req[id]});\n\t      } else if (err) {\n\t        /* istanbul ignore next */\n\t        return callback(err);\n\t      } else {\n\t        processDoc(id, rev_tree);\n\t      }\n\t\n\t      if (++count === ids.length) {\n\t        // convert LazyMap to object\n\t        var missingObj = {};\n\t        missing.forEach(function (value, key) {\n\t          missingObj[key] = value;\n\t        });\n\t        return callback(null, missingObj);\n\t      }\n\t    });\n\t  }, this);\n\t});\n\t\n\t// _bulk_get API for faster replication, as described in\n\t// https://github.com/apache/couchdb-chttpd/pull/33\n\t// At the \"abstract\" level, it will just run multiple get()s in\n\t// parallel, because this isn't much of a performance cost\n\t// for local databases (except the cost of multiple transactions, which is\n\t// small). The http adapter overrides this in order\n\t// to do a more efficient single HTTP request.\n\tAbstractPouchDB.prototype.bulkGet =\n\t  adapterFun('bulkGet', function (opts, callback) {\n\t  bulkGet(this, opts, callback);\n\t});\n\t\n\t// compact one document and fire callback\n\t// by compacting we mean removing all revisions which\n\t// are further from the leaf in revision tree than max_height\n\tAbstractPouchDB.prototype.compactDocument =\n\t  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n\t  var self = this;\n\t  this._getRevisionTree(docId, function (err, revTree) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    var height = computeHeight(revTree);\n\t    var candidates = [];\n\t    var revs = [];\n\t    Object.keys(height).forEach(function (rev) {\n\t      if (height[rev] > maxHeight) {\n\t        candidates.push(rev);\n\t      }\n\t    });\n\t\n\t    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n\t      var rev = pos + '-' + revHash;\n\t      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n\t        revs.push(rev);\n\t      }\n\t    });\n\t    self._doCompaction(docId, revs, callback);\n\t  });\n\t});\n\t\n\t// compact the whole database using single document\n\t// compaction\n\tAbstractPouchDB.prototype.compact =\n\t  adapterFun('compact', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  self._compactionQueue = self._compactionQueue || [];\n\t  self._compactionQueue.push({opts: opts, callback: callback});\n\t  if (self._compactionQueue.length === 1) {\n\t    doNextCompaction(self);\n\t  }\n\t});\n\tAbstractPouchDB.prototype._compact = function (opts, callback) {\n\t  var self = this;\n\t  var changesOpts = {\n\t    return_docs: false,\n\t    last_seq: opts.last_seq || 0\n\t  };\n\t  var promises = [];\n\t\n\t  function onChange(row) {\n\t    promises.push(self.compactDocument(row.id, 0));\n\t  }\n\t  function onComplete(resp) {\n\t    var lastSeq = resp.last_seq;\n\t    PouchPromise.all(promises).then(function () {\n\t      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n\t        if (!doc.last_seq || doc.last_seq < lastSeq) {\n\t          doc.last_seq = lastSeq;\n\t          return doc;\n\t        }\n\t        return false; // somebody else got here first, don't update\n\t      });\n\t    }).then(function () {\n\t      callback(null, {ok: true});\n\t    }).catch(callback);\n\t  }\n\t  self.changes(changesOpts)\n\t    .on('change', onChange)\n\t    .on('complete', onComplete)\n\t    .on('error', callback);\n\t};\n\t\n\t/* Begin api wrappers. Specific functionality to storage belongs in the\n\t   _[method] */\n\tAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof id !== 'string') {\n\t    return cb(createError(INVALID_ID));\n\t  }\n\t  if (isLocalId(id) && typeof this._getLocal === 'function') {\n\t    return this._getLocal(id, cb);\n\t  }\n\t  var leaves = [], self = this;\n\t\n\t  function finishOpenRevs() {\n\t    var result = [];\n\t    var count = leaves.length;\n\t    /* istanbul ignore if */\n\t    if (!count) {\n\t      return cb(null, result);\n\t    }\n\t    // order with open_revs is unspecified\n\t    leaves.forEach(function (leaf) {\n\t      self.get(id, {\n\t        rev: leaf,\n\t        revs: opts.revs,\n\t        attachments: opts.attachments\n\t      }, function (err, doc) {\n\t        if (!err) {\n\t          result.push({ok: doc});\n\t        } else {\n\t          result.push({missing: leaf});\n\t        }\n\t        count--;\n\t        if (!count) {\n\t          cb(null, result);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  if (opts.open_revs) {\n\t    if (opts.open_revs === \"all\") {\n\t      this._getRevisionTree(id, function (err, rev_tree) {\n\t        if (err) {\n\t          return cb(err);\n\t        }\n\t        leaves = collectLeaves(rev_tree).map(function (leaf) {\n\t          return leaf.rev;\n\t        });\n\t        finishOpenRevs();\n\t      });\n\t    } else {\n\t      if (Array.isArray(opts.open_revs)) {\n\t        leaves = opts.open_revs;\n\t        for (var i = 0; i < leaves.length; i++) {\n\t          var l = leaves[i];\n\t          // looks like it's the only thing couchdb checks\n\t          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n\t            return cb(createError(INVALID_REV));\n\t          }\n\t        }\n\t        finishOpenRevs();\n\t      } else {\n\t        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n\t      }\n\t    }\n\t    return; // open_revs does not like other options\n\t  }\n\t\n\t  return this._get(id, opts, function (err, result) {\n\t    if (err) {\n\t      return cb(err);\n\t    }\n\t\n\t    var doc = result.doc;\n\t    var metadata = result.metadata;\n\t    var ctx = result.ctx;\n\t\n\t    if (opts.conflicts) {\n\t      var conflicts = collectConflicts(metadata);\n\t      if (conflicts.length) {\n\t        doc._conflicts = conflicts;\n\t      }\n\t    }\n\t\n\t    if (isDeleted(metadata, doc._rev)) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    if (opts.revs || opts.revs_info) {\n\t      var paths = rootToLeaf(metadata.rev_tree);\n\t      var path = arrayFirst(paths, function (arr) {\n\t        return arr.ids.map(function (x) { return x.id; })\n\t          .indexOf(doc._rev.split('-')[1]) !== -1;\n\t      });\n\t\n\t      var indexOfRev = path.ids.map(function (x) {return x.id; })\n\t        .indexOf(doc._rev.split('-')[1]) + 1;\n\t      var howMany = path.ids.length - indexOfRev;\n\t      path.ids.splice(indexOfRev, howMany);\n\t      path.ids.reverse();\n\t\n\t      if (opts.revs) {\n\t        doc._revisions = {\n\t          start: (path.pos + path.ids.length) - 1,\n\t          ids: path.ids.map(function (rev) {\n\t            return rev.id;\n\t          })\n\t        };\n\t      }\n\t      if (opts.revs_info) {\n\t        var pos =  path.pos + path.ids.length;\n\t        doc._revs_info = path.ids.map(function (rev) {\n\t          pos--;\n\t          return {\n\t            rev: pos + '-' + rev.id,\n\t            status: rev.opts.status\n\t          };\n\t        });\n\t      }\n\t    }\n\t\n\t    if (opts.attachments && doc._attachments) {\n\t      var attachments = doc._attachments;\n\t      var count = Object.keys(attachments).length;\n\t      if (count === 0) {\n\t        return cb(null, doc);\n\t      }\n\t      Object.keys(attachments).forEach(function (key) {\n\t        this._getAttachment(doc._id, key, attachments[key], {\n\t          // Previously the revision handling was done in adapter.js\n\t          // getAttachment, however since idb-next doesnt we need to\n\t          // pass the rev through\n\t          rev: doc._rev,\n\t          binary: opts.binary,\n\t          ctx: ctx\n\t        }, function (err, data) {\n\t          var att = doc._attachments[key];\n\t          att.data = data;\n\t          delete att.stub;\n\t          delete att.length;\n\t          if (!--count) {\n\t            cb(null, doc);\n\t          }\n\t        });\n\t      }, self);\n\t    } else {\n\t      if (doc._attachments) {\n\t        for (var key in doc._attachments) {\n\t          /* istanbul ignore else */\n\t          if (doc._attachments.hasOwnProperty(key)) {\n\t            doc._attachments[key].stub = true;\n\t          }\n\t        }\n\t      }\n\t      cb(null, doc);\n\t    }\n\t  });\n\t});\n\t\n\t// TODO: I dont like this, it forces an extra read for every\n\t// attachment read and enforces a confusing api between\n\t// adapter.js and the adapter implementation\n\tAbstractPouchDB.prototype.getAttachment =\n\t  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n\t  var self = this;\n\t  if (opts instanceof Function) {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  this._get(docId, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n\t      opts.ctx = res.ctx;\n\t      opts.binary = true;\n\t      self._getAttachment(docId, attachmentId,\n\t                          res.doc._attachments[attachmentId], opts, callback);\n\t    } else {\n\t      return callback(createError(MISSING_DOC));\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.allDocs =\n\t  adapterFun('allDocs', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\t  if (opts.start_key) {\n\t    opts.startkey = opts.start_key;\n\t  }\n\t  if (opts.end_key) {\n\t    opts.endkey = opts.end_key;\n\t  }\n\t  if ('keys' in opts) {\n\t    if (!Array.isArray(opts.keys)) {\n\t      return callback(new TypeError('options.keys must be an array'));\n\t    }\n\t    var incompatibleOpt =\n\t      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n\t      return incompatibleOpt in opts;\n\t    })[0];\n\t    if (incompatibleOpt) {\n\t      callback(createError(QUERY_PARSE_ERROR,\n\t        'Query parameter `' + incompatibleOpt +\n\t        '` is not compatible with multi-get'\n\t      ));\n\t      return;\n\t    }\n\t    if (this.type() !== 'http') {\n\t      return allDocsKeysQuery(this, opts, callback);\n\t    }\n\t  }\n\t\n\t  return this._allDocs(opts, callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.changes = function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return new Changes(this, opts, callback);\n\t};\n\t\n\tAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n\t  this._closed = true;\n\t  return this._close(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n\t  var self = this;\n\t  this._info(function (err, info) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    // assume we know better than the adapter, unless it informs us\n\t    info.db_name = info.db_name || self.name;\n\t    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n\t    info.adapter = self.type();\n\t    callback(null, info);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n\t  return this._id(callback);\n\t});\n\t\n\t/* istanbul ignore next */\n\tAbstractPouchDB.prototype.type = function () {\n\t  return (typeof this._type === 'function') ? this._type() : this.adapter;\n\t};\n\t\n\tAbstractPouchDB.prototype.bulkDocs =\n\t  adapterFun('bulkDocs', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  if (Array.isArray(req)) {\n\t    req = {\n\t      docs: req\n\t    };\n\t  }\n\t\n\t  if (!req || !req.docs || !Array.isArray(req.docs)) {\n\t    return callback(createError(MISSING_BULK_DOCS));\n\t  }\n\t\n\t  for (var i = 0; i < req.docs.length; ++i) {\n\t    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n\t      return callback(createError(NOT_AN_OBJECT));\n\t    }\n\t  }\n\t\n\t  var attachmentError;\n\t  req.docs.forEach(function (doc) {\n\t    if (doc._attachments) {\n\t      Object.keys(doc._attachments).forEach(function (name) {\n\t        attachmentError = attachmentError || attachmentNameError(name);\n\t      });\n\t    }\n\t  });\n\t\n\t  if (attachmentError) {\n\t    return callback(createError(BAD_REQUEST, attachmentError));\n\t  }\n\t\n\t  if (!('new_edits' in opts)) {\n\t    if ('new_edits' in req) {\n\t      opts.new_edits = req.new_edits;\n\t    } else {\n\t      opts.new_edits = true;\n\t    }\n\t  }\n\t\n\t  if (!opts.new_edits && this.type() !== 'http') {\n\t    // ensure revisions of the same doc are sorted, so that\n\t    // the local adapter processes them correctly (#2935)\n\t    req.docs.sort(compareByIdThenRev);\n\t  }\n\t\n\t  cleanDocs(req.docs);\n\t\n\t  return this._bulkDocs(req, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (!opts.new_edits) {\n\t      // this is what couch does when new_edits is false\n\t      res = res.filter(function (x) {\n\t        return x.error;\n\t      });\n\t    }\n\t    callback(null, res);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.registerDependentDatabase =\n\t  adapterFun('registerDependentDatabase', function (dependentDb,\n\t                                                          callback) {\n\t  var depDB = new this.constructor(dependentDb, this.__opts);\n\t\n\t  function diffFun(doc) {\n\t    doc.dependentDbs = doc.dependentDbs || {};\n\t    if (doc.dependentDbs[dependentDb]) {\n\t      return false; // no update required\n\t    }\n\t    doc.dependentDbs[dependentDb] = true;\n\t    return doc;\n\t  }\n\t  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n\t    .then(function () {\n\t      callback(null, {db: depDB});\n\t    }).catch(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.destroy =\n\t  adapterFun('destroy', function (opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\t\n\t  function destroyDb() {\n\t    // call destroy method of the particular adaptor\n\t    self._destroy(opts, function (err, resp) {\n\t      if (err) {\n\t        return callback(err);\n\t      }\n\t      self._destroyed = true;\n\t      self.emit('destroyed');\n\t      callback(null, resp || { 'ok': true });\n\t    });\n\t  }\n\t\n\t  if (self.type() === 'http') {\n\t    // no need to check for dependent DBs if it's a remote DB\n\t    return destroyDb();\n\t  }\n\t\n\t  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n\t    if (err) {\n\t      /* istanbul ignore if */\n\t      if (err.status !== 404) {\n\t        return callback(err);\n\t      } else { // no dependencies\n\t        return destroyDb();\n\t      }\n\t    }\n\t    var dependentDbs = localDoc.dependentDbs;\n\t    var PouchDB = self.constructor;\n\t    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n\t      // use_prefix is only false in the browser\n\t      /* istanbul ignore next */\n\t      var trueName = usePrefix ?\n\t        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n\t      return new PouchDB(trueName, self.__opts).destroy();\n\t    });\n\t    PouchPromise.all(deletedMap).then(destroyDb, callback);\n\t  });\n\t});\n\t\n\tfunction TaskQueue() {\n\t  this.isReady = false;\n\t  this.failed = false;\n\t  this.queue = [];\n\t}\n\t\n\tTaskQueue.prototype.execute = function () {\n\t  var fun;\n\t  if (this.failed) {\n\t    while ((fun = this.queue.shift())) {\n\t      fun(this.failed);\n\t    }\n\t  } else {\n\t    while ((fun = this.queue.shift())) {\n\t      fun();\n\t    }\n\t  }\n\t};\n\t\n\tTaskQueue.prototype.fail = function (err) {\n\t  this.failed = err;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue.prototype.ready = function (db) {\n\t  this.isReady = true;\n\t  this.db = db;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue.prototype.addTask = function (fun) {\n\t  this.queue.push(fun);\n\t  if (this.failed) {\n\t    this.execute();\n\t  }\n\t};\n\t\n\tfunction parseAdapter(name, opts) {\n\t  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n\t  if (match) {\n\t    // the http adapter expects the fully qualified name\n\t    name = /http(s?)/.test(match[1]) ? match[1] + '://' + match[2] : match[2];\n\t    return {name: name, adapter: match[1]};\n\t  }\n\t\n\t  // check for browsers that have been upgraded from websql-only to websql+idb\n\t  var skipIdb = 'idb' in PouchDB.adapters && 'websql' in PouchDB.adapters &&\n\t    hasLocalStorage() &&\n\t    localStorage['_pouch__websqldb_' + PouchDB.prefix + name];\n\t\n\t  var adapterName;\n\t\n\t  if (opts.adapter) {\n\t    adapterName = opts.adapter;\n\t  } else if (typeof opts !== 'undefined' && opts.db) {\n\t    adapterName = 'leveldb';\n\t  } else { // automatically determine adapter\n\t    for (var i = 0; i < PouchDB.preferredAdapters.length; ++i) {\n\t      adapterName = PouchDB.preferredAdapters[i];\n\t      /* istanbul ignore if */\n\t      if (skipIdb && adapterName === 'idb') {\n\t        // log it, because this can be confusing during development\n\t        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n\t          ' avoid data loss, because it was already opened with WebSQL.');\n\t        continue; // keep using websql to avoid user data loss\n\t      }\n\t      break;\n\t    }\n\t  }\n\t\n\t  var adapter = PouchDB.adapters[adapterName];\n\t\n\t  // if adapter is invalid, then an error will be thrown later\n\t  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n\t    adapter.use_prefix : true;\n\t\n\t  return {\n\t    name: usePrefix ? (PouchDB.prefix + name) : name,\n\t    adapter: adapterName\n\t  };\n\t}\n\t\n\t// OK, so here's the deal. Consider this code:\n\t//     var db1 = new PouchDB('foo');\n\t//     var db2 = new PouchDB('foo');\n\t//     db1.destroy();\n\t// ^ these two both need to emit 'destroyed' events,\n\t// as well as the PouchDB constructor itself.\n\t// So we have one db object (whichever one got destroy() called on it)\n\t// responsible for emitting the initial event, which then gets emitted\n\t// by the constructor, which then broadcasts it to any other dbs\n\t// that may have been created with the same name.\n\tfunction prepareForDestruction(self) {\n\t\n\t  var destructionListeners = self.constructor._destructionListeners;\n\t\n\t  function onDestroyed() {\n\t    self.constructor.emit('destroyed', self.name);\n\t  }\n\t\n\t  function onConstructorDestroyed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    self.emit('destroyed', self);\n\t  }\n\t\n\t  self.once('destroyed', onDestroyed);\n\t\n\t  // in setup.js, the constructor is primed to listen for destroy events\n\t  if (!destructionListeners.has(self.name)) {\n\t    destructionListeners.set(self.name, []);\n\t  }\n\t  destructionListeners.get(self.name).push(onConstructorDestroyed);\n\t}\n\t\n\tinherits(PouchDB, AbstractPouchDB);\n\tfunction PouchDB(name, opts) {\n\t  // In Node our test suite only tests this for PouchAlt unfortunately\n\t  /* istanbul ignore if */\n\t  if (!(this instanceof PouchDB)) {\n\t    return new PouchDB(name, opts);\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  if (name && typeof name === 'object') {\n\t    opts = name;\n\t    name = opts.name;\n\t    delete opts.name;\n\t  }\n\t\n\t  this.__opts = opts = clone(opts);\n\t\n\t  self.auto_compaction = opts.auto_compaction;\n\t  self.prefix = PouchDB.prefix;\n\t\n\t  if (typeof name !== 'string') {\n\t    throw new Error('Missing/invalid DB name');\n\t  }\n\t\n\t  var prefixedName = (opts.prefix || '') + name;\n\t  var backend = parseAdapter(prefixedName, opts);\n\t\n\t  opts.name = backend.name;\n\t  opts.adapter = opts.adapter || backend.adapter;\n\t\n\t  self.name = name;\n\t  self._adapter = opts.adapter;\n\t  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\t\n\t  if (!PouchDB.adapters[opts.adapter] ||\n\t      !PouchDB.adapters[opts.adapter].valid()) {\n\t    throw new Error('Invalid Adapter: ' + opts.adapter);\n\t  }\n\t\n\t  AbstractPouchDB.call(self);\n\t  self.taskqueue = new TaskQueue();\n\t\n\t  self.adapter = opts.adapter;\n\t\n\t  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n\t    if (err) {\n\t      return self.taskqueue.fail(err);\n\t    }\n\t    prepareForDestruction(self);\n\t\n\t    self.emit('created', self);\n\t    PouchDB.emit('created', self.name);\n\t    self.taskqueue.ready(self);\n\t  });\n\t\n\t}\n\t\n\tPouchDB.debug = debug;\n\t\n\tPouchDB.adapters = {};\n\tPouchDB.preferredAdapters = [];\n\t\n\tPouchDB.prefix = '_pouch_';\n\t\n\tvar eventEmitter = new events.EventEmitter();\n\t\n\tfunction setUpEventEmitter(Pouch) {\n\t  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n\t    if (typeof events.EventEmitter.prototype[key] === 'function') {\n\t      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n\t    }\n\t  });\n\t\n\t  // these are created in constructor.js, and allow us to notify each DB with\n\t  // the same name that it was destroyed, via the constructor object\n\t  var destructListeners = Pouch._destructionListeners = new _Map();\n\t  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n\t    destructListeners.get(name).forEach(function (callback) {\n\t      callback();\n\t    });\n\t    destructListeners.delete(name);\n\t  });\n\t}\n\t\n\tsetUpEventEmitter(PouchDB);\n\t\n\tPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n\t  /* istanbul ignore else */\n\t  if (obj.valid()) {\n\t    PouchDB.adapters[id] = obj;\n\t    if (addToPreferredAdapters) {\n\t      PouchDB.preferredAdapters.push(id);\n\t    }\n\t  }\n\t};\n\t\n\tPouchDB.plugin = function (obj) {\n\t  if (typeof obj === 'function') { // function style for plugins\n\t    obj(PouchDB);\n\t  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n\t    throw new Error('Invalid plugin: object passed in is empty or not an object');\n\t  } else {\n\t    Object.keys(obj).forEach(function (id) { // object style for plugins\n\t      PouchDB.prototype[id] = obj[id];\n\t    });\n\t  }\n\t  return PouchDB;\n\t};\n\t\n\tPouchDB.defaults = function (defaultOpts) {\n\t  function PouchAlt(name, opts) {\n\t    if (!(this instanceof PouchAlt)) {\n\t      return new PouchAlt(name, opts);\n\t    }\n\t\n\t    opts = opts || {};\n\t\n\t    if (name && typeof name === 'object') {\n\t      opts = name;\n\t      name = opts.name;\n\t      delete opts.name;\n\t    }\n\t\n\t    opts = jsExtend.extend({}, defaultOpts, opts);\n\t    PouchDB.call(this, name, opts);\n\t  }\n\t\n\t  inherits(PouchAlt, PouchDB);\n\t\n\t  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n\t  Object.keys(PouchDB).forEach(function (key) {\n\t    if (!(key in PouchAlt)) {\n\t      PouchAlt[key] = PouchDB[key];\n\t    }\n\t  });\n\t\n\t  return PouchAlt;\n\t};\n\t\n\t// managed automatically by set-version.js\n\tvar version = \"6.0.5\";\n\t\n\tPouchDB.version = version;\n\t\n\tfunction toObject(array) {\n\t  return array.reduce(function (obj, item) {\n\t    obj[item] = true;\n\t    return obj;\n\t  }, {});\n\t}\n\t// List of top level reserved words for doc\n\tvar reservedWords = toObject([\n\t  '_id',\n\t  '_rev',\n\t  '_attachments',\n\t  '_deleted',\n\t  '_revisions',\n\t  '_revs_info',\n\t  '_conflicts',\n\t  '_deleted_conflicts',\n\t  '_local_seq',\n\t  '_rev_tree',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats',\n\t  // Specific to Couchbase Sync Gateway\n\t  '_removed'\n\t]);\n\t\n\t// List of reserved words that should end up the document\n\tvar dataWords = toObject([\n\t  '_attachments',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats'\n\t]);\n\t\n\tfunction parseRevisionInfo(rev) {\n\t  if (!/^\\d+\\-./.test(rev)) {\n\t    return createError(INVALID_REV);\n\t  }\n\t  var idx = rev.indexOf('-');\n\t  var left = rev.substring(0, idx);\n\t  var right = rev.substring(idx + 1);\n\t  return {\n\t    prefix: parseInt(left, 10),\n\t    id: right\n\t  };\n\t}\n\t\n\tfunction makeRevTreeFromRevisions(revisions, opts) {\n\t  var pos = revisions.start - revisions.ids.length + 1;\n\t\n\t  var revisionIds = revisions.ids;\n\t  var ids = [revisionIds[0], opts, []];\n\t\n\t  for (var i = 1, len = revisionIds.length; i < len; i++) {\n\t    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n\t  }\n\t\n\t  return [{\n\t    pos: pos,\n\t    ids: ids\n\t  }];\n\t}\n\t\n\t// Preprocess documents, parse their revisions, assign an id and a\n\t// revision for new writes that are missing them, etc\n\tfunction parseDoc(doc, newEdits) {\n\t\n\t  var nRevNum;\n\t  var newRevId;\n\t  var revInfo;\n\t  var opts = {status: 'available'};\n\t  if (doc._deleted) {\n\t    opts.deleted = true;\n\t  }\n\t\n\t  if (newEdits) {\n\t    if (!doc._id) {\n\t      doc._id = uuid();\n\t    }\n\t    newRevId = uuid(32, 16).toLowerCase();\n\t    if (doc._rev) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      doc._rev_tree = [{\n\t        pos: revInfo.prefix,\n\t        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n\t      }];\n\t      nRevNum = revInfo.prefix + 1;\n\t    } else {\n\t      doc._rev_tree = [{\n\t        pos: 1,\n\t        ids : [newRevId, opts, []]\n\t      }];\n\t      nRevNum = 1;\n\t    }\n\t  } else {\n\t    if (doc._revisions) {\n\t      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n\t      nRevNum = doc._revisions.start;\n\t      newRevId = doc._revisions.ids[0];\n\t    }\n\t    if (!doc._rev_tree) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      nRevNum = revInfo.prefix;\n\t      newRevId = revInfo.id;\n\t      doc._rev_tree = [{\n\t        pos: nRevNum,\n\t        ids: [newRevId, opts, []]\n\t      }];\n\t    }\n\t  }\n\t\n\t  invalidIdError(doc._id);\n\t\n\t  doc._rev = nRevNum + '-' + newRevId;\n\t\n\t  var result = {metadata : {}, data : {}};\n\t  for (var key in doc) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n\t      var specialKey = key[0] === '_';\n\t      if (specialKey && !reservedWords[key]) {\n\t        var error = createError(DOC_VALIDATION, key);\n\t        error.message = DOC_VALIDATION.message + ': ' + key;\n\t        throw error;\n\t      } else if (specialKey && !dataWords[key]) {\n\t        result.metadata[key.slice(1)] = doc[key];\n\t      } else {\n\t        result.data[key] = doc[key];\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar atob$1 = function (str) {\n\t  return atob(str);\n\t};\n\t\n\tvar btoa$1 = function (str) {\n\t  return btoa(str);\n\t};\n\t\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor (e.g.\n\t// old QtWebKit versions, Android < 4.4).\n\tfunction createBlob(parts, properties) {\n\t  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t  parts = parts || [];\n\t  properties = properties || {};\n\t  try {\n\t    return new Blob(parts, properties);\n\t  } catch (e) {\n\t    if (e.name !== \"TypeError\") {\n\t      throw e;\n\t    }\n\t    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n\t                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n\t                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n\t                  WebKitBlobBuilder;\n\t    var builder = new Builder();\n\t    for (var i = 0; i < parts.length; i += 1) {\n\t      builder.append(parts[i]);\n\t    }\n\t    return builder.getBlob(properties.type);\n\t  }\n\t}\n\t\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction binaryStringToArrayBuffer(bin) {\n\t  var length = bin.length;\n\t  var buf = new ArrayBuffer(length);\n\t  var arr = new Uint8Array(buf);\n\t  for (var i = 0; i < length; i++) {\n\t    arr[i] = bin.charCodeAt(i);\n\t  }\n\t  return buf;\n\t}\n\t\n\tfunction binStringToBluffer(binString, type) {\n\t  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n\t}\n\t\n\tfunction b64ToBluffer(b64, type) {\n\t  return binStringToBluffer(atob$1(b64), type);\n\t}\n\t\n\t//Can't find original post, but this is close\n\t//http://stackoverflow.com/questions/6965107/ (continues on next line)\n\t//converting-between-strings-and-arraybuffers\n\tfunction arrayBufferToBinaryString(buffer) {\n\t  var binary = '';\n\t  var bytes = new Uint8Array(buffer);\n\t  var length = bytes.byteLength;\n\t  for (var i = 0; i < length; i++) {\n\t    binary += String.fromCharCode(bytes[i]);\n\t  }\n\t  return binary;\n\t}\n\t\n\t// shim for browsers that don't support it\n\tfunction readAsBinaryString(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(arrayBufferToBinaryString(\n\t      new FileReaderSync().readAsArrayBuffer(blob)));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || '';\n\t    if (hasBinaryString) {\n\t      return callback(result);\n\t    }\n\t    callback(arrayBufferToBinaryString(result));\n\t  };\n\t  if (hasBinaryString) {\n\t    reader.readAsBinaryString(blob);\n\t  } else {\n\t    reader.readAsArrayBuffer(blob);\n\t  }\n\t}\n\t\n\tfunction blobToBinaryString(blobOrBuffer, callback) {\n\t  readAsBinaryString(blobOrBuffer, function (bin) {\n\t    callback(bin);\n\t  });\n\t}\n\t\n\tfunction blobToBase64(blobOrBuffer, callback) {\n\t  blobToBinaryString(blobOrBuffer, function (base64) {\n\t    callback(btoa$1(base64));\n\t  });\n\t}\n\t\n\t// simplified API. universal browser support is assumed\n\tfunction readAsArrayBuffer(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker:\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || new ArrayBuffer(0);\n\t    callback(result);\n\t  };\n\t  reader.readAsArrayBuffer(blob);\n\t}\n\t\n\tvar setImmediateShim = global.setImmediate || global.setTimeout;\n\tvar MD5_CHUNK_SIZE = 32768;\n\t\n\tfunction rawToBase64(raw) {\n\t  return btoa$1(raw);\n\t}\n\t\n\tfunction sliceBlob(blob, start, end) {\n\t  if (blob.webkitSlice) {\n\t    return blob.webkitSlice(start, end);\n\t  }\n\t  return blob.slice(start, end);\n\t}\n\t\n\tfunction appendBlob(buffer, blob, start, end, callback) {\n\t  if (start > 0 || end < blob.size) {\n\t    // only slice blob if we really need to\n\t    blob = sliceBlob(blob, start, end);\n\t  }\n\t  readAsArrayBuffer(blob, function (arrayBuffer) {\n\t    buffer.append(arrayBuffer);\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction appendString(buffer, string, start, end, callback) {\n\t  if (start > 0 || end < string.length) {\n\t    // only create a substring if we really need to\n\t    string = string.substring(start, end);\n\t  }\n\t  buffer.appendBinary(string);\n\t  callback();\n\t}\n\t\n\tfunction binaryMd5(data, callback) {\n\t  var inputIsString = typeof data === 'string';\n\t  var len = inputIsString ? data.length : data.size;\n\t  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n\t  var chunks = Math.ceil(len / chunkSize);\n\t  var currentChunk = 0;\n\t  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\t\n\t  var append = inputIsString ? appendString : appendBlob;\n\t\n\t  function next() {\n\t    setImmediateShim(loadNextChunk);\n\t  }\n\t\n\t  function done() {\n\t    var raw = buffer.end(true);\n\t    var base64 = rawToBase64(raw);\n\t    callback(base64);\n\t    buffer.destroy();\n\t  }\n\t\n\t  function loadNextChunk() {\n\t    var start = currentChunk * chunkSize;\n\t    var end = start + chunkSize;\n\t    currentChunk++;\n\t    if (currentChunk < chunks) {\n\t      append(buffer, data, start, end, next);\n\t    } else {\n\t      append(buffer, data, start, end, done);\n\t    }\n\t  }\n\t  loadNextChunk();\n\t}\n\t\n\tfunction stringMd5(string) {\n\t  return Md5.hash(string);\n\t}\n\t\n\tfunction parseBase64(data) {\n\t  try {\n\t    return atob$1(data);\n\t  } catch (e) {\n\t    var err = createError(BAD_ARG,\n\t      'Attachment is not a valid base64 string');\n\t    return {error: err};\n\t  }\n\t}\n\t\n\tfunction preprocessString(att, blobType, callback) {\n\t  var asBinary = parseBase64(att.data);\n\t  if (asBinary.error) {\n\t    return callback(asBinary.error);\n\t  }\n\t\n\t  att.length = asBinary.length;\n\t  if (blobType === 'blob') {\n\t    att.data = binStringToBluffer(asBinary, att.content_type);\n\t  } else if (blobType === 'base64') {\n\t    att.data = btoa$1(asBinary);\n\t  } else { // binary\n\t    att.data = asBinary;\n\t  }\n\t  binaryMd5(asBinary, function (result) {\n\t    att.digest = 'md5-' + result;\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction preprocessBlob(att, blobType, callback) {\n\t  binaryMd5(att.data, function (md5) {\n\t    att.digest = 'md5-' + md5;\n\t    // size is for blobs (browser), length is for buffers (node)\n\t    att.length = att.data.size || att.data.length || 0;\n\t    if (blobType === 'binary') {\n\t      blobToBinaryString(att.data, function (binString) {\n\t        att.data = binString;\n\t        callback();\n\t      });\n\t    } else if (blobType === 'base64') {\n\t      blobToBase64(att.data, function (b64) {\n\t        att.data = b64;\n\t        callback();\n\t      });\n\t    } else {\n\t      callback();\n\t    }\n\t  });\n\t}\n\t\n\tfunction preprocessAttachment(att, blobType, callback) {\n\t  if (att.stub) {\n\t    return callback();\n\t  }\n\t  if (typeof att.data === 'string') { // input is a base64 string\n\t    preprocessString(att, blobType, callback);\n\t  } else { // input is a blob\n\t    preprocessBlob(att, blobType, callback);\n\t  }\n\t}\n\t\n\tfunction preprocessAttachments(docInfos, blobType, callback) {\n\t\n\t  if (!docInfos.length) {\n\t    return callback();\n\t  }\n\t\n\t  var docv = 0;\n\t  var overallErr;\n\t\n\t  docInfos.forEach(function (docInfo) {\n\t    var attachments = docInfo.data && docInfo.data._attachments ?\n\t      Object.keys(docInfo.data._attachments) : [];\n\t    var recv = 0;\n\t\n\t    if (!attachments.length) {\n\t      return done();\n\t    }\n\t\n\t    function processedAttachment(err) {\n\t      overallErr = err;\n\t      recv++;\n\t      if (recv === attachments.length) {\n\t        done();\n\t      }\n\t    }\n\t\n\t    for (var key in docInfo.data._attachments) {\n\t      if (docInfo.data._attachments.hasOwnProperty(key)) {\n\t        preprocessAttachment(docInfo.data._attachments[key],\n\t          blobType, processedAttachment);\n\t      }\n\t    }\n\t  });\n\t\n\t  function done() {\n\t    docv++;\n\t    if (docInfos.length === docv) {\n\t      if (overallErr) {\n\t        callback(overallErr);\n\t      } else {\n\t        callback();\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction updateDoc(revLimit, prev, docInfo, results,\n\t                   i, cb, writeDoc, newEdits) {\n\t\n\t  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n\t    results[i] = docInfo;\n\t    return cb();\n\t  }\n\t\n\t  // sometimes this is pre-calculated. historically not always\n\t  var previousWinningRev = prev.winningRev || winningRev(prev);\n\t  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n\t    isDeleted(prev, previousWinningRev);\n\t  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n\t    isDeleted(docInfo.metadata);\n\t  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\t\n\t  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n\t    var newDoc = docInfo.data;\n\t    newDoc._rev = previousWinningRev;\n\t    newDoc._id = docInfo.metadata.id;\n\t    docInfo = parseDoc(newDoc, newEdits);\n\t  }\n\t\n\t  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\t\n\t  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n\t    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n\t    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\t\n\t  if (inConflict) {\n\t    var err = createError(REV_CONFLICT);\n\t    results[i] = err;\n\t    return cb();\n\t  }\n\t\n\t  var newRev = docInfo.metadata.rev;\n\t  docInfo.metadata.rev_tree = merged.tree;\n\t  docInfo.stemmedRevs = merged.stemmedRevs || [];\n\t  /* istanbul ignore else */\n\t  if (prev.rev_map) {\n\t    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n\t  }\n\t\n\t  // recalculate\n\t  var winningRev$$ = winningRev(docInfo.metadata);\n\t  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$);\n\t\n\t  // calculate the total number of documents that were added/removed,\n\t  // from the perspective of total_rows/doc_count\n\t  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n\t    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\t\n\t  var newRevIsDeleted;\n\t  if (newRev === winningRev$$) {\n\t    // if the new rev is the same as the winning rev, we can reuse that value\n\t    newRevIsDeleted = winningRevIsDeleted;\n\t  } else {\n\t    // if they're not the same, then we need to recalculate\n\t    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n\t  }\n\t\n\t  writeDoc(docInfo, winningRev$$, winningRevIsDeleted, newRevIsDeleted,\n\t    true, delta, i, cb);\n\t}\n\t\n\tfunction rootIsMissing(docInfo) {\n\t  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n\t}\n\t\n\tfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n\t                     writeDoc, opts, overallCallback) {\n\t\n\t  // Default to 1000 locally\n\t  revLimit = revLimit || 1000;\n\t\n\t  function insertDoc(docInfo, resultsIdx, callback) {\n\t    // Cant insert new deleted documents\n\t    var winningRev$$ = winningRev(docInfo.metadata);\n\t    var deleted = isDeleted(docInfo.metadata, winningRev$$);\n\t    if ('was_delete' in opts && deleted) {\n\t      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n\t      return callback();\n\t    }\n\t\n\t    // 4712 - detect whether a new document was inserted with a _rev\n\t    var inConflict = newEdits && rootIsMissing(docInfo);\n\t\n\t    if (inConflict) {\n\t      var err = createError(REV_CONFLICT);\n\t      results[resultsIdx] = err;\n\t      return callback();\n\t    }\n\t\n\t    var delta = deleted ? 0 : 1;\n\t\n\t    writeDoc(docInfo, winningRev$$, deleted, deleted, false,\n\t      delta, resultsIdx, callback);\n\t  }\n\t\n\t  var newEdits = opts.new_edits;\n\t  var idsToDocs = new _Map();\n\t\n\t  var docsDone = 0;\n\t  var docsToDo = docInfos.length;\n\t\n\t  function checkAllDocsDone() {\n\t    if (++docsDone === docsToDo && overallCallback) {\n\t      overallCallback();\n\t    }\n\t  }\n\t\n\t  docInfos.forEach(function (currentDoc, resultsIdx) {\n\t\n\t    if (currentDoc._id && isLocalId(currentDoc._id)) {\n\t      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n\t      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n\t        results[resultsIdx] = err || res;\n\t        checkAllDocsDone();\n\t      });\n\t      return;\n\t    }\n\t\n\t    var id = currentDoc.metadata.id;\n\t    if (idsToDocs.has(id)) {\n\t      docsToDo--; // duplicate\n\t      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n\t    } else {\n\t      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n\t    }\n\t  });\n\t\n\t  // in the case of new_edits, the user can provide multiple docs\n\t  // with the same id. these need to be processed sequentially\n\t  idsToDocs.forEach(function (docs, id) {\n\t    var numDone = 0;\n\t\n\t    function docWritten() {\n\t      if (++numDone < docs.length) {\n\t        nextDoc();\n\t      } else {\n\t        checkAllDocsDone();\n\t      }\n\t    }\n\t    function nextDoc() {\n\t      var value = docs[numDone];\n\t      var currentDoc = value[0];\n\t      var resultsIdx = value[1];\n\t\n\t      if (fetchedDocs.has(id)) {\n\t        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n\t          resultsIdx, docWritten, writeDoc, newEdits);\n\t      } else {\n\t        // Ensure stemming applies to new writes as well\n\t        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n\t        currentDoc.metadata.rev_tree = merged.tree;\n\t        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n\t        insertDoc(currentDoc, resultsIdx, docWritten);\n\t      }\n\t    }\n\t    nextDoc();\n\t  });\n\t}\n\t\n\t// IndexedDB requires a versioned database structure, so we use the\n\t// version here to manage migrations.\n\tvar ADAPTER_VERSION = 5;\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\t// Keyed by document id\n\tvar DOC_STORE = 'document-store';\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE = 'by-sequence';\n\t// Where we store attachments\n\tvar ATTACH_STORE = 'attach-store';\n\t// Where we store many-to-many relations\n\t// between attachment digests and seqs\n\tvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\t\n\t// Where we store database-wide meta data in a single record\n\t// keyed by id: META_STORE\n\tvar META_STORE = 'meta-store';\n\t// Where we store local documents\n\tvar LOCAL_STORE = 'local-store';\n\t// Where we detect blob support\n\tvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\t\n\tfunction slowJsonParse(str) {\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.parse(str);\n\t  }\n\t}\n\t\n\tfunction safeJsonParse(str) {\n\t  // try/catch is deoptimized in V8, leading to slower\n\t  // times than we'd like to have. Most documents are _not_\n\t  // huge, and do not require a slower code path just to parse them.\n\t  // We can be pretty sure that a document under 50000 characters\n\t  // will not be so deeply nested as to throw a stack overflow error\n\t  // (depends on the engine and available memory, though, so this is\n\t  // just a hunch). 50000 was chosen based on the average length\n\t  // of this string in our test suite, to try to find a number that covers\n\t  // most of our test cases (26 over this size, 26378 under it).\n\t  if (str.length < 50000) {\n\t    return JSON.parse(str);\n\t  }\n\t  return slowJsonParse(str);\n\t}\n\t\n\tfunction safeJsonStringify(json) {\n\t  try {\n\t    return JSON.stringify(json);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.stringify(json);\n\t  }\n\t}\n\t\n\tfunction tryCode(fun, that, args, PouchDB) {\n\t  try {\n\t    fun.apply(that, args);\n\t  } catch (err) {\n\t    // Shouldn't happen, but in some odd cases\n\t    // IndexedDB implementations might throw a sync\n\t    // error, in which case this will at least log it.\n\t    PouchDB.emit('error', err);\n\t  }\n\t}\n\t\n\tvar taskQueue = {\n\t  running: false,\n\t  queue: []\n\t};\n\t\n\tfunction applyNext(PouchDB) {\n\t  if (taskQueue.running || !taskQueue.queue.length) {\n\t    return;\n\t  }\n\t  taskQueue.running = true;\n\t  var item = taskQueue.queue.shift();\n\t  item.action(function (err, res) {\n\t    tryCode(item.callback, this, [err, res], PouchDB);\n\t    taskQueue.running = false;\n\t    process.nextTick(function () {\n\t      applyNext(PouchDB);\n\t    });\n\t  });\n\t}\n\t\n\tfunction idbError(callback) {\n\t  return function (evt) {\n\t    var message = 'unknown_error';\n\t    if (evt.target && evt.target.error) {\n\t      message = evt.target.error.name || evt.target.error.message;\n\t    }\n\t    callback(createError(IDB_ERROR, message, evt.type));\n\t  };\n\t}\n\t\n\t// Unfortunately, the metadata has to be stringified\n\t// when it is put into the database, because otherwise\n\t// IndexedDB can throw errors for deeply-nested objects.\n\t// Originally we just used JSON.parse/JSON.stringify; now\n\t// we use this custom vuvuzela library that avoids recursion.\n\t// If we could do it all over again, we'd probably use a\n\t// format for the revision trees other than JSON.\n\tfunction encodeMetadata(metadata, winningRev, deleted) {\n\t  return {\n\t    data: safeJsonStringify(metadata),\n\t    winningRev: winningRev,\n\t    deletedOrLocal: deleted ? '1' : '0',\n\t    seq: metadata.seq, // highest seq for this doc\n\t    id: metadata.id\n\t  };\n\t}\n\t\n\tfunction decodeMetadata(storedObject) {\n\t  if (!storedObject) {\n\t    return null;\n\t  }\n\t  var metadata = safeJsonParse(storedObject.data);\n\t  metadata.winningRev = storedObject.winningRev;\n\t  metadata.deleted = storedObject.deletedOrLocal === '1';\n\t  metadata.seq = storedObject.seq;\n\t  return metadata;\n\t}\n\t\n\t// read the doc back out from the database. we don't store the\n\t// _id or _rev because we already have _doc_id_rev.\n\tfunction decodeDoc(doc) {\n\t  if (!doc) {\n\t    return doc;\n\t  }\n\t  var idx = doc._doc_id_rev.lastIndexOf(':');\n\t  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n\t  doc._rev = doc._doc_id_rev.substring(idx + 1);\n\t  delete doc._doc_id_rev;\n\t  return doc;\n\t}\n\t\n\t// Read a blob from the database, encoding as necessary\n\t// and translating from base64 if the IDB doesn't support\n\t// native Blobs\n\tfunction readBlobData(body, type, asBlob, callback) {\n\t  if (asBlob) {\n\t    if (!body) {\n\t      callback(createBlob([''], {type: type}));\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      callback(body);\n\t    } else { // no blob support\n\t      callback(b64ToBluffer(body, type));\n\t    }\n\t  } else { // as base64 string\n\t    if (!body) {\n\t      callback('');\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      readAsBinaryString(body, function (binary) {\n\t        callback(btoa$1(binary));\n\t      });\n\t    } else { // no blob support\n\t      callback(body);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var digest = attObj.digest;\n\t    var req = txn.objectStore(ATTACH_STORE).get(digest);\n\t    req.onsuccess = function (e) {\n\t      attObj.body = e.target.result.body;\n\t      checkDone();\n\t    };\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\t// IDB-specific postprocessing necessary because\n\t// we don't know whether we stored a true Blob or\n\t// a base64-encoded string, and if it's a Blob it\n\t// needs to be read outside of the transaction context\n\tfunction postProcessAttachments(results, asBlob) {\n\t  return PouchPromise.all(results.map(function (row) {\n\t    if (row.doc && row.doc._attachments) {\n\t      var attNames = Object.keys(row.doc._attachments);\n\t      return PouchPromise.all(attNames.map(function (att) {\n\t        var attObj = row.doc._attachments[att];\n\t        if (!('body' in attObj)) { // already processed\n\t          return;\n\t        }\n\t        var body = attObj.body;\n\t        var type = attObj.content_type;\n\t        return new PouchPromise(function (resolve) {\n\t          readBlobData(body, type, asBlob, function (data) {\n\t            row.doc._attachments[att] = jsExtend.extend(\n\t              pick(attObj, ['digest', 'content_type']),\n\t              {data: data}\n\t            );\n\t            resolve();\n\t          });\n\t        });\n\t      }));\n\t    }\n\t  }));\n\t}\n\t\n\tfunction compactRevs(revs, docId, txn) {\n\t\n\t  var possiblyOrphanedDigests = [];\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var attStore = txn.objectStore(ATTACH_STORE);\n\t  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t  var count = revs.length;\n\t\n\t  function checkDone() {\n\t    count--;\n\t    if (!count) { // done processing all revs\n\t      deleteOrphanedAttachments();\n\t    }\n\t  }\n\t\n\t  function deleteOrphanedAttachments() {\n\t    if (!possiblyOrphanedDigests.length) {\n\t      return;\n\t    }\n\t    possiblyOrphanedDigests.forEach(function (digest) {\n\t      var countReq = attAndSeqStore.index('digestSeq').count(\n\t        IDBKeyRange.bound(\n\t          digest + '::', digest + '::\\uffff', false, false));\n\t      countReq.onsuccess = function (e) {\n\t        var count = e.target.result;\n\t        if (!count) {\n\t          // orphaned\n\t          attStore.delete(digest);\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  revs.forEach(function (rev) {\n\t    var index = seqStore.index('_doc_id_rev');\n\t    var key = docId + \"::\" + rev;\n\t    index.getKey(key).onsuccess = function (e) {\n\t      var seq = e.target.result;\n\t      if (typeof seq !== 'number') {\n\t        return checkDone();\n\t      }\n\t      seqStore.delete(seq);\n\t\n\t      var cursor = attAndSeqStore.index('seq')\n\t        .openCursor(IDBKeyRange.only(seq));\n\t\n\t      cursor.onsuccess = function (event) {\n\t        var cursor = event.target.result;\n\t        if (cursor) {\n\t          var digest = cursor.value.digestSeq.split('::')[0];\n\t          possiblyOrphanedDigests.push(digest);\n\t          attAndSeqStore.delete(cursor.primaryKey);\n\t          cursor.continue();\n\t        } else { // done\n\t          checkDone();\n\t        }\n\t      };\n\t    };\n\t  });\n\t}\n\t\n\tfunction openTransactionSafely(idb, stores, mode) {\n\t  try {\n\t    return {\n\t      txn: idb.transaction(stores, mode)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction idbBulkDocs(dbOpts, req, opts, api, idb, idbChanges, callback) {\n\t  var docInfos = req.docs;\n\t  var txn;\n\t  var docStore;\n\t  var bySeqStore;\n\t  var attachStore;\n\t  var attachAndSeqStore;\n\t  var docInfoError;\n\t  var docCountDelta = 0;\n\t\n\t  for (var i = 0, len = docInfos.length; i < len; i++) {\n\t    var doc = docInfos[i];\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      continue;\n\t    }\n\t    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n\t    if (doc.error && !docInfoError) {\n\t      docInfoError = doc;\n\t    }\n\t  }\n\t\n\t  if (docInfoError) {\n\t    return callback(docInfoError);\n\t  }\n\t\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new _Map();\n\t  var preconditionErrored = false;\n\t  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\t\n\t  preprocessAttachments(docInfos, blobType, function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    startTransaction();\n\t  });\n\t\n\t  function startTransaction() {\n\t\n\t    var stores = [\n\t      DOC_STORE, BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      LOCAL_STORE, ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    txn = txnResult.txn;\n\t    txn.onabort = idbError(callback);\n\t    txn.ontimeout = idbError(callback);\n\t    txn.oncomplete = complete;\n\t    docStore = txn.objectStore(DOC_STORE);\n\t    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    attachStore = txn.objectStore(ATTACH_STORE);\n\t    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    verifyAttachments(function (err) {\n\t      if (err) {\n\t        preconditionErrored = true;\n\t        return callback(err);\n\t      }\n\t      fetchExistingDocs();\n\t    });\n\t  }\n\t\n\t  function idbProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n\t                txn, results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs() {\n\t\n\t    if (!docInfos.length) {\n\t      return;\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        idbProcessDocs();\n\t      }\n\t    }\n\t\n\t    function readMetadata(event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t\n\t      if (metadata) {\n\t        fetchedDocs.set(metadata.id, metadata);\n\t      }\n\t      checkDone();\n\t    }\n\t\n\t    for (var i = 0, len = docInfos.length; i < len; i++) {\n\t      var docInfo = docInfos[i];\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        checkDone(); // skip local docs\n\t        continue;\n\t      }\n\t      var req = docStore.get(docInfo.metadata.id);\n\t      req.onsuccess = readMetadata;\n\t    }\n\t  }\n\t\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return;\n\t    }\n\t\n\t    idbChanges.notify(api._meta.name);\n\t    api._meta.docCount += docCountDelta;\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t\n\t    var req = attachStore.get(digest);\n\t    req.onsuccess = function (e) {\n\t      if (!e.target.result) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        err.status = 412;\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t\n\t\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    docCountDelta += delta;\n\t\n\t    docInfo.metadata.winningRev = winningRev;\n\t    docInfo.metadata.deleted = winningRevIsDeleted;\n\t\n\t    var doc = docInfo.data;\n\t    doc._id = docInfo.metadata.id;\n\t    doc._rev = docInfo.metadata.rev;\n\t\n\t    if (newRevIsDeleted) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    var hasAttachments = doc._attachments &&\n\t      Object.keys(doc._attachments).length;\n\t    if (hasAttachments) {\n\t      return writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n\t        isUpdate, resultsIdx, callback);\n\t    }\n\t\n\t    finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t      isUpdate, resultsIdx, callback);\n\t  }\n\t\n\t  function finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t                     isUpdate, resultsIdx, callback) {\n\t\n\t    var doc = docInfo.data;\n\t    var metadata = docInfo.metadata;\n\t\n\t    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n\t    delete doc._id;\n\t    delete doc._rev;\n\t\n\t    function afterPutDoc(e) {\n\t      var revsToDelete = docInfo.stemmedRevs || [];\n\t\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n\t      }\n\t\n\t      if (revsToDelete && revsToDelete.length) {\n\t        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n\t      }\n\t\n\t      metadata.seq = e.target.result;\n\t      // Current _rev is calculated from _rev_tree on read\n\t      delete metadata.rev;\n\t      var metadataToStore = encodeMetadata(metadata, winningRev,\n\t        winningRevIsDeleted);\n\t      var metaDataReq = docStore.put(metadataToStore);\n\t      metaDataReq.onsuccess = afterPutMetadata;\n\t    }\n\t\n\t    function afterPutDocError(e) {\n\t      // ConstraintError, need to update, not put (see #1638 for details)\n\t      e.preventDefault(); // avoid transaction abort\n\t      e.stopPropagation(); // avoid transaction onerror\n\t      var index = bySeqStore.index('_doc_id_rev');\n\t      var getKeyReq = index.getKey(doc._doc_id_rev);\n\t      getKeyReq.onsuccess = function (e) {\n\t        var putReq = bySeqStore.put(doc, e.target.result);\n\t        putReq.onsuccess = afterPutDoc;\n\t      };\n\t    }\n\t\n\t    function afterPutMetadata() {\n\t      results[resultsIdx] = {\n\t        ok: true,\n\t        id: metadata.id,\n\t        rev: winningRev\n\t      };\n\t      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n\t      insertAttachmentMappings(docInfo, metadata.seq, callback);\n\t    }\n\t\n\t    var putReq = bySeqStore.put(doc);\n\t\n\t    putReq.onsuccess = afterPutDoc;\n\t    putReq.onerror = afterPutDocError;\n\t  }\n\t\n\t  function writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n\t                            isUpdate, resultsIdx, callback) {\n\t\n\t\n\t    var doc = docInfo.data;\n\t\n\t    var numDone = 0;\n\t    var attachments = Object.keys(doc._attachments);\n\t\n\t    function collectResults() {\n\t      if (numDone === attachments.length) {\n\t        finishDoc(docInfo, winningRev, winningRevIsDeleted,\n\t          isUpdate, resultsIdx, callback);\n\t      }\n\t    }\n\t\n\t    function attachmentSaved() {\n\t      numDone++;\n\t      collectResults();\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        numDone++;\n\t        collectResults();\n\t      }\n\t    });\n\t  }\n\t\n\t  // map seqs to attachment digests, which\n\t  // we will need later during compaction\n\t  function insertAttachmentMappings(docInfo, seq, callback) {\n\t\n\t    var attsAdded = 0;\n\t    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\t\n\t    if (!attsToAdd.length) {\n\t      return callback();\n\t    }\n\t\n\t    function checkDone() {\n\t      if (++attsAdded === attsToAdd.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    function add(att) {\n\t      var digest = docInfo.data._attachments[att].digest;\n\t      var req = attachAndSeqStore.put({\n\t        seq: seq,\n\t        digestSeq: digest + '::' + seq\n\t      });\n\t\n\t      req.onsuccess = checkDone;\n\t      req.onerror = function (e) {\n\t        // this callback is for a constaint error, which we ignore\n\t        // because this docid/rev has already been associated with\n\t        // the digest (e.g. when new_edits == false)\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t        checkDone();\n\t      };\n\t    }\n\t    for (var i = 0; i < attsToAdd.length; i++) {\n\t      add(attsToAdd[i]); // do in parallel\n\t    }\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t\n\t\n\t    var getKeyReq = attachStore.count(digest);\n\t    getKeyReq.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (count) {\n\t        return callback(); // already exists\n\t      }\n\t      var newAtt = {\n\t        digest: digest,\n\t        body: data\n\t      };\n\t      var putReq = attachStore.put(newAtt);\n\t      putReq.onsuccess = callback;\n\t    };\n\t  }\n\t}\n\t\n\tfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n\t  try {\n\t    if (start && end) {\n\t      if (descending) {\n\t        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n\t      } else {\n\t        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n\t      }\n\t    } else if (start) {\n\t      if (descending) {\n\t        return IDBKeyRange.upperBound(start);\n\t      } else {\n\t        return IDBKeyRange.lowerBound(start);\n\t      }\n\t    } else if (end) {\n\t      if (descending) {\n\t        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n\t      } else {\n\t        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n\t      }\n\t    } else if (key) {\n\t      return IDBKeyRange.only(key);\n\t    }\n\t  } catch (e) {\n\t    return {error: e};\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction handleKeyRangeError(api, opts, err, callback) {\n\t  if (err.name === \"DataError\" && err.code === 0) {\n\t    // data error, start is less than end\n\t    return callback(null, {\n\t      total_rows: api._meta.docCount,\n\t      offset: opts.skip,\n\t      rows: []\n\t    });\n\t  }\n\t  callback(createError(IDB_ERROR, err.name, err.message));\n\t}\n\t\n\tfunction idbAllDocs(opts, api, idb, callback) {\n\t\n\t  function allDocsQuery(opts, callback) {\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var skip = opts.skip || 0;\n\t    var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t    var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\t\n\t    var keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n\t    if (keyRange && keyRange.error) {\n\t      return handleKeyRangeError(api, opts, keyRange.error, callback);\n\t    }\n\t\n\t    var stores = [DOC_STORE, BY_SEQ_STORE];\n\t\n\t    if (opts.attachments) {\n\t      stores.push(ATTACH_STORE);\n\t    }\n\t    var txnResult = openTransactionSafely(idb, stores, 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var cursor = descending ?\n\t      docStore.openCursor(keyRange, descending) :\n\t      docStore.openCursor(keyRange);\n\t    var docIdRevIndex = seqStore.index('_doc_id_rev');\n\t    var results = [];\n\t    var docCount = 0;\n\t\n\t    // if the user specifies include_docs=true, then we don't\n\t    // want to block the main cursor while we're fetching the doc\n\t    function fetchDocAsynchronously(metadata, row, winningRev) {\n\t      var key = metadata.id + \"::\" + winningRev;\n\t      docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n\t        row.doc = decodeDoc(e.target.result);\n\t        if (opts.conflicts) {\n\t          row.doc._conflicts = collectConflicts(metadata);\n\t        }\n\t        fetchAttachmentsIfNecessary(row.doc, opts, txn);\n\t      };\n\t    }\n\t\n\t    function allDocsInner(cursor, winningRev, metadata) {\n\t      var row = {\n\t        id: metadata.id,\n\t        key: metadata.id,\n\t        value: {\n\t          rev: winningRev\n\t        }\n\t      };\n\t      var deleted = metadata.deleted;\n\t      if (opts.deleted === 'ok') {\n\t        results.push(row);\n\t        // deleted docs are okay with \"keys\" requests\n\t        if (deleted) {\n\t          row.value.deleted = true;\n\t          row.doc = null;\n\t        } else if (opts.include_docs) {\n\t          fetchDocAsynchronously(metadata, row, winningRev);\n\t        }\n\t      } else if (!deleted && skip-- <= 0) {\n\t        results.push(row);\n\t        if (opts.include_docs) {\n\t          fetchDocAsynchronously(metadata, row, winningRev);\n\t        }\n\t        if (--limit === 0) {\n\t          return;\n\t        }\n\t      }\n\t      cursor.continue();\n\t    }\n\t\n\t    function onGetCursor(e) {\n\t      docCount = api._meta.docCount; // do this within the txn for consistency\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return;\n\t      }\n\t      var metadata = decodeMetadata(cursor.value);\n\t      var winningRev = metadata.winningRev;\n\t\n\t      allDocsInner(cursor, winningRev, metadata);\n\t    }\n\t\n\t    function onResultsReady() {\n\t      callback(null, {\n\t        total_rows: docCount,\n\t        offset: opts.skip,\n\t        rows: results\n\t      });\n\t    }\n\t\n\t    function onTxnComplete() {\n\t      if (opts.attachments) {\n\t        postProcessAttachments(results, opts.binary).then(onResultsReady);\n\t      } else {\n\t        onResultsReady();\n\t      }\n\t    }\n\t\n\t    txn.oncomplete = onTxnComplete;\n\t    cursor.onsuccess = onGetCursor;\n\t  }\n\t\n\t  function allDocs(opts, callback) {\n\t\n\t    if (opts.limit === 0) {\n\t      return callback(null, {\n\t        total_rows: api._meta.docCount,\n\t        offset: opts.skip,\n\t        rows: []\n\t      });\n\t    }\n\t    allDocsQuery(opts, callback);\n\t  }\n\t\n\t  allDocs(opts, callback);\n\t}\n\t\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\tfunction checkBlobSupport(txn) {\n\t  return new PouchPromise(function (resolve) {\n\t    var blob = createBlob(['']);\n\t    txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\t\n\t    txn.onabort = function (e) {\n\t      // If the transaction aborts now its due to not being able to\n\t      // write to the database, likely due to the disk being full\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      resolve(false);\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t      // MS Edge pretends to be Chrome 42:\n\t      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t      resolve(matchedEdge || !matchedChrome ||\n\t        parseInt(matchedChrome[1], 10) >= 43);\n\t    };\n\t  }).catch(function () {\n\t    return false; // error, so assume unsupported\n\t  });\n\t}\n\t\n\tvar cachedDBs = new _Map();\n\tvar blobSupportPromise;\n\tvar idbChanges = new Changes$1();\n\tvar openReqList = new _Map();\n\t\n\tfunction IdbPouch(opts, callback) {\n\t  var api = this;\n\t\n\t  taskQueue.queue.push({\n\t    action: function (thisCallback) {\n\t      init(api, opts, thisCallback);\n\t    },\n\t    callback: callback\n\t  });\n\t  applyNext(api.constructor);\n\t}\n\t\n\tfunction init(api, opts, callback) {\n\t\n\t  var dbName = opts.name;\n\t\n\t  var idb = null;\n\t  api._meta = null;\n\t\n\t  // called when creating a fresh new database\n\t  function createSchema(db) {\n\t    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n\t    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n\t    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n\t    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\n\t    // added in v2\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    // added in v3\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\t\n\t    // added in v4\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 2\n\t  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n\t  // store local docs in the main doc-store, but whaddyagonnado\n\t  function addDeletedOrLocalIndex(txn, callback) {\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    docStore.openCursor().onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var deleted = isDeleted(metadata);\n\t        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n\t        docStore.put(metadata);\n\t        cursor.continue();\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 3 (part 1)\n\t  function createLocalStoreSchema(db) {\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t  }\n\t\n\t  // migration to version 3 (part 2)\n\t  function migrateLocalStore(txn, cb) {\n\t    var localStore = txn.objectStore(LOCAL_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var docId = metadata.id;\n\t        var local = isLocalId(docId);\n\t        var rev = winningRev(metadata);\n\t        if (local) {\n\t          var docIdRev = docId + \"::\" + rev;\n\t          // remove all seq entries\n\t          // associated with this docId\n\t          var start = docId + \"::\";\n\t          var end = docId + \"::~\";\n\t          var index = seqStore.index('_doc_id_rev');\n\t          var range = IDBKeyRange.bound(start, end, false, false);\n\t          var seqCursor = index.openCursor(range);\n\t          seqCursor.onsuccess = function (e) {\n\t            seqCursor = e.target.result;\n\t            if (!seqCursor) {\n\t              // done\n\t              docStore.delete(cursor.primaryKey);\n\t              cursor.continue();\n\t            } else {\n\t              var data = seqCursor.value;\n\t              if (data._doc_id_rev === docIdRev) {\n\t                localStore.put(data);\n\t              }\n\t              seqStore.delete(seqCursor.primaryKey);\n\t              seqCursor.continue();\n\t            }\n\t          };\n\t        } else {\n\t          cursor.continue();\n\t        }\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 4 (part 1)\n\t  function addAttachAndSeqStore(db) {\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 4 (part 2)\n\t  function migrateAttsAndSeqs(txn, callback) {\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var attStore = txn.objectStore(ATTACH_STORE);\n\t    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    // need to actually populate the table. this is the expensive part,\n\t    // so as an optimization, check first that this database even\n\t    // contains attachments\n\t    var req = attStore.count();\n\t    req.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (!count) {\n\t        return callback(); // done\n\t      }\n\t\n\t      seqStore.openCursor().onsuccess = function (e) {\n\t        var cursor = e.target.result;\n\t        if (!cursor) {\n\t          return callback(); // done\n\t        }\n\t        var doc = cursor.value;\n\t        var seq = cursor.primaryKey;\n\t        var atts = Object.keys(doc._attachments || {});\n\t        var digestMap = {};\n\t        for (var j = 0; j < atts.length; j++) {\n\t          var att = doc._attachments[atts[j]];\n\t          digestMap[att.digest] = true; // uniq digests, just in case\n\t        }\n\t        var digests = Object.keys(digestMap);\n\t        for (j = 0; j < digests.length; j++) {\n\t          var digest = digests[j];\n\t          attAndSeqStore.put({\n\t            seq: seq,\n\t            digestSeq: digest + '::' + seq\n\t          });\n\t        }\n\t        cursor.continue();\n\t      };\n\t    };\n\t  }\n\t\n\t  // migration to version 5\n\t  // Instead of relying on on-the-fly migration of metadata,\n\t  // this brings the doc-store to its modern form:\n\t  // - metadata.winningrev\n\t  // - metadata.seq\n\t  // - stringify the metadata when storing it\n\t  function migrateMetadata(txn) {\n\t\n\t    function decodeMetadataCompat(storedObject) {\n\t      if (!storedObject.data) {\n\t        // old format, when we didn't store it stringified\n\t        storedObject.deleted = storedObject.deletedOrLocal === '1';\n\t        return storedObject;\n\t      }\n\t      return decodeMetadata(storedObject);\n\t    }\n\t\n\t    // ensure that every metadata has a winningRev and seq,\n\t    // which was previously created on-the-fly but better to migrate\n\t    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return; // done\n\t      }\n\t      var metadata = decodeMetadataCompat(cursor.value);\n\t\n\t      metadata.winningRev = metadata.winningRev ||\n\t        winningRev(metadata);\n\t\n\t      function fetchMetadataSeq() {\n\t        // metadata.seq was added post-3.2.0, so if it's missing,\n\t        // we need to fetch it manually\n\t        var start = metadata.id + '::';\n\t        var end = metadata.id + '::\\uffff';\n\t        var req = bySeqStore.index('_doc_id_rev').openCursor(\n\t          IDBKeyRange.bound(start, end));\n\t\n\t        var metadataSeq = 0;\n\t        req.onsuccess = function (e) {\n\t          var cursor = e.target.result;\n\t          if (!cursor) {\n\t            metadata.seq = metadataSeq;\n\t            return onGetMetadataSeq();\n\t          }\n\t          var seq = cursor.primaryKey;\n\t          if (seq > metadataSeq) {\n\t            metadataSeq = seq;\n\t          }\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      function onGetMetadataSeq() {\n\t        var metadataToStore = encodeMetadata(metadata,\n\t          metadata.winningRev, metadata.deleted);\n\t\n\t        var req = docStore.put(metadataToStore);\n\t        req.onsuccess = function () {\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      if (metadata.seq) {\n\t        return onGetMetadataSeq();\n\t      }\n\t\n\t      fetchMetadataSeq();\n\t    };\n\t\n\t  }\n\t\n\t  api.type = function () {\n\t    return 'idb';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, api._meta.instanceId);\n\t  });\n\t\n\t  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n\t    idbBulkDocs(opts, req, reqOpts, api, idb, idbChanges, callback);\n\t  };\n\t\n\t  // First we look up the metadata in the ids database, then we fetch the\n\t  // current revision(s) from the by sequence store\n\t  api._get = function idb_get(id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var err;\n\t    var txn = opts.ctx;\n\t    if (!txn) {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t\n\t    function finish() {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n\t    }\n\t\n\t    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      // we can determine the result here if:\n\t      // 1. there is no such document\n\t      // 2. the document is deleted and we don't ask about specific rev\n\t      // When we ask with opts.rev we expect the answer to be either\n\t      // doc (possibly with _deleted=true) or missing error\n\t      if (!metadata) {\n\t        err = createError(MISSING_DOC, 'missing');\n\t        return finish();\n\t      }\n\t      if (isDeleted(metadata) && !opts.rev) {\n\t        err = createError(MISSING_DOC, \"deleted\");\n\t        return finish();\n\t      }\n\t      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\t\n\t      var rev = opts.rev || metadata.winningRev;\n\t      var key = metadata.id + '::' + rev;\n\t\n\t      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n\t        doc = e.target.result;\n\t        if (doc) {\n\t          doc = decodeDoc(doc);\n\t        }\n\t        if (!doc) {\n\t          err = createError(MISSING_DOC, 'missing');\n\t          return finish();\n\t        }\n\t        finish();\n\t      };\n\t    };\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var txn;\n\t    if (opts.ctx) {\n\t      txn = opts.ctx;\n\t    } else {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t\n\t    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n\t      var body = e.target.result.body;\n\t      readBlobData(body, type, opts.binary, function (blobData) {\n\t        callback(null, blobData);\n\t      });\n\t    };\n\t  };\n\t\n\t  api._info = function idb_info(callback) {\n\t\n\t    if (idb === null || !cachedDBs.has(dbName)) {\n\t      var error = new Error('db isn\\'t open');\n\t      error.id = 'idbNull';\n\t      return callback(error);\n\t    }\n\t    var updateSeq;\n\t    var docCount;\n\t\n\t    var txnResult = openTransactionSafely(idb, [BY_SEQ_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var cursor = txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev');\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      updateSeq = cursor ? cursor.key : 0;\n\t      // count within the same txn for consistency\n\t      docCount = api._meta.docCount;\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: updateSeq,\n\t        // for debugging\n\t        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n\t      });\n\t    };\n\t  };\n\t\n\t  api._allDocs = function idb_allDocs(opts, callback) {\n\t    idbAllDocs(opts, api, idb, callback);\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = dbName + ':' + uuid();\n\t      idbChanges.addListener(dbName, id, api, opts);\n\t      idbChanges.notify(dbName);\n\t      return {\n\t        cancel: function () {\n\t          idbChanges.removeListener(dbName, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var docIds = opts.doc_ids && new _Set(opts.doc_ids);\n\t\n\t    opts.since = opts.since || 0;\n\t    var lastSeq = opts.since;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t\n\t    var results = [];\n\t    var numResults = 0;\n\t    var filter = filterChange(opts);\n\t    var docIdsToMetadata = new _Map();\n\t\n\t    var txn;\n\t    var bySeqStore;\n\t    var docStore;\n\t    var docIdRevIndex;\n\t\n\t    function onGetCursor(cursor) {\n\t\n\t      var doc = decodeDoc(cursor.value);\n\t      var seq = cursor.key;\n\t\n\t      if (docIds && !docIds.has(doc._id)) {\n\t        return cursor.continue();\n\t      }\n\t\n\t      var metadata;\n\t\n\t      function onGetMetadata() {\n\t        if (metadata.seq !== seq) {\n\t          // some other seq is later\n\t          return cursor.continue();\n\t        }\n\t\n\t        lastSeq = seq;\n\t\n\t        if (metadata.winningRev === doc._rev) {\n\t          return onGetWinningDoc(doc);\n\t        }\n\t\n\t        fetchWinningDoc();\n\t      }\n\t\n\t      function fetchWinningDoc() {\n\t        var docIdRev = doc._id + '::' + metadata.winningRev;\n\t        var req = docIdRevIndex.get(docIdRev);\n\t        req.onsuccess = function (e) {\n\t          onGetWinningDoc(decodeDoc(e.target.result));\n\t        };\n\t      }\n\t\n\t      function onGetWinningDoc(winningDoc) {\n\t\n\t        var change = opts.processChange(winningDoc, metadata, opts);\n\t        change.seq = metadata.seq;\n\t\n\t        var filtered = filter(change);\n\t        if (typeof filtered === 'object') {\n\t          return opts.complete(filtered);\n\t        }\n\t\n\t        if (filtered) {\n\t          numResults++;\n\t          if (returnDocs) {\n\t            results.push(change);\n\t          }\n\t          // process the attachment immediately\n\t          // for the benefit of live listeners\n\t          if (opts.attachments && opts.include_docs) {\n\t            fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n\t              postProcessAttachments([change], opts.binary).then(function () {\n\t                opts.onChange(change);\n\t              });\n\t            });\n\t          } else {\n\t            opts.onChange(change);\n\t          }\n\t        }\n\t        if (numResults !== limit) {\n\t          cursor.continue();\n\t        }\n\t      }\n\t\n\t      metadata = docIdsToMetadata.get(doc._id);\n\t      if (metadata) { // cached\n\t        return onGetMetadata();\n\t      }\n\t      // metadata not cached, have to go fetch it\n\t      docStore.get(doc._id).onsuccess = function (event) {\n\t        metadata = decodeMetadata(event.target.result);\n\t        docIdsToMetadata.set(doc._id, metadata);\n\t        onGetMetadata();\n\t      };\n\t    }\n\t\n\t    function onsuccess(event) {\n\t      var cursor = event.target.result;\n\t\n\t      if (!cursor) {\n\t        return;\n\t      }\n\t      onGetCursor(cursor);\n\t    }\n\t\n\t    function fetchChanges() {\n\t      var objectStores = [DOC_STORE, BY_SEQ_STORE];\n\t      if (opts.attachments) {\n\t        objectStores.push(ATTACH_STORE);\n\t      }\n\t      var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n\t      if (txnResult.error) {\n\t        return opts.complete(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t      txn.onabort = idbError(opts.complete);\n\t      txn.oncomplete = onTxnComplete;\n\t\n\t      bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t      docStore = txn.objectStore(DOC_STORE);\n\t      docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\t\n\t      var req;\n\t\n\t      if (opts.descending) {\n\t        req = bySeqStore.openCursor(null, 'prev');\n\t      } else {\n\t        req = bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n\t      }\n\t\n\t      req.onsuccess = onsuccess;\n\t    }\n\t\n\t    fetchChanges();\n\t\n\t    function onTxnComplete() {\n\t\n\t      function finish() {\n\t        opts.complete(null, {\n\t          results: results,\n\t          last_seq: lastSeq\n\t        });\n\t      }\n\t\n\t      if (!opts.continuous && opts.attachments) {\n\t        // cannot guarantee that postProcessing was already done,\n\t        // so do it again\n\t        postProcessAttachments(results).then(finish);\n\t      } else {\n\t        finish();\n\t      }\n\t    }\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    if (idb === null) {\n\t      return callback(createError(NOT_OPEN));\n\t    }\n\t\n\t    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n\t    // \"Returns immediately and closes the connection in a separate thread...\"\n\t    idb.close();\n\t    cachedDBs.delete(dbName);\n\t    idb = null;\n\t    callback();\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var req = txn.objectStore(DOC_STORE).get(docId);\n\t    req.onsuccess = function (event) {\n\t      var doc = decodeMetadata(event.target.result);\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        callback(null, doc.rev_tree);\n\t      }\n\t    };\n\t  };\n\t\n\t  // This function removes revisions of document docId\n\t  // which are listed in revs and sets this document\n\t  // revision to to rev_tree\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    var stores = [\n\t      DOC_STORE,\n\t      BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t\n\t    docStore.get(docId).onsuccess = function (event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                         revHash, ctx, opts) {\n\t        var rev = pos + '-' + revHash;\n\t        if (revs.indexOf(rev) !== -1) {\n\t          opts.status = 'missing';\n\t        }\n\t      });\n\t      compactRevs(revs, docId, txn);\n\t      var winningRev = metadata.winningRev;\n\t      var deleted = metadata.deleted;\n\t      txn.objectStore(DOC_STORE).put(\n\t        encodeMetadata(metadata, winningRev, deleted));\n\t    };\n\t    txn.onabort = idbError(callback);\n\t    txn.oncomplete = function () {\n\t      callback();\n\t    };\n\t  };\n\t\n\t\n\t  api._getLocal = function (id, callback) {\n\t    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var tx = txnResult.txn;\n\t    var req = tx.objectStore(LOCAL_STORE).get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var doc = e.target.result;\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        delete doc['_doc_id_rev']; // for backwards compat\n\t        callback(null, doc);\n\t      }\n\t    };\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    if (!oldRev) {\n\t      doc._rev = '0-1';\n\t    } else {\n\t      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t\n\t    var tx = opts.ctx;\n\t    var ret;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.onerror = idbError(callback);\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req;\n\t    if (oldRev) {\n\t      req = oStore.get(id);\n\t      req.onsuccess = function (e) {\n\t        var oldDoc = e.target.result;\n\t        if (!oldDoc || oldDoc._rev !== oldRev) {\n\t          callback(createError(REV_CONFLICT));\n\t        } else { // update\n\t          var req = oStore.put(doc);\n\t          req.onsuccess = function () {\n\t            ret = {ok: true, id: doc._id, rev: doc._rev};\n\t            if (opts.ctx) { // return immediately\n\t              callback(null, ret);\n\t            }\n\t          };\n\t        }\n\t      };\n\t    } else { // new doc\n\t      req = oStore.add(doc);\n\t      req.onerror = function (e) {\n\t        // constraint error, already exists\n\t        callback(createError(REV_CONFLICT));\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t      };\n\t      req.onsuccess = function () {\n\t        ret = {ok: true, id: doc._id, rev: doc._rev};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t    var ret;\n\t    var id = doc._id;\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req = oStore.get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var oldDoc = e.target.result;\n\t      if (!oldDoc || oldDoc._rev !== doc._rev) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        oStore.delete(id);\n\t        ret = {ok: true, id: id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    idbChanges.removeAllListeners(dbName);\n\t\n\t    //Close open request for \"dbName\" database to fix ie delay.\n\t    var openReq = openReqList.get(dbName);\n\t    if (openReq && openReq.result) {\n\t      openReq.result.close();\n\t      cachedDBs.delete(dbName);\n\t    }\n\t    var req = indexedDB.deleteDatabase(dbName);\n\t\n\t    req.onsuccess = function () {\n\t      //Remove open request from the list.\n\t      openReqList.delete(dbName);\n\t      if (hasLocalStorage() && (dbName in localStorage)) {\n\t        delete localStorage[dbName];\n\t      }\n\t      callback(null, { 'ok': true });\n\t    };\n\t\n\t    req.onerror = idbError(callback);\n\t  };\n\t\n\t  var cached = cachedDBs.get(dbName);\n\t\n\t  if (cached) {\n\t    idb = cached.idb;\n\t    api._meta = cached.global;\n\t    process.nextTick(function () {\n\t      callback(null, api);\n\t    });\n\t    return;\n\t  }\n\t\n\t  var req;\n\t  if (opts.storage) {\n\t    req = tryStorageOption(dbName, opts.storage);\n\t  } else {\n\t    req = indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t\n\t  openReqList.set(dbName, req);\n\t\n\t  req.onupgradeneeded = function (e) {\n\t    var db = e.target.result;\n\t    if (e.oldVersion < 1) {\n\t      return createSchema(db); // new db, initial schema\n\t    }\n\t    // do migrations\n\t\n\t    var txn = e.currentTarget.transaction;\n\t    // these migrations have to be done in this function, before\n\t    // control is returned to the event loop, because IndexedDB\n\t\n\t    if (e.oldVersion < 3) {\n\t      createLocalStoreSchema(db); // v2 -> v3\n\t    }\n\t    if (e.oldVersion < 4) {\n\t      addAttachAndSeqStore(db); // v3 -> v4\n\t    }\n\t\n\t    var migrations = [\n\t      addDeletedOrLocalIndex, // v1 -> v2\n\t      migrateLocalStore,      // v2 -> v3\n\t      migrateAttsAndSeqs,     // v3 -> v4\n\t      migrateMetadata         // v4 -> v5\n\t    ];\n\t\n\t    var i = e.oldVersion;\n\t\n\t    function next() {\n\t      var migration = migrations[i - 1];\n\t      i++;\n\t      if (migration) {\n\t        migration(txn, next);\n\t      }\n\t    }\n\t\n\t    next();\n\t  };\n\t\n\t  req.onsuccess = function (e) {\n\t\n\t    idb = e.target.result;\n\t\n\t    idb.onversionchange = function () {\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    idb.onabort = function (e) {\n\t      guardedConsole('error', 'Database has a global failure', e.target.error);\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    var txn = idb.transaction([\n\t      META_STORE,\n\t      DETECT_BLOB_SUPPORT_STORE,\n\t      DOC_STORE\n\t    ], 'readwrite');\n\t\n\t    var req = txn.objectStore(META_STORE).get(META_STORE);\n\t\n\t    var blobSupport = null;\n\t    var docCount = null;\n\t    var instanceId = null;\n\t\n\t    req.onsuccess = function (e) {\n\t\n\t      var checkSetupComplete = function () {\n\t        if (blobSupport === null || docCount === null ||\n\t            instanceId === null) {\n\t          return;\n\t        } else {\n\t          api._meta = {\n\t            name: dbName,\n\t            instanceId: instanceId,\n\t            blobSupport: blobSupport,\n\t            docCount: docCount\n\t          };\n\t\n\t          cachedDBs.set(dbName, {\n\t            idb: idb,\n\t            global: api._meta\n\t          });\n\t          callback(null, api);\n\t        }\n\t      };\n\t\n\t      //\n\t      // fetch/store the id\n\t      //\n\t\n\t      var meta = e.target.result || {id: META_STORE};\n\t      if (dbName  + '_id' in meta) {\n\t        instanceId = meta[dbName + '_id'];\n\t        checkSetupComplete();\n\t      } else {\n\t        instanceId = uuid();\n\t        meta[dbName + '_id'] = instanceId;\n\t        txn.objectStore(META_STORE).put(meta).onsuccess = function () {\n\t          checkSetupComplete();\n\t        };\n\t      }\n\t\n\t      //\n\t      // check blob support\n\t      //\n\t\n\t      if (!blobSupportPromise) {\n\t        // make sure blob support is only checked once\n\t        blobSupportPromise = checkBlobSupport(txn);\n\t      }\n\t\n\t      blobSupportPromise.then(function (val) {\n\t        blobSupport = val;\n\t        checkSetupComplete();\n\t      });\n\t\n\t      //\n\t      // count docs\n\t      //\n\t\n\t      var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n\t      index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n\t        docCount = e.target.result;\n\t        checkSetupComplete();\n\t      };\n\t\n\t    };\n\t  };\n\t\n\t  req.onerror = function () {\n\t    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n\t    guardedConsole('error', msg);\n\t    callback(createError(IDB_ERROR, msg));\n\t  };\n\t}\n\t\n\tIdbPouch.valid = function () {\n\t  // Issue #2533, we finally gave up on doing bug\n\t  // detection instead of browser sniffing. Safari brought us\n\t  // to our knees.\n\t  var isSafari = typeof openDatabase !== 'undefined' &&\n\t    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n\t    !/Chrome/.test(navigator.userAgent) &&\n\t    !/BlackBerry/.test(navigator.platform);\n\t\n\t  // some outdated implementations of IDB that appear on Samsung\n\t  // and HTC Android devices <4.4 are missing IDBKeyRange\n\t  return !isSafari && typeof indexedDB !== 'undefined' &&\n\t    typeof IDBKeyRange !== 'undefined';\n\t};\n\t\n\tfunction tryStorageOption(dbName, storage) {\n\t  try { // option only available in Firefox 26+\n\t    return indexedDB.open(dbName, {\n\t      version: ADAPTER_VERSION,\n\t      storage: storage\n\t    });\n\t  } catch(err) {\n\t      return indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t}\n\t\n\tfunction IDBPouch (PouchDB) {\n\t  PouchDB.adapter('idb', IdbPouch, true);\n\t}\n\t\n\t//\n\t// Parsing hex strings. Yeah.\n\t//\n\t// So basically we need this because of a bug in WebSQL:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t//\n\t// UTF-8 and UTF-16 are provided as separate functions\n\t// for meager performance improvements\n\t//\n\t\n\tfunction decodeUtf8(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\t\n\tfunction hexToInt(charCode) {\n\t  // '0'-'9' is 48-57\n\t  // 'A'-'F' is 65-70\n\t  // SQLite will only give us uppercase hex\n\t  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n\t}\n\t\n\t\n\t// Example:\n\t// pragma encoding=utf8;\n\t// select hex('A');\n\t// returns '41'\n\tfunction parseHexUtf8(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start++)) << 4) |\n\t        hexToInt(str.charCodeAt(start++)));\n\t  }\n\t  return result;\n\t}\n\t\n\t// Example:\n\t// pragma encoding=utf16;\n\t// select hex('A');\n\t// returns '4100'\n\t// notice that the 00 comes after the 41 (i.e. it's swizzled)\n\tfunction parseHexUtf16(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    // UTF-16, so swizzle the bytes\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n\t        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n\t        (hexToInt(str.charCodeAt(start)) << 4) |\n\t        hexToInt(str.charCodeAt(start + 1)));\n\t    start += 4;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction parseHexString(str, encoding) {\n\t  if (encoding === 'UTF-8') {\n\t    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n\t  } else {\n\t    return parseHexUtf16(str, 0, str.length);\n\t  }\n\t}\n\t\n\tfunction quote(str) {\n\t  return \"'\" + str + \"'\";\n\t}\n\t\n\tvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\tvar DOC_STORE$1 = quote('document-store');\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE$1 = quote('by-sequence');\n\t// Where we store attachments\n\tvar ATTACH_STORE$1 = quote('attach-store');\n\tvar LOCAL_STORE$1 = quote('local-store');\n\tvar META_STORE$1 = quote('metadata-store');\n\t// where we store many-to-many relations between attachment\n\t// digests and seqs\n\tvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\t\n\t// escapeBlob and unescapeBlob are workarounds for a websql bug:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t// The goal is to never actually insert the \\u0000 character\n\t// in the database.\n\tfunction escapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0002/g, '\\u0002\\u0002')\n\t    .replace(/\\u0001/g, '\\u0001\\u0002')\n\t    .replace(/\\u0000/g, '\\u0001\\u0001');\n\t}\n\t\n\tfunction unescapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0001\\u0001/g, '\\u0000')\n\t    .replace(/\\u0001\\u0002/g, '\\u0001')\n\t    .replace(/\\u0002\\u0002/g, '\\u0002');\n\t}\n\t\n\tfunction stringifyDoc(doc) {\n\t  // don't bother storing the id/rev. it uses lots of space,\n\t  // in persistent map/reduce especially\n\t  delete doc._id;\n\t  delete doc._rev;\n\t  return JSON.stringify(doc);\n\t}\n\t\n\tfunction unstringifyDoc(doc, id, rev) {\n\t  doc = JSON.parse(doc);\n\t  doc._id = id;\n\t  doc._rev = rev;\n\t  return doc;\n\t}\n\t\n\t// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\n\tfunction qMarks(num) {\n\t  var s = '(';\n\t  while (num--) {\n\t    s += '?';\n\t    if (num) {\n\t      s += ',';\n\t    }\n\t  }\n\t  return s + ')';\n\t}\n\t\n\tfunction select(selector, table, joiner, where, orderBy) {\n\t  return 'SELECT ' + selector + ' FROM ' +\n\t    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n\t    (joiner ? (' ON ' + joiner) : '') +\n\t    (where ? (' WHERE ' +\n\t    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n\t    (orderBy ? (' ORDER BY ' + orderBy) : '');\n\t}\n\t\n\tfunction compactRevs$1(revs, docId, tx) {\n\t\n\t  if (!revs.length) {\n\t    return;\n\t  }\n\t\n\t  var numDone = 0;\n\t  var seqs = [];\n\t\n\t  function checkDone() {\n\t    if (++numDone === revs.length) { // done\n\t      deleteOrphans();\n\t    }\n\t  }\n\t\n\t  function deleteOrphans() {\n\t    // find orphaned attachment digests\n\t\n\t    if (!seqs.length) {\n\t      return;\n\t    }\n\t\n\t    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\t\n\t    tx.executeSql(sql, seqs, function (tx, res) {\n\t\n\t      var digestsToCheck = [];\n\t      for (var i = 0; i < res.rows.length; i++) {\n\t        digestsToCheck.push(res.rows.item(i).digest);\n\t      }\n\t      if (!digestsToCheck.length) {\n\t        return;\n\t      }\n\t\n\t      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t        ' WHERE seq IN (' +\n\t        seqs.map(function () { return '?'; }).join(',') +\n\t        ')';\n\t      tx.executeSql(sql, seqs, function (tx) {\n\t\n\t        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t          ' WHERE digest IN (' +\n\t          digestsToCheck.map(function () { return '?'; }).join(',') +\n\t          ')';\n\t        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n\t          var nonOrphanedDigests = new _Set();\n\t          for (var i = 0; i < res.rows.length; i++) {\n\t            nonOrphanedDigests.add(res.rows.item(i).digest);\n\t          }\n\t          digestsToCheck.forEach(function (digest) {\n\t            if (nonOrphanedDigests.has(digest)) {\n\t              return;\n\t            }\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n\t              [digest]);\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // update by-seq and attach stores in parallel\n\t  revs.forEach(function (rev) {\n\t    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=? AND rev=?';\n\t\n\t    tx.executeSql(sql, [docId, rev], function (tx, res) {\n\t      if (!res.rows.length) { // already deleted\n\t        return checkDone();\n\t      }\n\t      var seq = res.rows.item(0).seq;\n\t      seqs.push(seq);\n\t\n\t      tx.executeSql(\n\t        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n\t    });\n\t  });\n\t}\n\t\n\tfunction websqlError(callback) {\n\t  return function (event) {\n\t    guardedConsole('error', 'WebSQL threw an error', event);\n\t    // event may actually be a SQLError object, so report is as such\n\t    var errorNameMatch = event && event.constructor.toString()\n\t        .match(/function ([^\\(]+)/);\n\t    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n\t    var errorReason = event.target || event.message;\n\t    callback(createError(WSQ_ERROR, errorReason, errorName));\n\t  };\n\t}\n\t\n\tfunction getSize(opts) {\n\t  if ('size' in opts) {\n\t    // triggers immediate popup in iOS, fixes #2347\n\t    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n\t    return opts.size * 1000000;\n\t  }\n\t  // In iOS, doesn't matter as long as it's <= 5000000.\n\t  // Except that if you request too much, our tests fail\n\t  // because of the native \"do you accept?\" popup.\n\t  // In Android <=4.3, this value is actually used as an\n\t  // honest-to-god ceiling for data, so we need to\n\t  // set it to a decently high number.\n\t  var isAndroid = typeof navigator !== 'undefined' &&\n\t    /Android/.test(navigator.userAgent);\n\t  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n\t}\n\t\n\tfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n\t  var newEdits = opts.new_edits;\n\t  var userDocs = req.docs;\n\t\n\t  // Parse the docs, give them a sequence number for the result\n\t  var docInfos = userDocs.map(function (doc) {\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      return doc;\n\t    }\n\t    var newDoc = parseDoc(doc, newEdits);\n\t    return newDoc;\n\t  });\n\t\n\t  var docInfoErrors = docInfos.filter(function (docInfo) {\n\t    return docInfo.error;\n\t  });\n\t  if (docInfoErrors.length) {\n\t    return callback(docInfoErrors[0]);\n\t  }\n\t\n\t  var tx;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new _Map();\n\t\n\t  var preconditionErrored;\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return callback(preconditionErrored);\n\t    }\n\t    websqlChanges.notify(api._name);\n\t    api._docCount = -1; // invalidate\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n\t      ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.item(0).cnt === 0) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    });\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    function finish() {\n\t      var data = docInfo.data;\n\t      var deletedInt = newRevIsDeleted ? 1 : 0;\n\t\n\t      var id = data._id;\n\t      var rev = data._rev;\n\t      var json = stringifyDoc(data);\n\t      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n\t        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n\t      var sqlArgs = [id, rev, json, deletedInt];\n\t\n\t      // map seqs to attachment digests, which\n\t      // we will need later during compaction\n\t      function insertAttachmentMappings(seq, callback) {\n\t        var attsAdded = 0;\n\t        var attsToAdd = Object.keys(data._attachments || {});\n\t\n\t        if (!attsToAdd.length) {\n\t          return callback();\n\t        }\n\t        function checkDone() {\n\t          if (++attsAdded === attsToAdd.length) {\n\t            callback();\n\t          }\n\t          return false; // ack handling a constraint error\n\t        }\n\t        function add(att) {\n\t          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t            ' (digest, seq) VALUES (?,?)';\n\t          var sqlArgs = [data._attachments[att].digest, seq];\n\t          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n\t          // second callback is for a constaint error, which we ignore\n\t          // because this docid/rev has already been associated with\n\t          // the digest (e.g. when new_edits == false)\n\t        }\n\t        for (var i = 0; i < attsToAdd.length; i++) {\n\t          add(attsToAdd[i]); // do in parallel\n\t        }\n\t      }\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        var seq = result.insertId;\n\t        insertAttachmentMappings(seq, function () {\n\t          dataWritten(tx, seq);\n\t        });\n\t      }, function () {\n\t        // constraint error, recover by updating instead (see #1638)\n\t        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n\t          'doc_id=? AND rev=?');\n\t        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n\t          var seq = res.rows.item(0).seq;\n\t          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n\t          var sqlArgs = [json, deletedInt, id, rev];\n\t          tx.executeSql(sql, sqlArgs, function (tx) {\n\t            insertAttachmentMappings(seq, function () {\n\t              dataWritten(tx, seq);\n\t            });\n\t          });\n\t        });\n\t        return false; // ack that we've handled the error\n\t      });\n\t    }\n\t\n\t    function collectResults(attachmentErr) {\n\t      if (!err) {\n\t        if (attachmentErr) {\n\t          err = attachmentErr;\n\t          callback(err);\n\t        } else if (recv === attachments.length) {\n\t          finish();\n\t        }\n\t      }\n\t    }\n\t\n\t    var err = null;\n\t    var recv = 0;\n\t\n\t    docInfo.data._id = docInfo.metadata.id;\n\t    docInfo.data._rev = docInfo.metadata.rev;\n\t    var attachments = Object.keys(docInfo.data._attachments || {});\n\t\n\t\n\t    if (newRevIsDeleted) {\n\t      docInfo.data._deleted = true;\n\t    }\n\t\n\t    function attachmentSaved(err) {\n\t      recv++;\n\t      collectResults(err);\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        recv++;\n\t        collectResults();\n\t      }\n\t    });\n\t\n\t    if (!attachments.length) {\n\t      finish();\n\t    }\n\t\n\t    function dataWritten(tx, seq) {\n\t      var id = docInfo.metadata.id;\n\t\n\t      var revsToCompact = docInfo.stemmedRevs || [];\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n\t      }\n\t      if (revsToCompact.length) {\n\t        compactRevs$1(revsToCompact, id, tx);\n\t      }\n\t\n\t      docInfo.metadata.seq = seq;\n\t      delete docInfo.metadata.rev;\n\t\n\t      var sql = isUpdate ?\n\t      'UPDATE ' + DOC_STORE$1 +\n\t      ' SET json=?, max_seq=?, winningseq=' +\n\t      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n\t        : 'INSERT INTO ' + DOC_STORE$1 +\n\t      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n\t      var metadataStr = safeJsonStringify(docInfo.metadata);\n\t      var params = isUpdate ?\n\t        [metadataStr, seq, winningRev, id] :\n\t        [id, seq, seq, metadataStr];\n\t      tx.executeSql(sql, params, function () {\n\t        results[resultsIdx] = {\n\t          ok: true,\n\t          id: docInfo.metadata.id,\n\t          rev: winningRev\n\t        };\n\t        fetchedDocs.set(id, docInfo.metadata);\n\t        callback();\n\t      });\n\t    }\n\t  }\n\t\n\t  function websqlProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n\t                results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs(callback) {\n\t    if (!docInfos.length) {\n\t      return callback();\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        return checkDone(); // skip local docs\n\t      }\n\t      var id = docInfo.metadata.id;\n\t      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n\t      ' WHERE id = ?', [id], function (tx, result) {\n\t        if (result.rows.length) {\n\t          var metadata = safeJsonParse(result.rows.item(0).json);\n\t          fetchedDocs.set(id, metadata);\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.length) { // attachment already exists\n\t        return callback();\n\t      }\n\t      // we could just insert before selecting and catch the error,\n\t      // but my hunch is that it's cheaper not to serialize the blob\n\t      // from JS to C if we don't have to (TODO: confirm this)\n\t      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n\t      ' (digest, body, escaped) VALUES (?,?,1)';\n\t      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n\t        callback();\n\t      }, function () {\n\t        // ignore constaint errors, means it already exists\n\t        callback();\n\t        return false; // ack we handled the error\n\t      });\n\t    });\n\t  }\n\t\n\t  preprocessAttachments(docInfos, 'binary', function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    db.transaction(function (txn) {\n\t      tx = txn;\n\t      verifyAttachments(function (err) {\n\t        if (err) {\n\t          preconditionErrored = err;\n\t        } else {\n\t          fetchExistingDocs(websqlProcessDocs);\n\t        }\n\t      });\n\t    }, websqlError(callback), complete);\n\t  });\n\t}\n\t\n\tvar cachedDatabases = new _Map();\n\t\n\t// openDatabase passed in through opts (e.g. for node-websql)\n\tfunction openDatabaseWithOpts(opts) {\n\t  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n\t}\n\t\n\tfunction openDBSafely(opts) {\n\t  try {\n\t    return {\n\t      db: openDatabaseWithOpts(opts)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction openDB$1(opts) {\n\t  var cachedResult = cachedDatabases.get(opts.name);\n\t  if (!cachedResult) {\n\t    cachedResult = openDBSafely(opts);\n\t    cachedDatabases.set(opts.name, cachedResult);\n\t  }\n\t  return cachedResult;\n\t}\n\t\n\tvar websqlChanges = new Changes$1();\n\t\n\tfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var attOpts = {binary: opts.binary, ctx: txn};\n\t    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n\t      doc._attachments[att] = jsExtend.extend(\n\t        pick(attObj, ['digest', 'content_type']),\n\t        { data: data }\n\t      );\n\t      checkDone();\n\t    });\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\tvar POUCH_VERSION = 1;\n\t\n\t// these indexes cover the ground for most allDocs queries\n\tvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n\t  BY_SEQ_STORE$1 + ' (seq, deleted)';\n\tvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n\t    BY_SEQ_STORE$1 + ' (doc_id, rev)';\n\tvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n\t  DOC_STORE$1 + ' (winningseq)';\n\tvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\n\tvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\t\n\tvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n\t  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\tvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n\t  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n\t  BY_SEQ_STORE$1 + '.json AS data, ' +\n\t  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n\t  DOC_STORE$1 + '.json AS metadata';\n\t\n\tfunction WebSqlPouch$1(opts, callback) {\n\t  var api = this;\n\t  var instanceId = null;\n\t  var size = getSize(opts);\n\t  var idRequests = [];\n\t  var encoding;\n\t\n\t  api._docCount = -1; // cache sqlite count(*) for performance\n\t  api._name = opts.name;\n\t\n\t  // extend the options here, because sqlite plugin has a ton of options\n\t  // and they are constantly changing, so it's more prudent to allow anything\n\t  var websqlOpts = jsExtend.extend({}, opts, {\n\t    version: POUCH_VERSION,\n\t    description: opts.name,\n\t    size: size\n\t  });\n\t  var openDBResult = openDB$1(websqlOpts);\n\t  if (openDBResult.error) {\n\t    return websqlError(callback)(openDBResult.error);\n\t  }\n\t  var db = openDBResult.db;\n\t  if (typeof db.readTransaction !== 'function') {\n\t    // doesn't exist in sqlite plugin\n\t    db.readTransaction = db.transaction;\n\t  }\n\t\n\t  function dbCreated() {\n\t    // note the db name in case the browser upgrades to idb\n\t    if (hasLocalStorage()) {\n\t      window.localStorage['_pouch__websqldb_' + api._name] = true;\n\t    }\n\t    callback(null, api);\n\t  }\n\t\n\t  // In this migration, we added the 'deleted' and 'local' columns to the\n\t  // by-seq and doc store tables.\n\t  // To preserve existing user data, we re-process all the existing JSON\n\t  // and add these values.\n\t  // Called migration2 because it corresponds to adapter version (db_version) #2\n\t  function runMigration2(tx, callback) {\n\t    // index used for the join in the allDocs query\n\t    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t\n\t    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n\t      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n\t      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n\t        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n\t        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (local, id)');\n\t\n\t        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n\t          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n\t          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t\n\t          var deleted = [];\n\t          var local = [];\n\t\n\t          for (var i = 0; i < result.rows.length; i++) {\n\t            var item = result.rows.item(i);\n\t            var seq = item.seq;\n\t            var metadata = JSON.parse(item.metadata);\n\t            if (isDeleted(metadata)) {\n\t              deleted.push(seq);\n\t            }\n\t            if (isLocalId(metadata.id)) {\n\t              local.push(metadata.id);\n\t            }\n\t          }\n\t          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n\t            qMarks(local.length), local, function () {\n\t            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n\t              ' SET deleted = 1 WHERE seq IN ' +\n\t              qMarks(deleted.length), deleted, callback);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we make all the local docs unversioned\n\t  function runMigration3(tx, callback) {\n\t    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t      ' (id UNIQUE, rev, json)';\n\t    tx.executeSql(local, [], function () {\n\t      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n\t        BY_SEQ_STORE$1 + '.json AS data ' +\n\t        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n\t        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n\t        DOC_STORE$1 + '.winningseq WHERE local = 1';\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var rows = [];\n\t        for (var i = 0; i < res.rows.length; i++) {\n\t          rows.push(res.rows.item(i));\n\t        }\n\t        function doNext() {\n\t          if (!rows.length) {\n\t            return callback(tx);\n\t          }\n\t          var row = rows.shift();\n\t          var rev = JSON.parse(row.data)._rev;\n\t          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n\t              ' (id, rev, json) VALUES (?,?,?)',\n\t              [row.id, rev, row.data], function (tx) {\n\t            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n\t                [row.id], function (tx) {\n\t              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n\t                  [row.seq], function () {\n\t                doNext();\n\t              });\n\t            });\n\t          });\n\t        }\n\t        doNext();\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we remove doc_id_rev and just use rev\n\t  function runMigration4(tx, callback) {\n\t\n\t    function updateRows(rows) {\n\t      function doNext() {\n\t        if (!rows.length) {\n\t          return callback(tx);\n\t        }\n\t        var row = rows.shift();\n\t        var doc_id_rev = parseHexString(row.hex, encoding);\n\t        var idx = doc_id_rev.lastIndexOf('::');\n\t        var doc_id = doc_id_rev.substring(0, idx);\n\t        var rev = doc_id_rev.substring(idx + 2);\n\t        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n\t        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n\t          doNext();\n\t        });\n\t      }\n\t      doNext();\n\t    }\n\t\n\t    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n\t          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            var rows = [];\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              rows.push(res.rows.item(i));\n\t            }\n\t            updateRows(rows);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we add the attach_and_seq table\n\t  // for issue #2818\n\t  function runMigration5(tx, callback) {\n\t\n\t    function migrateAttsAndSeqs(tx) {\n\t      // need to actually populate the table. this is the expensive part,\n\t      // so as an optimization, check first that this database even\n\t      // contains attachments\n\t      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var count = res.rows.item(0).cnt;\n\t        if (!count) {\n\t          return callback(tx);\n\t        }\n\t\n\t        var offset = 0;\n\t        var pageSize = 10;\n\t        function nextPage() {\n\t          var sql = select(\n\t            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n\t            [DOC_STORE$1, BY_SEQ_STORE$1],\n\t            DOC_STORE_AND_BY_SEQ_JOINER,\n\t            null,\n\t            DOC_STORE$1 + '.id '\n\t          );\n\t          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n\t          offset += pageSize;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            if (!res.rows.length) {\n\t              return callback(tx);\n\t            }\n\t            var digestSeqs = {};\n\t            function addDigestSeq(digest, seq) {\n\t              // uniq digest/seq pairs, just in case there are dups\n\t              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n\t              if (seqs.indexOf(seq) === -1) {\n\t                seqs.push(seq);\n\t              }\n\t            }\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              var row = res.rows.item(i);\n\t              var doc = unstringifyDoc(row.data, row.id, row.rev);\n\t              var atts = Object.keys(doc._attachments || {});\n\t              for (var j = 0; j < atts.length; j++) {\n\t                var att = doc._attachments[atts[j]];\n\t                addDigestSeq(att.digest, row.seq);\n\t              }\n\t            }\n\t            var digestSeqPairs = [];\n\t            Object.keys(digestSeqs).forEach(function (digest) {\n\t              var seqs = digestSeqs[digest];\n\t              seqs.forEach(function (seq) {\n\t                digestSeqPairs.push([digest, seq]);\n\t              });\n\t            });\n\t            if (!digestSeqPairs.length) {\n\t              return nextPage();\n\t            }\n\t            var numDone = 0;\n\t            digestSeqPairs.forEach(function (pair) {\n\t              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t                ' (digest, seq) VALUES (?,?)';\n\t              tx.executeSql(sql, pair, function () {\n\t                if (++numDone === digestSeqPairs.length) {\n\t                  nextPage();\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t        nextPage();\n\t      });\n\t    }\n\t\n\t    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t    tx.executeSql(attachAndRev, [], function (tx) {\n\t      tx.executeSql(\n\t        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n\t          tx.executeSql(\n\t            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n\t            migrateAttsAndSeqs);\n\t        });\n\t    });\n\t  }\n\t\n\t  // in this migration, we use escapeBlob() and unescapeBlob()\n\t  // instead of reading out the binary as HEX, which is slow\n\t  function runMigration6(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n\t      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n\t    tx.executeSql(sql, [], callback);\n\t  }\n\t\n\t  // issue #3136, in this migration we need a \"latest seq\" as well\n\t  // as the \"winning seq\" in the doc store\n\t  function runMigration7(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n\t      ' ADD COLUMN max_seq INTEGER';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n\t        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        // add unique index after filling, else we'll get a constraint\n\t        // error when we do the ALTER TABLE\n\t        var sql =\n\t          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (max_seq)';\n\t        tx.executeSql(sql, [], callback);\n\t      });\n\t    });\n\t  }\n\t\n\t  function checkEncoding(tx, cb) {\n\t    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n\t    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n\t        var hex = res.rows.item(0).hex;\n\t        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n\t        cb();\n\t      }\n\t    );\n\t  }\n\t\n\t  function onGetInstanceId() {\n\t    while (idRequests.length > 0) {\n\t      var idCallback = idRequests.pop();\n\t      idCallback(null, instanceId);\n\t    }\n\t  }\n\t\n\t  function onGetVersion(tx, dbVersion) {\n\t    if (dbVersion === 0) {\n\t      // initial schema\n\t\n\t      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n\t        ' (dbid, db_version INTEGER)';\n\t      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n\t        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n\t      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t      // TODO: migrate winningseq to INTEGER\n\t      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n\t        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n\t      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n\t        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n\t        'json, deleted TINYINT(1), doc_id, rev)';\n\t      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t        ' (id UNIQUE, rev, json)';\n\t\n\t      // creates\n\t      tx.executeSql(attach);\n\t      tx.executeSql(local);\n\t      tx.executeSql(attachAndRev, [], function () {\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n\t      });\n\t      tx.executeSql(doc, [], function () {\n\t        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t        tx.executeSql(seq, [], function () {\n\t          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n\t          tx.executeSql(meta, [], function () {\n\t            // mark the db version, and new dbid\n\t            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n\t              ' (db_version, dbid) VALUES (?,?)';\n\t            instanceId = uuid();\n\t            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n\t            tx.executeSql(initSeq, initSeqArgs, function () {\n\t              onGetInstanceId();\n\t            });\n\t          });\n\t        });\n\t      });\n\t    } else { // version > 0\n\t\n\t      var setupDone = function () {\n\t        var migrated = dbVersion < ADAPTER_VERSION$1;\n\t        if (migrated) {\n\t          // update the db version within this transaction\n\t          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n\t            ADAPTER_VERSION$1);\n\t        }\n\t        // notify db.id() callers\n\t        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t          instanceId = result.rows.item(0).dbid;\n\t          onGetInstanceId();\n\t        });\n\t      };\n\t\n\t      // would love to use promises here, but then websql\n\t      // ends the transaction early\n\t      var tasks = [\n\t        runMigration2,\n\t        runMigration3,\n\t        runMigration4,\n\t        runMigration5,\n\t        runMigration6,\n\t        runMigration7,\n\t        setupDone\n\t      ];\n\t\n\t      // run each migration sequentially\n\t      var i = dbVersion;\n\t      var nextMigration = function (tx) {\n\t        tasks[i - 1](tx, nextMigration);\n\t        i++;\n\t      };\n\t      nextMigration(tx);\n\t    }\n\t  }\n\t\n\t  function setup() {\n\t    db.transaction(function (tx) {\n\t      // first check the encoding\n\t      checkEncoding(tx, function () {\n\t        // then get the version\n\t        fetchVersion(tx);\n\t      });\n\t    }, websqlError(callback), dbCreated);\n\t  }\n\t\n\t  function fetchVersion(tx) {\n\t    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      if (!result.rows.length) {\n\t        // database hasn't even been created yet (version 0)\n\t        onGetVersion(tx, 0);\n\t      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n\t        // table was created, but without the new db_version column,\n\t        // so add it.\n\t        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n\t          ' ADD COLUMN db_version INTEGER', [], function () {\n\t          // before version 2, this column didn't even exist\n\t          onGetVersion(tx, 1);\n\t        });\n\t      } else { // column exists, we can safely get it\n\t        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n\t          [], function (tx, result) {\n\t          var dbVersion = result.rows.item(0).db_version;\n\t          onGetVersion(tx, dbVersion);\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  setup();\n\t\n\t  api.type = function () {\n\t    return 'websql';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, instanceId);\n\t  });\n\t\n\t  api._info = function (callback) {\n\t    db.readTransaction(function (tx) {\n\t      countDocs(tx, function (docCount) {\n\t        var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, res) {\n\t          var updateSeq = res.rows.item(0).seq || 0;\n\t          callback(null, {\n\t            doc_count: docCount,\n\t            update_seq: updateSeq,\n\t            websql_encoding: encoding\n\t          });\n\t        });\n\t      });\n\t    }, websqlError(callback));\n\t  };\n\t\n\t  api._bulkDocs = function (req, reqOpts, callback) {\n\t    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n\t  };\n\t\n\t  api._get = function (id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var err;\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      return db.readTransaction(function (txn) {\n\t        api._get(id, jsExtend.extend({ctx: txn}, opts), callback);\n\t      });\n\t    }\n\t\n\t    function finish() {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n\t    }\n\t\n\t    var sql;\n\t    var sqlArgs;\n\t    if (opts.rev) {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n\t        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n\t      sqlArgs = [id, opts.rev];\n\t    } else {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t      sqlArgs = [id];\n\t    }\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        err = createError(MISSING_DOC, 'missing');\n\t        return finish();\n\t      }\n\t      var item = results.rows.item(0);\n\t      metadata = safeJsonParse(item.metadata);\n\t      if (item.deleted && !opts.rev) {\n\t        err = createError(MISSING_DOC, 'deleted');\n\t        return finish();\n\t      }\n\t      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n\t      finish();\n\t    });\n\t  };\n\t\n\t  function countDocs(tx, callback) {\n\t\n\t    if (api._docCount !== -1) {\n\t      return callback(api._docCount);\n\t    }\n\t\n\t    // count the total rows\n\t    var sql = select(\n\t      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n\t      [DOC_STORE$1, BY_SEQ_STORE$1],\n\t      DOC_STORE_AND_BY_SEQ_JOINER,\n\t      BY_SEQ_STORE$1 + '.deleted=0');\n\t\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      api._docCount = result.rows.item(0).num;\n\t      callback(api._docCount);\n\t    });\n\t  }\n\t\n\t  api._allDocs = function (opts, callback) {\n\t    var results = [];\n\t    var totalRows;\n\t\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var descending = 'descending' in opts ? opts.descending : false;\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    var offset = 'skip' in opts ? opts.skip : 0;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t\n\t    var sqlArgs = [];\n\t    var criteria = [];\n\t\n\t    if (key !== false) {\n\t      criteria.push(DOC_STORE$1 + '.id = ?');\n\t      sqlArgs.push(key);\n\t    } else if (start !== false || end !== false) {\n\t      if (start !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n\t        sqlArgs.push(start);\n\t      }\n\t      if (end !== false) {\n\t        var comparator = descending ? '>' : '<';\n\t        if (inclusiveEnd) {\n\t          comparator += '=';\n\t        }\n\t        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n\t        sqlArgs.push(end);\n\t      }\n\t      if (key !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id = ?');\n\t        sqlArgs.push(key);\n\t      }\n\t    }\n\t\n\t    if (opts.deleted !== 'ok') {\n\t      // report deleted if keys are specified\n\t      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n\t    }\n\t\n\t    db.readTransaction(function (tx) {\n\t\n\t      // first count up the total rows\n\t      countDocs(tx, function (count) {\n\t        totalRows = count;\n\t\n\t        if (limit === 0) {\n\t          return;\n\t        }\n\t\n\t        // then actually fetch the documents\n\t        var sql = select(\n\t          SELECT_DOCS,\n\t          [DOC_STORE$1, BY_SEQ_STORE$1],\n\t          DOC_STORE_AND_BY_SEQ_JOINER,\n\t          criteria,\n\t          DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n\t          );\n\t        sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\t\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            var id = metadata.id;\n\t            var data = unstringifyDoc(item.data, id, item.rev);\n\t            var winningRev = data._rev;\n\t            var doc = {\n\t              id: id,\n\t              key: id,\n\t              value: {rev: winningRev}\n\t            };\n\t            if (opts.include_docs) {\n\t              doc.doc = data;\n\t              doc.doc._rev = winningRev;\n\t              if (opts.conflicts) {\n\t                doc.doc._conflicts = collectConflicts(metadata);\n\t              }\n\t              fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n\t            }\n\t            if (item.deleted) {\n\t              if (opts.deleted === 'ok') {\n\t                doc.value.deleted = true;\n\t                doc.doc = null;\n\t              } else {\n\t                continue;\n\t              }\n\t            }\n\t            results.push(doc);\n\t          }\n\t        });\n\t      });\n\t    }, websqlError(callback), function () {\n\t      callback(null, {\n\t        total_rows: totalRows,\n\t        offset: opts.skip,\n\t        rows: results\n\t      });\n\t    });\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = api._name + ':' + uuid();\n\t      websqlChanges.addListener(api._name, id, api, opts);\n\t      websqlChanges.notify(api._name);\n\t      return {\n\t        cancel: function () {\n\t          websqlChanges.removeListener(api._name, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var descending = opts.descending;\n\t\n\t    // Ignore the `since` parameter when `descending` is true\n\t    opts.since = opts.since && !descending ? opts.since : 0;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    var results = [];\n\t    var numResults = 0;\n\t\n\t    function fetchChanges() {\n\t\n\t      var selectStmt =\n\t        DOC_STORE$1 + '.json AS metadata, ' +\n\t        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n\t        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n\t        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\t\n\t      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\t\n\t      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n\t        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\t\n\t      var criteria = ['maxSeq > ?'];\n\t      var sqlArgs = [opts.since];\n\t\n\t      if (opts.doc_ids) {\n\t        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n\t        sqlArgs = sqlArgs.concat(opts.doc_ids);\n\t      }\n\t\n\t      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\t\n\t      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\t\n\t      var filter = filterChange(opts);\n\t      if (!opts.view && !opts.filter) {\n\t        // we can just limit in the query\n\t        sql += ' LIMIT ' + limit;\n\t      }\n\t\n\t      var lastSeq = opts.since || 0;\n\t      db.readTransaction(function (tx) {\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          function reportChange(change) {\n\t            return function () {\n\t              opts.onChange(change);\n\t            };\n\t          }\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            lastSeq = item.maxSeq;\n\t\n\t            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n\t              item.winningRev);\n\t            var change = opts.processChange(doc, metadata, opts);\n\t            change.seq = item.maxSeq;\n\t\n\t            var filtered = filter(change);\n\t            if (typeof filtered === 'object') {\n\t              return opts.complete(filtered);\n\t            }\n\t\n\t            if (filtered) {\n\t              numResults++;\n\t              if (returnDocs) {\n\t                results.push(change);\n\t              }\n\t              // process the attachment immediately\n\t              // for the benefit of live listeners\n\t              if (opts.attachments && opts.include_docs) {\n\t                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n\t                  reportChange(change));\n\t              } else {\n\t                reportChange(change)();\n\t              }\n\t            }\n\t            if (numResults === limit) {\n\t              break;\n\t            }\n\t          }\n\t        });\n\t      }, websqlError(opts.complete), function () {\n\t        if (!opts.continuous) {\n\t          opts.complete(null, {\n\t            results: results,\n\t            last_seq: lastSeq\n\t          });\n\t        }\n\t      });\n\t    }\n\t\n\t    fetchChanges();\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    //WebSQL databases do not need to be closed\n\t    callback();\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var res;\n\t    var tx = opts.ctx;\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t    var sql = 'SELECT escaped, ' +\n\t      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n\t      ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      // websql has a bug where \\u0000 causes early truncation in strings\n\t      // and blobs. to work around this, we used to use the hex() function,\n\t      // but that's not performant. after migration 6, we remove \\u0000\n\t      // and add it back in afterwards\n\t      var item = result.rows.item(0);\n\t      var data = item.escaped ? unescapeBlob(item.body) :\n\t        parseHexString(item.body, encoding);\n\t      if (opts.binary) {\n\t        res = binStringToBluffer(data, type);\n\t      } else {\n\t        res = btoa$1(data);\n\t      }\n\t      callback(null, res);\n\t    });\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        if (!result.rows.length) {\n\t          callback(createError(MISSING_DOC));\n\t        } else {\n\t          var data = safeJsonParse(result.rows.item(0).metadata);\n\t          callback(null, data.rev_tree);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    if (!revs.length) {\n\t      return callback();\n\t    }\n\t    db.transaction(function (tx) {\n\t\n\t      // update doc store\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        var metadata = safeJsonParse(result.rows.item(0).metadata);\n\t        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                           revHash, ctx, opts) {\n\t          var rev = pos + '-' + revHash;\n\t          if (revs.indexOf(rev) !== -1) {\n\t            opts.status = 'missing';\n\t          }\n\t        });\n\t\n\t        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n\t        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n\t      });\n\t\n\t      compactRevs$1(revs, docId, tx);\n\t    }, websqlError(callback), function () {\n\t      callback();\n\t    });\n\t  };\n\t\n\t  api._getLocal = function (id, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n\t      tx.executeSql(sql, [id], function (tx, res) {\n\t        if (res.rows.length) {\n\t          var item = res.rows.item(0);\n\t          var doc = unstringifyDoc(item.json, id, item.rev);\n\t          callback(null, doc);\n\t        } else {\n\t          callback(createError(MISSING_DOC));\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    var newRev;\n\t    if (!oldRev) {\n\t      newRev = doc._rev = '0-1';\n\t    } else {\n\t      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t    var json = stringifyDoc(doc);\n\t\n\t    var ret;\n\t    function putLocal(tx) {\n\t      var sql;\n\t      var values;\n\t      if (oldRev) {\n\t        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n\t          'WHERE id=? AND rev=?';\n\t        values = [newRev, json, id, oldRev];\n\t      } else {\n\t        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n\t        values = [id, newRev, json];\n\t      }\n\t      tx.executeSql(sql, values, function (tx, res) {\n\t        if (res.rowsAffected) {\n\t          ret = {ok: true, id: id, rev: newRev};\n\t          if (opts.ctx) { // return immediately\n\t            callback(null, ret);\n\t          }\n\t        } else {\n\t          callback(createError(REV_CONFLICT));\n\t        }\n\t      }, function () {\n\t        callback(createError(REV_CONFLICT));\n\t        return false; // ack that we handled the error\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      putLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(putLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var ret;\n\t\n\t    function removeLocal(tx) {\n\t      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n\t      var params = [doc._id, doc._rev];\n\t      tx.executeSql(sql, params, function (tx, res) {\n\t        if (!res.rowsAffected) {\n\t          return callback(createError(MISSING_DOC));\n\t        }\n\t        ret = {ok: true, id: doc._id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      removeLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(removeLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    websqlChanges.removeAllListeners(api._name);\n\t    db.transaction(function (tx) {\n\t      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n\t        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n\t      stores.forEach(function (store) {\n\t        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n\t      });\n\t    }, websqlError(callback), function () {\n\t      if (hasLocalStorage()) {\n\t        delete window.localStorage['_pouch__websqldb_' + api._name];\n\t        delete window.localStorage[api._name];\n\t      }\n\t      callback(null, {'ok': true});\n\t    });\n\t  };\n\t}\n\t\n\tfunction canOpenTestDB() {\n\t  try {\n\t    openDatabase('_pouch_validate_websql', 1, '', 1);\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\t// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n\t// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n\t// https://github.com/pouchdb/pouchdb/issues/5079)\n\t// This has been fixed in latest WebKit, so we try to detect it here.\n\tfunction isValidWebSQL() {\n\t  // WKWebView UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n\t  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n\t  // Chrome for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n\t  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n\t  //   Mobile/9B206 Safari/7534.48.3\n\t  // Firefox for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n\t  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\t\n\t  // indexedDB is null on some UIWebViews and undefined in others\n\t  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n\t  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n\t      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n\t    // definitely not WKWebView, avoid creating an unnecessary database\n\t    return true;\n\t  }\n\t  // Cache the result in LocalStorage. Reason we do this is because if we\n\t  // call openDatabase() too many times, Safari craps out in SauceLabs and\n\t  // starts throwing DOM Exception 14s.\n\t  var hasLS = hasLocalStorage();\n\t  // Include user agent in the hash, so that if Safari is upgraded, we don't\n\t  // continually think it's broken.\n\t  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n\t  if (hasLS && localStorage[localStorageKey]) {\n\t    return localStorage[localStorageKey] === '1';\n\t  }\n\t  var openedTestDB = canOpenTestDB();\n\t  if (hasLS) {\n\t    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n\t  }\n\t  return openedTestDB;\n\t}\n\t\n\tfunction valid() {\n\t  if (typeof openDatabase !== 'function') {\n\t    return false;\n\t  }\n\t  return isValidWebSQL();\n\t}\n\t\n\tfunction openDB(name, version, description, size) {\n\t  // Traditional WebSQL API\n\t  return openDatabase(name, version, description, size);\n\t}\n\t\n\tfunction WebSQLPouch(opts, callback) {\n\t  var _opts = jsExtend.extend({\n\t    websql: openDB\n\t  }, opts);\n\t\n\t  WebSqlPouch$1.call(this, _opts, callback);\n\t}\n\t\n\tWebSQLPouch.valid = valid;\n\t\n\tWebSQLPouch.use_prefix = true;\n\t\n\tfunction WebSqlPouch (PouchDB) {\n\t  PouchDB.adapter('websql', WebSQLPouch, true);\n\t}\n\t\n\t/* global fetch */\n\t/* global Headers */\n\tfunction wrappedFetch() {\n\t  var wrappedPromise = {};\n\t\n\t  var promise = new PouchPromise(function (resolve, reject) {\n\t    wrappedPromise.resolve = resolve;\n\t    wrappedPromise.reject = reject;\n\t  });\n\t\n\t  var args = new Array(arguments.length);\n\t\n\t  for (var i = 0; i < args.length; i++) {\n\t    args[i] = arguments[i];\n\t  }\n\t\n\t  wrappedPromise.promise = promise;\n\t\n\t  PouchPromise.resolve().then(function () {\n\t    return fetch.apply(null, args);\n\t  }).then(function (response) {\n\t    wrappedPromise.resolve(response);\n\t  }).catch(function (error) {\n\t    wrappedPromise.reject(error);\n\t  });\n\t\n\t  return wrappedPromise;\n\t}\n\t\n\tfunction fetchRequest(options, callback) {\n\t  var wrappedPromise, timer, response;\n\t\n\t  var headers = new Headers();\n\t\n\t  var fetchOptions = {\n\t    method: options.method,\n\t    credentials: 'include',\n\t    headers: headers\n\t  };\n\t\n\t  if (options.json) {\n\t    headers.set('Accept', 'application/json');\n\t    headers.set('Content-Type', options.headers['Content-Type'] ||\n\t      'application/json');\n\t  }\n\t\n\t  if (options.body && (options.body instanceof Blob)) {\n\t    readAsArrayBuffer(options.body, function (arrayBuffer) {\n\t      fetchOptions.body = arrayBuffer;\n\t    });\n\t  } else if (options.body &&\n\t             options.processData &&\n\t             typeof options.body !== 'string') {\n\t    fetchOptions.body = JSON.stringify(options.body);\n\t  } else if ('body' in options) {\n\t    fetchOptions.body = options.body;\n\t  } else {\n\t    fetchOptions.body = null;\n\t  }\n\t\n\t  Object.keys(options.headers).forEach(function (key) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      headers.set(key, options.headers[key]);\n\t    }\n\t  });\n\t\n\t  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(function () {\n\t      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n\t        options.url));\n\t    }, options.timeout);\n\t  }\n\t\n\t  wrappedPromise.promise.then(function (fetchResponse) {\n\t    response = {\n\t      statusCode: fetchResponse.status\n\t    };\n\t\n\t    if (options.timeout > 0) {\n\t      clearTimeout(timer);\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n\t    }\n\t\n\t    return fetchResponse.json();\n\t  }).then(function (result) {\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      callback(null, response, result);\n\t    } else {\n\t      callback(result, response);\n\t    }\n\t  }).catch(function (error) {\n\t    callback(error, response);\n\t  });\n\t\n\t  return {abort: wrappedPromise.reject};\n\t}\n\t\n\tfunction xhRequest(options, callback) {\n\t\n\t  var xhr, timer;\n\t  var timedout = false;\n\t\n\t  var abortReq = function () {\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var timeoutReq = function () {\n\t    timedout = true;\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var ret = {abort: abortReq};\n\t\n\t  var cleanUp = function () {\n\t    clearTimeout(timer);\n\t    ret.abort = function () {};\n\t    if (xhr) {\n\t      xhr.onprogress = undefined;\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = undefined;\n\t      }\n\t      xhr.onreadystatechange = undefined;\n\t      xhr = undefined;\n\t    }\n\t  };\n\t\n\t  if (options.xhr) {\n\t    xhr = new options.xhr();\n\t  } else {\n\t    xhr = new XMLHttpRequest();\n\t  }\n\t\n\t  try {\n\t    xhr.open(options.method, options.url);\n\t  } catch (exception) {\n\t    return callback(new Error(exception.name || 'Url is invalid'));\n\t  }\n\t\n\t  xhr.withCredentials = ('withCredentials' in options) ?\n\t    options.withCredentials : true;\n\t\n\t  if (options.method === 'GET') {\n\t    delete options.headers['Content-Type'];\n\t  } else if (options.json) {\n\t    options.headers.Accept = 'application/json';\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t    if (options.body &&\n\t        options.processData &&\n\t        typeof options.body !== \"string\") {\n\t      options.body = JSON.stringify(options.body);\n\t    }\n\t  }\n\t\n\t  if (options.binary) {\n\t    xhr.responseType = 'arraybuffer';\n\t  }\n\t\n\t  if (!('body' in options)) {\n\t    options.body = null;\n\t  }\n\t\n\t  for (var key in options.headers) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      xhr.setRequestHeader(key, options.headers[key]);\n\t    }\n\t  }\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(timeoutReq, options.timeout);\n\t    xhr.onprogress = function () {\n\t      clearTimeout(timer);\n\t      if(xhr.readyState !== 4) {\n\t        timer = setTimeout(timeoutReq, options.timeout);\n\t      }\n\t    };\n\t    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n\t      xhr.upload.onprogress = xhr.onprogress;\n\t    }\n\t  }\n\t\n\t  xhr.onreadystatechange = function () {\n\t    if (xhr.readyState !== 4) {\n\t      return;\n\t    }\n\t\n\t    var response = {\n\t      statusCode: xhr.status\n\t    };\n\t\n\t    if (xhr.status >= 200 && xhr.status < 300) {\n\t      var data;\n\t      if (options.binary) {\n\t        data = createBlob([xhr.response || ''], {\n\t          type: xhr.getResponseHeader('Content-Type')\n\t        });\n\t      } else {\n\t        data = xhr.responseText;\n\t      }\n\t      callback(null, response, data);\n\t    } else {\n\t      var err = {};\n\t      if (timedout) {\n\t        err = new Error('ETIMEDOUT');\n\t        err.code = 'ETIMEDOUT';\n\t      } else if (typeof xhr.response === 'string') {\n\t        try {\n\t          err = JSON.parse(xhr.response);\n\t        } catch(e) {}\n\t      }\n\t      err.status = xhr.status;\n\t      callback(err);\n\t    }\n\t    cleanUp();\n\t  };\n\t\n\t  if (options.body && (options.body instanceof Blob)) {\n\t    readAsArrayBuffer(options.body, function (arrayBuffer) {\n\t      xhr.send(arrayBuffer);\n\t    });\n\t  } else {\n\t    xhr.send(options.body);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction testXhr() {\n\t  try {\n\t    new XMLHttpRequest();\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar hasXhr = testXhr();\n\t\n\tfunction ajax$1(options, callback) {\n\t  if (hasXhr || options.xhr) {\n\t    return xhRequest(options, callback);\n\t  } else {\n\t    return fetchRequest(options, callback);\n\t  }\n\t}\n\t\n\t// the blob already has a type; do nothing\n\tvar res$2 = function () {};\n\t\n\tfunction defaultBody() {\n\t  return '';\n\t}\n\t\n\tfunction ajaxCore(options, callback) {\n\t\n\t  options = clone(options);\n\t\n\t  var defaultOptions = {\n\t    method : \"GET\",\n\t    headers: {},\n\t    json: true,\n\t    processData: true,\n\t    timeout: 10000,\n\t    cache: false\n\t  };\n\t\n\t  options = jsExtend.extend(defaultOptions, options);\n\t\n\t  function onSuccess(obj, resp, cb) {\n\t    if (!options.binary && options.json && typeof obj === 'string') {\n\t      /* istanbul ignore next */\n\t      try {\n\t        obj = JSON.parse(obj);\n\t      } catch (e) {\n\t        // Probably a malformed JSON from server\n\t        return cb(e);\n\t      }\n\t    }\n\t    if (Array.isArray(obj)) {\n\t      obj = obj.map(function (v) {\n\t        if (v.error || v.missing) {\n\t          return generateErrorFromResponse(v);\n\t        } else {\n\t          return v;\n\t        }\n\t      });\n\t    }\n\t    if (options.binary) {\n\t      res$2(obj, resp);\n\t    }\n\t    cb(null, obj, resp);\n\t  }\n\t\n\t  if (options.json) {\n\t    if (!options.binary) {\n\t      options.headers.Accept = 'application/json';\n\t    }\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t  }\n\t\n\t  if (options.binary) {\n\t    options.encoding = null;\n\t    options.json = false;\n\t  }\n\t\n\t  if (!options.processData) {\n\t    options.json = false;\n\t  }\n\t\n\t  return ajax$1(options, function (err, response, body) {\n\t\n\t    if (err) {\n\t      return callback(generateErrorFromResponse(err));\n\t    }\n\t\n\t    var error;\n\t    var content_type = response.headers && response.headers['content-type'];\n\t    var data = body || defaultBody();\n\t\n\t    // CouchDB doesn't always return the right content-type for JSON data, so\n\t    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n\t    if (!options.binary && (options.json || !options.processData) &&\n\t        typeof data !== 'object' &&\n\t        (/json/.test(content_type) ||\n\t         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n\t      try {\n\t        data = JSON.parse(data.toString());\n\t      } catch (e) {}\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      onSuccess(data, response, callback);\n\t    } else {\n\t      error = generateErrorFromResponse(data);\n\t      error.status = response.statusCode;\n\t      callback(error);\n\t    }\n\t  });\n\t}\n\t\n\tfunction ajax(opts, callback) {\n\t\n\t  // cache-buster, specifically designed to work around IE's aggressive caching\n\t  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n\t  // Also Safari caches POSTs, so we need to cache-bust those too.\n\t  var ua = (navigator && navigator.userAgent) ?\n\t    navigator.userAgent.toLowerCase() : '';\n\t\n\t  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n\t  var isIE = ua.indexOf('msie') !== -1;\n\t  var isEdge = ua.indexOf('edge') !== -1;\n\t\n\t  // it appears the new version of safari also caches GETs,\n\t  // see https://github.com/pouchdb/pouchdb/issues/5010\n\t  var shouldCacheBust = (isSafari ||\n\t    ((isIE || isEdge) && opts.method === 'GET'));\n\t\n\t  var cache = 'cache' in opts ? opts.cache : true;\n\t\n\t  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\t\n\t  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n\t    var hasArgs = opts.url.indexOf('?') !== -1;\n\t    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n\t  }\n\t\n\t  return ajaxCore(opts, callback);\n\t}\n\t\n\tvar CHANGES_BATCH_SIZE = 25;\n\tvar MAX_SIMULTANEOUS_REVS = 50;\n\t\n\tvar supportsBulkGetMap = {};\n\t\n\tvar log$1 = debug('pouchdb:http');\n\t\n\tfunction readAttachmentsAsBlobOrBuffer(row) {\n\t  var atts = row.doc && row.doc._attachments;\n\t  if (!atts) {\n\t    return;\n\t  }\n\t  Object.keys(atts).forEach(function (filename) {\n\t    var att = atts[filename];\n\t    att.data = b64ToBluffer(att.data, att.content_type);\n\t  });\n\t}\n\t\n\tfunction encodeDocId(id) {\n\t  if (/^_design/.test(id)) {\n\t    return '_design/' + encodeURIComponent(id.slice(8));\n\t  }\n\t  if (/^_local/.test(id)) {\n\t    return '_local/' + encodeURIComponent(id.slice(7));\n\t  }\n\t  return encodeURIComponent(id);\n\t}\n\t\n\tfunction preprocessAttachments$1(doc) {\n\t  if (!doc._attachments || !Object.keys(doc._attachments)) {\n\t    return PouchPromise.resolve();\n\t  }\n\t\n\t  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n\t    var attachment = doc._attachments[key];\n\t    if (attachment.data && typeof attachment.data !== 'string') {\n\t      return new PouchPromise(function (resolve) {\n\t        blobToBase64(attachment.data, resolve);\n\t      }).then(function (b64) {\n\t        attachment.data = b64;\n\t      });\n\t    }\n\t  }));\n\t}\n\t\n\tfunction hasUrlPrefix(opts) {\n\t  if (!opts.prefix) {\n\t    return false;\n\t  }\n\t\n\t  var protocol = parseUri(opts.prefix).protocol;\n\t\n\t  return protocol === 'http' || protocol === 'https';\n\t}\n\t\n\t// Get all the information you possibly can about the URI given by name and\n\t// return it as a suitable object.\n\tfunction getHost(name, opts) {\n\t\n\t  // encode db name if opts.prefix is a url (#5574)\n\t  if (hasUrlPrefix(opts)) {\n\t    var dbName = opts.name.substr(opts.prefix.length);\n\t    name = opts.prefix + encodeURIComponent(dbName);\n\t  }\n\t\n\t  // Prase the URI into all its little bits\n\t  var uri = parseUri(name);\n\t\n\t  // Store the user and password as a separate auth object\n\t  if (uri.user || uri.password) {\n\t    uri.auth = {username: uri.user, password: uri.password};\n\t  }\n\t\n\t  // Split the path part of the URI into parts using '/' as the delimiter\n\t  // after removing any leading '/' and any trailing '/'\n\t  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\t\n\t  // Store the first part as the database name and remove it from the parts\n\t  // array\n\t  uri.db = parts.pop();\n\t  // Prevent double encoding of URI component\n\t  if (uri.db.indexOf('%') === -1) {\n\t    uri.db = encodeURIComponent(uri.db);\n\t  }\n\t\n\t  // Restore the path by joining all the remaining parts (all the parts\n\t  // except for the database name) with '/'s\n\t  uri.path = parts.join('/');\n\t\n\t  return uri;\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genDBUrl(opts, path) {\n\t  return genUrl(opts, opts.db + '/' + path);\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genUrl(opts, path) {\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  var pathDel = !opts.path ? '' : '/';\n\t\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  return opts.protocol + '://' + opts.host +\n\t         (opts.port ? (':' + opts.port) : '') +\n\t         '/' + opts.path + pathDel + path;\n\t}\n\t\n\tfunction paramsToStr(params) {\n\t  return '?' + Object.keys(params).map(function (k) {\n\t    return k + '=' + encodeURIComponent(params[k]);\n\t  }).join('&');\n\t}\n\t\n\t// Implements the PouchDB API for dealing with CouchDB instances over HTTP\n\tfunction HttpPouch(opts, callback) {\n\t\n\t  // The functions that will be publicly available for HttpPouch\n\t  var api = this;\n\t\n\t  var host = getHost(opts.name, opts);\n\t  var dbUrl = genDBUrl(host, '');\n\t\n\t  opts = clone(opts);\n\t  var ajaxOpts = opts.ajax || {};\n\t\n\t  if (opts.auth || host.auth) {\n\t    var nAuth = opts.auth || host.auth;\n\t    var str = nAuth.username + ':' + nAuth.password;\n\t    var token = btoa$1(unescape(encodeURIComponent(str)));\n\t    ajaxOpts.headers = ajaxOpts.headers || {};\n\t    ajaxOpts.headers.Authorization = 'Basic ' + token;\n\t  }\n\t\n\t  // Not strictly necessary, but we do this because numerous tests\n\t  // rely on swapping ajax in and out.\n\t  api._ajax = ajax;\n\t\n\t  function ajax$$(userOpts, options, callback) {\n\t    var reqAjax = userOpts.ajax || {};\n\t    var reqOpts = jsExtend.extend(clone(ajaxOpts), reqAjax, options);\n\t    log$1(reqOpts.method + ' ' + reqOpts.url);\n\t    return api._ajax(reqOpts, callback);\n\t  }\n\t\n\t  function ajaxPromise(userOpts, opts) {\n\t    return new PouchPromise(function (resolve, reject) {\n\t      ajax$$(userOpts, opts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  function adapterFun$$(name, fun) {\n\t    return adapterFun(name, getArguments(function (args) {\n\t      setup().then(function () {\n\t        return fun.apply(this, args);\n\t      }).catch(function (e) {\n\t        var callback = args.pop();\n\t        callback(e);\n\t      });\n\t    }));\n\t  }\n\t\n\t  var setupPromise;\n\t\n\t  function setup() {\n\t    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n\t    if (opts.skipSetup || opts.skip_setup) {\n\t      return PouchPromise.resolve();\n\t    }\n\t\n\t    // If there is a setup in process or previous successful setup\n\t    // done then we will use that\n\t    // If previous setups have been rejected we will try again\n\t    if (setupPromise) {\n\t      return setupPromise;\n\t    }\n\t\n\t    var checkExists = {method: 'GET', url: dbUrl};\n\t    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n\t      if (err && err.status && err.status === 404) {\n\t        // Doesnt exist, create it\n\t        explainError(404, 'PouchDB is just detecting if the remote exists.');\n\t        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n\t      } else {\n\t        return PouchPromise.reject(err);\n\t      }\n\t    }).catch(function (err) {\n\t      // If we try to create a database that already exists, skipped in\n\t      // istanbul since its catching a race condition.\n\t      /* istanbul ignore if */\n\t      if (err && err.status && err.status === 412) {\n\t        return true;\n\t      }\n\t      return PouchPromise.reject(err);\n\t    });\n\t\n\t    setupPromise.catch(function () {\n\t      setupPromise = null;\n\t    });\n\t\n\t    return setupPromise;\n\t  }\n\t\n\t  setTimeout(function () {\n\t    callback(null, api);\n\t  });\n\t\n\t  api.type = function () {\n\t    return 'http';\n\t  };\n\t\n\t  api.id = adapterFun$$('id', function (callback) {\n\t    ajax$$({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n\t      var uuid = (result && result.uuid) ?\n\t        (result.uuid + host.db) : genDBUrl(host, '');\n\t      callback(null, uuid);\n\t    });\n\t  });\n\t\n\t  api.request = adapterFun$$('request', function (options, callback) {\n\t    options.url = genDBUrl(host, options.url);\n\t    ajax$$({}, options, callback);\n\t  });\n\t\n\t  // Sends a POST request to the host calling the couchdb _compact function\n\t  //    version: The version of CouchDB it is running\n\t  api.compact = adapterFun$$('compact', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t    ajax$$(opts, {\n\t      url: genDBUrl(host, '_compact'),\n\t      method: 'POST'\n\t    }, function () {\n\t      function ping() {\n\t        api.info(function (err, res) {\n\t          if (res && !res.compact_running) {\n\t            callback(null, {ok: true});\n\t          } else {\n\t            setTimeout(ping, opts.interval || 200);\n\t          }\n\t        });\n\t      }\n\t      // Ping the http if it's finished compaction\n\t      ping();\n\t    });\n\t  });\n\t\n\t  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n\t    var self = this;\n\t\n\t    function doBulkGet(cb) {\n\t      var params = {};\n\t      if (opts.revs) {\n\t        params.revs = true;\n\t      }\n\t      if (opts.attachments) {\n\t        /* istanbul ignore next */\n\t        params.attachments = true;\n\t      }\n\t      ajax$$({}, {\n\t        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n\t        method: 'POST',\n\t        body: { docs: opts.docs}\n\t      }, cb);\n\t    }\n\t\n\t    function doBulkGetShim() {\n\t      // avoid \"url too long error\" by splitting up into multiple requests\n\t      var batchSize = MAX_SIMULTANEOUS_REVS;\n\t      var numBatches = Math.ceil(opts.docs.length / batchSize);\n\t      var numDone = 0;\n\t      var results = new Array(numBatches);\n\t\n\t      function onResult(batchNum) {\n\t        return function (err, res) {\n\t          // err is impossible because shim returns a list of errs in that case\n\t          results[batchNum] = res.results;\n\t          if (++numDone === numBatches) {\n\t            callback(null, {results: flatten(results)});\n\t          }\n\t        };\n\t      }\n\t\n\t      for (var i = 0; i < numBatches; i++) {\n\t        var subOpts = pick(opts, ['revs', 'attachments']);\n\t        subOpts.ajax = ajaxOpts;\n\t        subOpts.docs = opts.docs.slice(i * batchSize,\n\t          Math.min(opts.docs.length, (i + 1) * batchSize));\n\t        bulkGet(self, subOpts, onResult(i));\n\t      }\n\t    }\n\t\n\t    // mark the whole database as either supporting or not supporting _bulk_get\n\t    var dbUrl = genUrl(host, '');\n\t    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\t\n\t    if (typeof supportsBulkGet !== 'boolean') {\n\t      // check if this database supports _bulk_get\n\t      doBulkGet(function (err, res) {\n\t        /* istanbul ignore else */\n\t        if (err) {\n\t          var status = Math.floor(err.status / 100);\n\t          /* istanbul ignore else */\n\t          if (status === 4 || status === 5) { // 40x or 50x\n\t            supportsBulkGetMap[dbUrl] = false;\n\t            explainError(\n\t              err.status,\n\t              'PouchDB is just detecting if the remote ' +\n\t              'supports the _bulk_get API.'\n\t            );\n\t            doBulkGetShim();\n\t          } else {\n\t            callback(err);\n\t          }\n\t        } else {\n\t          supportsBulkGetMap[dbUrl] = true;\n\t          callback(null, res);\n\t        }\n\t      });\n\t    } else if (supportsBulkGet) {\n\t      /* istanbul ignore next */\n\t      doBulkGet(callback);\n\t    } else {\n\t      doBulkGetShim();\n\t    }\n\t  });\n\t\n\t  // Calls GET on the host, which gets back a JSON string containing\n\t  //    couchdb: A welcome string\n\t  //    version: The version of CouchDB it is running\n\t  api._info = function (callback) {\n\t    setup().then(function () {\n\t      ajax$$({}, {\n\t        method: 'GET',\n\t        url: genDBUrl(host, '')\n\t      }, function (err, res) {\n\t        /* istanbul ignore next */\n\t        if (err) {\n\t        return callback(err);\n\t        }\n\t        res.host = genDBUrl(host, '');\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t  // Get the document with the given id from the database given by host.\n\t  // The id could be solely the _id in the database, or it may be a\n\t  // _design/ID or _local/ID path\n\t  api.get = adapterFun$$('get', function (id, opts, callback) {\n\t    // If no options were given, set the callback to the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t\n\t    if (opts.revs) {\n\t      params.revs = true;\n\t    }\n\t\n\t    if (opts.revs_info) {\n\t      params.revs_info = true;\n\t    }\n\t\n\t    if (opts.open_revs) {\n\t      if (opts.open_revs !== \"all\") {\n\t        opts.open_revs = JSON.stringify(opts.open_revs);\n\t      }\n\t      params.open_revs = opts.open_revs;\n\t    }\n\t\n\t    if (opts.rev) {\n\t      params.rev = opts.rev;\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = opts.conflicts;\n\t    }\n\t\n\t    id = encodeDocId(id);\n\t\n\t    // Set the options for the ajax call\n\t    var options = {\n\t      method: 'GET',\n\t      url: genDBUrl(host, id + paramsToStr(params))\n\t    };\n\t\n\t    function fetchAttachments(doc) {\n\t      var atts = doc._attachments;\n\t      var filenames = atts && Object.keys(atts);\n\t      if (!atts || !filenames.length) {\n\t        return;\n\t      }\n\t      // we fetch these manually in separate XHRs, because\n\t      // Sync Gateway would normally send it back as multipart/mixed,\n\t      // which we cannot parse. Also, this is more efficient than\n\t      // receiving attachments as base64-encoded strings.\n\t      function fetch() {\n\t\n\t        if (!filenames.length) {\n\t          return null;\n\t        }\n\t\n\t        var filename = filenames.pop();\n\t        var att = atts[filename];\n\t        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n\t          '?rev=' + doc._rev;\n\t        return ajaxPromise(opts, {\n\t          method: 'GET',\n\t          url: genDBUrl(host, path),\n\t          binary: true\n\t        }).then(function (blob) {\n\t          if (opts.binary) {\n\t            return blob;\n\t          }\n\t          return new PouchPromise(function (resolve) {\n\t            blobToBase64(blob, resolve);\n\t          });\n\t        }).then(function (data) {\n\t          delete att.stub;\n\t          delete att.length;\n\t          att.data = data;\n\t        });\n\t      }\n\t\n\t      // This limits the number of parallel xhr requests to 5 any time\n\t      // to avoid issues with maximum browser request limits\n\t      return new PromisePool(fetch, 5, {promise: PouchPromise}).start();\n\t    }\n\t\n\t    function fetchAllAttachments(docOrDocs) {\n\t      if (Array.isArray(docOrDocs)) {\n\t        return PouchPromise.all(docOrDocs.map(function (doc) {\n\t          if (doc.ok) {\n\t            return fetchAttachments(doc.ok);\n\t          }\n\t        }));\n\t      }\n\t      return fetchAttachments(docOrDocs);\n\t    }\n\t\n\t    ajaxPromise(opts, options).then(function (res) {\n\t      return PouchPromise.resolve().then(function () {\n\t        if (opts.attachments) {\n\t          return fetchAllAttachments(res);\n\t        }\n\t      }).then(function () {\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Delete the document given by doc from the database given by host.\n\t  api.remove = adapterFun$$('remove',\n\t      function (docOrId, optsOrRev, opts, callback) {\n\t    var doc;\n\t    if (typeof optsOrRev === 'string') {\n\t      // id, rev, opts, callback style\n\t      doc = {\n\t        _id: docOrId,\n\t        _rev: optsOrRev\n\t      };\n\t      if (typeof opts === 'function') {\n\t        callback = opts;\n\t        opts = {};\n\t      }\n\t    } else {\n\t      // doc, opts, callback style\n\t      doc = docOrId;\n\t      if (typeof optsOrRev === 'function') {\n\t        callback = optsOrRev;\n\t        opts = {};\n\t      } else {\n\t        callback = opts;\n\t        opts = optsOrRev;\n\t      }\n\t    }\n\t\n\t    var rev = (doc._rev || opts.rev);\n\t\n\t    // Delete the document\n\t    ajax$$(opts, {\n\t      method: 'DELETE',\n\t      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n\t    }, callback);\n\t  });\n\t\n\t  function encodeAttachmentId(attachmentId) {\n\t    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n\t  }\n\t\n\t  // Get the attachment\n\t  api.getAttachment =\n\t    adapterFun$$('getAttachment', function (docId, attachmentId, opts,\n\t                                                callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n\t    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n\t      encodeAttachmentId(attachmentId) + params;\n\t    ajax$$(opts, {\n\t      method: 'GET',\n\t      url: url,\n\t      binary: true\n\t    }, callback);\n\t  });\n\t\n\t  // Remove the attachment given by the id and rev\n\t  api.removeAttachment =\n\t    adapterFun$$('removeAttachment', function (docId, attachmentId, rev,\n\t                                                   callback) {\n\t\n\t    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n\t      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\t\n\t    ajax$$({}, {\n\t      method: 'DELETE',\n\t      url: url\n\t    }, callback);\n\t  });\n\t\n\t  // Add the attachment given by blob and its contentType property\n\t  // to the document with the given id, the revision given by rev, and\n\t  // add it to the database given by host.\n\t  api.putAttachment =\n\t    adapterFun$$('putAttachment', function (docId, attachmentId, rev, blob,\n\t                                                type, callback) {\n\t    if (typeof type === 'function') {\n\t      callback = type;\n\t      type = blob;\n\t      blob = rev;\n\t      rev = null;\n\t    }\n\t    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n\t    var url = genDBUrl(host, id);\n\t    if (rev) {\n\t      url += '?rev=' + rev;\n\t    }\n\t\n\t    if (typeof blob === 'string') {\n\t      // input is assumed to be a base64 string\n\t      var binary;\n\t      try {\n\t        binary = atob$1(blob);\n\t      } catch (err) {\n\t        return callback(createError(BAD_ARG,\n\t                        'Attachment is not a valid base64 string'));\n\t      }\n\t      blob = binary ? binStringToBluffer(binary, type) : '';\n\t    }\n\t\n\t    var opts = {\n\t      headers: {'Content-Type': type},\n\t      method: 'PUT',\n\t      url: url,\n\t      processData: false,\n\t      body: blob,\n\t      timeout: ajaxOpts.timeout || 60000\n\t    };\n\t    // Add the attachment\n\t    ajax$$({}, opts, callback);\n\t  });\n\t\n\t  // Update/create multiple documents given by req in the database\n\t  // given by host.\n\t  api._bulkDocs = function (req, opts, callback) {\n\t    // If new_edits=false then it prevents the database from creating\n\t    // new revision numbers for the documents. Instead it just uses\n\t    // the old ones. This is used in database replication.\n\t    req.new_edits = opts.new_edits;\n\t\n\t    setup().then(function () {\n\t      return PouchPromise.all(req.docs.map(preprocessAttachments$1));\n\t    }).then(function () {\n\t      // Update/create the documents\n\t      ajax$$(opts, {\n\t        method: 'POST',\n\t        url: genDBUrl(host, '_bulk_docs'),\n\t        timeout: opts.timeout,\n\t        body: req\n\t      }, function (err, results) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        results.forEach(function (result) {\n\t          result.ok = true; // smooths out cloudant not adding this\n\t        });\n\t        callback(null, results);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Update/create document\n\t  api._put = function (doc, opts, callback) {\n\t    setup().then(function () {\n\t      return preprocessAttachments$1(doc);\n\t    }).then(function () {\n\t      // Update/create the document\n\t      ajax$$(opts, {\n\t        method: 'PUT',\n\t        url: genDBUrl(host, encodeDocId(doc._id)),\n\t        body: doc\n\t      }, function (err, result) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        callback(null, result);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Get a listing of the documents in the database given\n\t  // by host and ordered by increasing id.\n\t  api.allDocs = adapterFun$$('allDocs', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t    var body;\n\t    var method = 'GET';\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if (opts.include_docs) {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    // added in CouchDB 1.6.0\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.key) {\n\t      params.key = JSON.stringify(opts.key);\n\t    }\n\t\n\t    if (opts.start_key) {\n\t      opts.startkey = opts.start_key;\n\t    }\n\t\n\t    if (opts.startkey) {\n\t      params.startkey = JSON.stringify(opts.startkey);\n\t    }\n\t\n\t    if (opts.end_key) {\n\t      opts.endkey = opts.end_key;\n\t    }\n\t\n\t    if (opts.endkey) {\n\t      params.endkey = JSON.stringify(opts.endkey);\n\t    }\n\t\n\t    if (typeof opts.inclusive_end !== 'undefined') {\n\t      params.inclusive_end = !!opts.inclusive_end;\n\t    }\n\t\n\t    if (typeof opts.limit !== 'undefined') {\n\t      params.limit = opts.limit;\n\t    }\n\t\n\t    if (typeof opts.skip !== 'undefined') {\n\t      params.skip = opts.skip;\n\t    }\n\t\n\t    var paramStr = paramsToStr(params);\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      method = 'POST';\n\t      body = {keys: opts.keys};\n\t    }\n\t\n\t    // Get the document listing\n\t    ajaxPromise(opts, {\n\t      method: method,\n\t      url: genDBUrl(host, '_all_docs' + paramStr),\n\t      body: body\n\t    }).then(function (res) {\n\t      if (opts.include_docs && opts.attachments && opts.binary) {\n\t        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n\t      }\n\t      callback(null, res);\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Get a list of changes made to documents in the database given by host.\n\t  // TODO According to the README, there should be two other methods here,\n\t  // api.changes.addListener and api.changes.removeListener.\n\t  api._changes = function (opts) {\n\t\n\t    // We internally page the results of a changes request, this means\n\t    // if there is a large set of changes to be returned we can start\n\t    // processing them quicker instead of waiting on the entire\n\t    // set of changes to return and attempting to process them at once\n\t    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\t\n\t    opts = clone(opts);\n\t    opts.timeout = ('timeout' in opts) ? opts.timeout :\n\t      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n\t      30 * 1000;\n\t\n\t    // We give a 5 second buffer for CouchDB changes to respond with\n\t    // an ok timeout (if a timeout it set)\n\t    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n\t    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    //\n\t    var leftToFetch = limit;\n\t\n\t    if (opts.style) {\n\t      params.style = opts.style;\n\t    }\n\t\n\t    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.continuous) {\n\t      params.feed = 'longpoll';\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if ('heartbeat' in opts) {\n\t      // If the heartbeat value is false, it disables the default heartbeat\n\t      if (opts.heartbeat) {\n\t        params.heartbeat = opts.heartbeat;\n\t      }\n\t    } else {\n\t      // Default heartbeat to 10 seconds\n\t      params.heartbeat = 10000;\n\t    }\n\t\n\t    if (opts.filter && typeof opts.filter === 'string') {\n\t      params.filter = opts.filter;\n\t    }\n\t\n\t    if (opts.view && typeof opts.view === 'string') {\n\t      params.filter = '_view';\n\t      params.view = opts.view;\n\t    }\n\t\n\t    // If opts.query_params exists, pass it through to the changes request.\n\t    // These parameters may be used by the filter on the source database.\n\t    if (opts.query_params && typeof opts.query_params === 'object') {\n\t      for (var param_name in opts.query_params) {\n\t        /* istanbul ignore else */\n\t        if (opts.query_params.hasOwnProperty(param_name)) {\n\t          params[param_name] = opts.query_params[param_name];\n\t        }\n\t      }\n\t    }\n\t\n\t    var method = 'GET';\n\t    var body;\n\t\n\t    if (opts.doc_ids) {\n\t      // set this automagically for the user; it's annoying that couchdb\n\t      // requires both a \"filter\" and a \"doc_ids\" param.\n\t      params.filter = '_doc_ids';\n\t      method = 'POST';\n\t      body = {doc_ids: opts.doc_ids };\n\t    }\n\t\n\t    var xhr;\n\t    var lastFetchedSeq;\n\t\n\t    // Get all the changes starting wtih the one immediately after the\n\t    // sequence number given by since.\n\t    var fetch = function (since, callback) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      params.since = since;\n\t      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n\t      /* istanbul ignore next */\n\t      if (typeof params.since === \"object\") {\n\t        params.since = JSON.stringify(params.since);\n\t      }\n\t\n\t      if (opts.descending) {\n\t        if (limit) {\n\t          params.limit = leftToFetch;\n\t        }\n\t      } else {\n\t        params.limit = (!limit || leftToFetch > batchSize) ?\n\t          batchSize : leftToFetch;\n\t      }\n\t\n\t      // Set the options for the ajax call\n\t      var xhrOpts = {\n\t        method: method,\n\t        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n\t        timeout: opts.timeout,\n\t        body: body\n\t      };\n\t      lastFetchedSeq = since;\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t\n\t      // Get the changes\n\t      setup().then(function () {\n\t        xhr = ajax$$(opts, xhrOpts, callback);\n\t      }).catch(callback);\n\t    };\n\t\n\t    // If opts.since exists, get all the changes from the sequence\n\t    // number given by opts.since. Otherwise, get all the changes\n\t    // from the sequence number 0.\n\t    var results = {results: []};\n\t\n\t    var fetched = function (err, res) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      var raw_results_length = 0;\n\t      // If the result of the ajax call (res) contains changes (res.results)\n\t      if (res && res.results) {\n\t        raw_results_length = res.results.length;\n\t        results.last_seq = res.last_seq;\n\t        // For each change\n\t        var req = {};\n\t        req.query = opts.query_params;\n\t        res.results = res.results.filter(function (c) {\n\t          leftToFetch--;\n\t          var ret = filterChange(opts)(c);\n\t          if (ret) {\n\t            if (opts.include_docs && opts.attachments && opts.binary) {\n\t              readAttachmentsAsBlobOrBuffer(c);\n\t            }\n\t            if (returnDocs) {\n\t              results.results.push(c);\n\t            }\n\t            opts.onChange(c);\n\t          }\n\t          return ret;\n\t        });\n\t      } else if (err) {\n\t        // In case of an error, stop listening for changes and call\n\t        // opts.complete\n\t        opts.aborted = true;\n\t        opts.complete(err);\n\t        return;\n\t      }\n\t\n\t      // The changes feed may have timed out with no results\n\t      // if so reuse last update sequence\n\t      if (res && res.last_seq) {\n\t        lastFetchedSeq = res.last_seq;\n\t      }\n\t\n\t      var finished = (limit && leftToFetch <= 0) ||\n\t        (res && raw_results_length < batchSize) ||\n\t        (opts.descending);\n\t\n\t      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n\t        // Queue a call to fetch again with the newest sequence number\n\t        setTimeout(function () { fetch(lastFetchedSeq, fetched); }, 0);\n\t      } else {\n\t        // We're done, call the callback\n\t        opts.complete(null, results);\n\t      }\n\t    };\n\t\n\t    fetch(opts.since || 0, fetched);\n\t\n\t    // Return a method to cancel this method from processing any more\n\t    return {\n\t      cancel: function () {\n\t        opts.aborted = true;\n\t        if (xhr) {\n\t          xhr.abort();\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  // Given a set of document/revision IDs (given by req), tets the subset of\n\t  // those that do NOT correspond to revisions stored in the database.\n\t  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n\t  api.revsDiff = adapterFun$$('revsDiff', function (req, opts, callback) {\n\t    // If no options were given, set the callback to be the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t\n\t    // Get the missing document/revision IDs\n\t    ajax$$(opts, {\n\t      method: 'POST',\n\t      url: genDBUrl(host, '_revs_diff'),\n\t      body: req\n\t    }, callback);\n\t  });\n\t\n\t  api._close = function (callback) {\n\t    callback();\n\t  };\n\t\n\t  api._destroy = function (options, callback) {\n\t    ajax$$(options, {\n\t      url: genDBUrl(host, ''),\n\t      method: 'DELETE'\n\t    }, function (err, resp) {\n\t      if (err && err.status && err.status !== 404) {\n\t        return callback(err);\n\t      }\n\t      callback(null, resp);\n\t    });\n\t  };\n\t}\n\t\n\t// HttpPouch is a valid adapter.\n\tHttpPouch.valid = function () {\n\t  return true;\n\t};\n\t\n\tfunction HttpPouch$1 (PouchDB) {\n\t  PouchDB.adapter('http', HttpPouch, false);\n\t  PouchDB.adapter('https', HttpPouch, false);\n\t}\n\t\n\tfunction pad(str, padWith, upToLength) {\n\t  var padding = '';\n\t  var targetLength = upToLength - str.length;\n\t  /* istanbul ignore next */\n\t  while (padding.length < targetLength) {\n\t    padding += padWith;\n\t  }\n\t  return padding;\n\t}\n\t\n\tfunction padLeft(str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return padding + str;\n\t}\n\t\n\tvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\tvar MAGNITUDE_DIGITS = 3; // ditto\n\tvar SEP = ''; // set to '_' for easier debugging \n\t\n\tfunction collate(a, b) {\n\t\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  a = normalizeKey(a);\n\t  b = normalizeKey(b);\n\t\n\t  var ai = collationIndex(a);\n\t  var bi = collationIndex(b);\n\t  if ((ai - bi) !== 0) {\n\t    return ai - bi;\n\t  }\n\t  if (a === null) {\n\t    return 0;\n\t  }\n\t  switch (typeof a) {\n\t    case 'number':\n\t      return a - b;\n\t    case 'boolean':\n\t      return a === b ? 0 : (a < b ? -1 : 1);\n\t    case 'string':\n\t      return stringCollate(a, b);\n\t  }\n\t  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n\t}\n\t\n\t// couch considers null/NaN/Infinity/-Infinity === undefined,\n\t// for the purposes of mapreduce indexes. also, dates get stringified.\n\tfunction normalizeKey(key) {\n\t  switch (typeof key) {\n\t    case 'undefined':\n\t      return null;\n\t    case 'number':\n\t      if (key === Infinity || key === -Infinity || isNaN(key)) {\n\t        return null;\n\t      }\n\t      return key;\n\t    case 'object':\n\t      var origKey = key;\n\t      if (Array.isArray(key)) {\n\t        var len = key.length;\n\t        key = new Array(len);\n\t        for (var i = 0; i < len; i++) {\n\t          key[i] = normalizeKey(origKey[i]);\n\t        }\n\t      /* istanbul ignore next */\n\t      } else if (key instanceof Date) {\n\t        return key.toJSON();\n\t      } else if (key !== null) { // generic object\n\t        key = {};\n\t        for (var k in origKey) {\n\t          if (origKey.hasOwnProperty(k)) {\n\t            var val = origKey[k];\n\t            if (typeof val !== 'undefined') {\n\t              key[k] = normalizeKey(val);\n\t            }\n\t          }\n\t        }\n\t      }\n\t  }\n\t  return key;\n\t}\n\t\n\tfunction indexify(key) {\n\t  if (key !== null) {\n\t    switch (typeof key) {\n\t      case 'boolean':\n\t        return key ? 1 : 0;\n\t      case 'number':\n\t        return numToIndexableString(key);\n\t      case 'string':\n\t        // We've to be sure that key does not contain \\u0000\n\t        // Do order-preserving replacements:\n\t        // 0 -> 1, 1\n\t        // 1 -> 1, 2\n\t        // 2 -> 2, 2\n\t        return key\n\t          .replace(/\\u0002/g, '\\u0002\\u0002')\n\t          .replace(/\\u0001/g, '\\u0001\\u0002')\n\t          .replace(/\\u0000/g, '\\u0001\\u0001');\n\t      case 'object':\n\t        var isArray = Array.isArray(key);\n\t        var arr = isArray ? key : Object.keys(key);\n\t        var i = -1;\n\t        var len = arr.length;\n\t        var result = '';\n\t        if (isArray) {\n\t          while (++i < len) {\n\t            result += toIndexableString(arr[i]);\n\t          }\n\t        } else {\n\t          while (++i < len) {\n\t            var objKey = arr[i];\n\t            result += toIndexableString(objKey) +\n\t                toIndexableString(key[objKey]);\n\t          }\n\t        }\n\t        return result;\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t// convert the given key to a string that would be appropriate\n\t// for lexical sorting, e.g. within a database, where the\n\t// sorting is the same given by the collate() function.\n\tfunction toIndexableString(key) {\n\t  var zero = '\\u0000';\n\t  key = normalizeKey(key);\n\t  return collationIndex(key) + SEP + indexify(key) + zero;\n\t}\n\t\n\tfunction parseNumber(str, i) {\n\t  var originalIdx = i;\n\t  var num;\n\t  var zero = str[i] === '1';\n\t  if (zero) {\n\t    num = 0;\n\t    i++;\n\t  } else {\n\t    var neg = str[i] === '0';\n\t    i++;\n\t    var numAsString = '';\n\t    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n\t    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      magnitude = -magnitude;\n\t    }\n\t    i += MAGNITUDE_DIGITS;\n\t    while (true) {\n\t      var ch = str[i];\n\t      if (ch === '\\u0000') {\n\t        break;\n\t      } else {\n\t        numAsString += ch;\n\t      }\n\t      i++;\n\t    }\n\t    numAsString = numAsString.split('.');\n\t    if (numAsString.length === 1) {\n\t      num = parseInt(numAsString, 10);\n\t    } else {\n\t      /* istanbul ignore next */\n\t      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n\t    }\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      num = num - 10;\n\t    }\n\t    /* istanbul ignore next */\n\t    if (magnitude !== 0) {\n\t      // parseFloat is more reliable than pow due to rounding errors\n\t      // e.g. Number.MAX_VALUE would return Infinity if we did\n\t      // num * Math.pow(10, magnitude);\n\t      num = parseFloat(num + 'e' + magnitude);\n\t    }\n\t  }\n\t  return {num: num, length : i - originalIdx};\n\t}\n\t\n\t// move up the stack while parsing\n\t// this function moved outside of parseIndexableString for performance\n\tfunction pop(stack, metaStack) {\n\t  var obj = stack.pop();\n\t\n\t  if (metaStack.length) {\n\t    var lastMetaElement = metaStack[metaStack.length - 1];\n\t    if (obj === lastMetaElement.element) {\n\t      // popping a meta-element, e.g. an object whose value is another object\n\t      metaStack.pop();\n\t      lastMetaElement = metaStack[metaStack.length - 1];\n\t    }\n\t    var element = lastMetaElement.element;\n\t    var lastElementIndex = lastMetaElement.index;\n\t    if (Array.isArray(element)) {\n\t      element.push(obj);\n\t    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t      var key = stack.pop();\n\t      element[key] = obj;\n\t    } else {\n\t      stack.push(obj); // obj with key only\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseIndexableString(str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t\n\t  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t  while (true) {\n\t    var collationIndex = str[i++];\n\t    if (collationIndex === '\\u0000') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case '1':\n\t        stack.push(null);\n\t        break;\n\t      case '2':\n\t        stack.push(str[i] === '1');\n\t        i++;\n\t        break;\n\t      case '3':\n\t        var parsedNum = parseNumber(str, i);\n\t        stack.push(parsedNum.num);\n\t        i += parsedNum.length;\n\t        break;\n\t      case '4':\n\t        var parsedStr = '';\n\t        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t        while (true) {\n\t          var ch = str[i];\n\t          if (ch === '\\u0000') {\n\t            break;\n\t          }\n\t          parsedStr += ch;\n\t          i++;\n\t        }\n\t        // perform the reverse of the order-preserving replacement\n\t        // algorithm (see above)\n\t        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n\t          .replace(/\\u0001\\u0002/g, '\\u0001')\n\t          .replace(/\\u0002\\u0002/g, '\\u0002');\n\t        stack.push(parsedStr);\n\t        break;\n\t      case '5':\n\t        var arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '6':\n\t        var objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      /* istanbul ignore next */\n\t      default:\n\t        throw new Error(\n\t          'bad collationIndex or unexpectedly reached end of input: ' +\n\t            collationIndex);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrayCollate(a, b) {\n\t  var len = Math.min(a.length, b.length);\n\t  for (var i = 0; i < len; i++) {\n\t    var sort = collate(a[i], b[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t  }\n\t  return (a.length === b.length) ? 0 :\n\t    (a.length > b.length) ? 1 : -1;\n\t}\n\tfunction stringCollate(a, b) {\n\t  // See: https://github.com/daleharvey/pouchdb/issues/40\n\t  // This is incompatible with the CouchDB implementation, but its the\n\t  // best we can do for now\n\t  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n\t}\n\tfunction objectCollate(a, b) {\n\t  var ak = Object.keys(a), bk = Object.keys(b);\n\t  var len = Math.min(ak.length, bk.length);\n\t  for (var i = 0; i < len; i++) {\n\t    // First sort the keys\n\t    var sort = collate(ak[i], bk[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t    // if the keys are equal sort the values\n\t    sort = collate(a[ak[i]], b[bk[i]]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t\n\t  }\n\t  return (ak.length === bk.length) ? 0 :\n\t    (ak.length > bk.length) ? 1 : -1;\n\t}\n\t// The collation is defined by erlangs ordered terms\n\t// the atoms null, true, false come first, then numbers, strings,\n\t// arrays, then objects\n\t// null/undefined/NaN/Infinity/-Infinity are all considered null\n\tfunction collationIndex(x) {\n\t  var id = ['boolean', 'number', 'string', 'object'];\n\t  var idx = id.indexOf(typeof x);\n\t  //false if -1 otherwise true, but fast!!!!1\n\t  if (~idx) {\n\t    if (x === null) {\n\t      return 1;\n\t    }\n\t    if (Array.isArray(x)) {\n\t      return 5;\n\t    }\n\t    return idx < 3 ? (idx + 2) : (idx + 3);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (Array.isArray(x)) {\n\t    return 5;\n\t  }\n\t}\n\t\n\t// conversion:\n\t// x yyy zz...zz\n\t// x = 0 for negative, 1 for 0, 2 for positive\n\t// y = exponent (for negative numbers negated) moved so that it's >= 0\n\t// z = mantisse\n\tfunction numToIndexableString(num) {\n\t\n\t  if (num === 0) {\n\t    return '1';\n\t  }\n\t\n\t  // convert number to exponential format for easier and\n\t  // more succinct string sorting\n\t  var expFormat = num.toExponential().split(/e\\+?/);\n\t  var magnitude = parseInt(expFormat[1], 10);\n\t\n\t  var neg = num < 0;\n\t\n\t  var result = neg ? '0' : '2';\n\t\n\t  // first sort by magnitude\n\t  // it's easier if all magnitudes are positive\n\t  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n\t  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\t\n\t  result += SEP + magString;\n\t\n\t  // then sort by the factor\n\t  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\t  /* istanbul ignore next */\n\t  if (neg) { // for negative reverse ordering\n\t    factor = 10 - factor;\n\t  }\n\t\n\t  var factorStr = factor.toFixed(20);\n\t\n\t  // strip zeros from the end\n\t  factorStr = factorStr.replace(/\\.?0+$/, '');\n\t\n\t  result += SEP + factorStr;\n\t\n\t  return result;\n\t}\n\t\n\t/*\n\t * Simple task queue to sequentialize actions. Assumes\n\t * callbacks will eventually fire (once).\n\t */\n\t\n\tfunction TaskQueue$1() {\n\t  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n\t}\n\tTaskQueue$1.prototype.add = function (promiseFactory) {\n\t  this.promise = this.promise.catch(function () {\n\t    // just recover\n\t  }).then(function () {\n\t    return promiseFactory();\n\t  });\n\t  return this.promise;\n\t};\n\tTaskQueue$1.prototype.finish = function () {\n\t  return this.promise;\n\t};\n\t\n\tfunction createView(opts) {\n\t  var sourceDB = opts.db;\n\t  var viewName = opts.viewName;\n\t  var mapFun = opts.map;\n\t  var reduceFun = opts.reduce;\n\t  var temporary = opts.temporary;\n\t\n\t  // the \"undefined\" part is for backwards compatibility\n\t  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n\t    'undefined';\n\t\n\t  var cachedViews;\n\t  if (!temporary) {\n\t    // cache this to ensure we don't try to update the same view twice\n\t    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n\t    if (cachedViews[viewSignature]) {\n\t      return cachedViews[viewSignature];\n\t    }\n\t  }\n\t\n\t  var promiseForView = sourceDB.info().then(function (info) {\n\t\n\t    var depDbName = info.db_name + '-mrview-' +\n\t      (temporary ? 'temp' : stringMd5(viewSignature));\n\t\n\t    // save the view name in the source db so it can be cleaned up if necessary\n\t    // (e.g. when the _design doc is deleted, remove all associated view data)\n\t    function diffFunction(doc) {\n\t      doc.views = doc.views || {};\n\t      var fullViewName = viewName;\n\t      if (fullViewName.indexOf('/') === -1) {\n\t        fullViewName = viewName + '/' + viewName;\n\t      }\n\t      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n\t      /* istanbul ignore if */\n\t      if (depDbs[depDbName]) {\n\t        return; // no update necessary\n\t      }\n\t      depDbs[depDbName] = true;\n\t      return doc;\n\t    }\n\t    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n\t      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n\t        var db = res.db;\n\t        db.auto_compaction = true;\n\t        var view = {\n\t          name: depDbName,\n\t          db: db,\n\t          sourceDB: sourceDB,\n\t          adapter: sourceDB.adapter,\n\t          mapFun: mapFun,\n\t          reduceFun: reduceFun\n\t        };\n\t        return view.db.get('_local/lastSeq').catch(function (err) {\n\t          /* istanbul ignore if */\n\t          if (err.status !== 404) {\n\t            throw err;\n\t          }\n\t        }).then(function (lastSeqDoc) {\n\t          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\t          if (cachedViews) {\n\t            view.db.once('destroyed', function () {\n\t              delete cachedViews[viewSignature];\n\t            });\n\t          }\n\t          return view;\n\t        });\n\t      });\n\t    });\n\t  });\n\t\n\t  if (cachedViews) {\n\t    cachedViews[viewSignature] = promiseForView;\n\t  }\n\t  return promiseForView;\n\t}\n\t\n\tfunction QueryParseError(message) {\n\t  this.status = 400;\n\t  this.name = 'query_parse_error';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, QueryParseError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(QueryParseError, Error);\n\t\n\tfunction NotFoundError(message) {\n\t  this.status = 404;\n\t  this.name = 'not_found';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, NotFoundError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(NotFoundError, Error);\n\t\n\tfunction BuiltInError(message) {\n\t  this.status = 500;\n\t  this.name = 'invalid_value';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, BuiltInError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(BuiltInError, Error);\n\t\n\tfunction createBuiltInError(name) {\n\t  var message = 'builtin ' + name +\n\t    ' function requires map values to be numbers' +\n\t    ' or number arrays';\n\t  return new BuiltInError(message);\n\t}\n\t\n\tfunction sum(values) {\n\t  var result = 0;\n\t  for (var i = 0, len = values.length; i < len; i++) {\n\t    var num = values[i];\n\t    if (typeof num !== 'number') {\n\t      if (Array.isArray(num)) {\n\t        // lists of numbers are also allowed, sum them separately\n\t        result = typeof result === 'number' ? [result] : result;\n\t        for (var j = 0, jLen = num.length; j < jLen; j++) {\n\t          var jNum = num[j];\n\t          if (typeof jNum !== 'number') {\n\t            throw createBuiltInError('_sum');\n\t          } else if (typeof result[j] === 'undefined') {\n\t            result.push(jNum);\n\t          } else {\n\t            result[j] += jNum;\n\t          }\n\t        }\n\t      } else { // not array/number\n\t        throw createBuiltInError('_sum');\n\t      }\n\t    } else if (typeof result === 'number') {\n\t      result += num;\n\t    } else { // add number to array\n\t      result[0] += num;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar log$2 = guardedConsole.bind(null, 'log');\n\tvar isArray = Array.isArray;\n\tvar toJSON = JSON.parse;\n\t\n\tfunction evalFunctionWithEval(func, emit) {\n\t  return scopedEval(\n\t    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n\t    {\n\t      emit: emit,\n\t      sum: sum,\n\t      log: log$2,\n\t      isArray: isArray,\n\t      toJSON: toJSON\n\t    }\n\t  );\n\t}\n\t\n\tvar promisedCallback = function (promise, callback) {\n\t  if (callback) {\n\t    promise.then(function (res) {\n\t      process.nextTick(function () {\n\t        callback(null, res);\n\t      });\n\t    }, function (reason) {\n\t      process.nextTick(function () {\n\t        callback(reason);\n\t      });\n\t    });\n\t  }\n\t  return promise;\n\t};\n\t\n\tvar callbackify = function (fun) {\n\t  return getArguments(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    if (typeof cb === 'function') {\n\t      promisedCallback(promise, cb);\n\t    }\n\t    return promise;\n\t  });\n\t};\n\t\n\t// Promise finally util similar to Q.finally\n\tvar fin = function (promise, finalPromiseFactory) {\n\t  return promise.then(function (res) {\n\t    return finalPromiseFactory().then(function () {\n\t      return res;\n\t    });\n\t  }, function (reason) {\n\t    return finalPromiseFactory().then(function () {\n\t      throw reason;\n\t    });\n\t  });\n\t};\n\t\n\tvar sequentialize = function (queue, promiseFactory) {\n\t  return function () {\n\t    var args = arguments;\n\t    var that = this;\n\t    return queue.add(function () {\n\t      return promiseFactory.apply(that, args);\n\t    });\n\t  };\n\t};\n\t\n\t// uniq an array of strings, order not guaranteed\n\t// similar to underscore/lodash _.uniq\n\tvar uniq = function (arr) {\n\t  var map = {};\n\t\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    map['$' + arr[i]] = true;\n\t  }\n\t\n\t  var keys = Object.keys(map);\n\t  var output = new Array(keys.length);\n\t\n\t  for (i = 0, len = keys.length; i < len; i++) {\n\t    output[i] = keys[i].substring(1);\n\t  }\n\t  return output;\n\t};\n\t\n\tvar persistentQueues = {};\n\tvar tempViewQueue = new TaskQueue$1();\n\tvar CHANGES_BATCH_SIZE$1 = 50;\n\t\n\tfunction parseViewName(name) {\n\t  // can be either 'ddocname/viewname' or just 'viewname'\n\t  // (where the ddoc name is the same)\n\t  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n\t}\n\t\n\tfunction isGenOne(changes) {\n\t  // only return true if the current change is 1-\n\t  // and there are no other leafs\n\t  return changes.length === 1 && /^1-/.test(changes[0].rev);\n\t}\n\t\n\tfunction emitError(db, e) {\n\t  try {\n\t    db.emit('error', e);\n\t  } catch (err) {\n\t    guardedConsole('error',\n\t      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n\t      'You can debug this error by doing:\\n' +\n\t      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n\t      'Please double-check your map/reduce function.');\n\t    guardedConsole('error', e);\n\t  }\n\t}\n\t\n\tfunction tryCode$1(db, fun, args) {\n\t  // emit an event if there was an error thrown by a map/reduce function.\n\t  // putting try/catches in a single function also avoids deoptimizations.\n\t  try {\n\t    return {\n\t      output : fun.apply(null, args)\n\t    };\n\t  } catch (e) {\n\t    emitError(db, e);\n\t    return {error: e};\n\t  }\n\t}\n\t\n\tfunction sortByKeyThenValue(x, y) {\n\t  var keyCompare = collate(x.key, y.key);\n\t  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n\t}\n\t\n\tfunction sliceResults(results, limit, skip) {\n\t  skip = skip || 0;\n\t  if (typeof limit === 'number') {\n\t    return results.slice(skip, limit + skip);\n\t  } else if (skip > 0) {\n\t    return results.slice(skip);\n\t  }\n\t  return results;\n\t}\n\t\n\tfunction rowToDocId(row) {\n\t  var val = row.value;\n\t  // Users can explicitly specify a joined doc _id, or it\n\t  // defaults to the doc _id that emitted the key/value.\n\t  var docId = (val && typeof val === 'object' && val._id) || row.id;\n\t  return docId;\n\t}\n\t\n\tfunction readAttachmentsAsBlobOrBuffer$1(res) {\n\t  res.rows.forEach(function (row) {\n\t    var atts = row.doc && row.doc._attachments;\n\t    if (!atts) {\n\t      return;\n\t    }\n\t    Object.keys(atts).forEach(function (filename) {\n\t      var att = atts[filename];\n\t      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n\t    });\n\t  });\n\t}\n\t\n\tfunction postprocessAttachments(opts) {\n\t  return function (res) {\n\t    if (opts.include_docs && opts.attachments && opts.binary) {\n\t      readAttachmentsAsBlobOrBuffer$1(res);\n\t    }\n\t    return res;\n\t  };\n\t}\n\t\n\tvar builtInReduce = {\n\t  _sum: function (keys, values) {\n\t    return sum(values);\n\t  },\n\t\n\t  _count: function (keys, values) {\n\t    return values.length;\n\t  },\n\t\n\t  _stats: function (keys, values) {\n\t    // no need to implement rereduce=true, because Pouch\n\t    // will never call it\n\t    function sumsqr(values) {\n\t      var _sumsqr = 0;\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        var num = values[i];\n\t        _sumsqr += (num * num);\n\t      }\n\t      return _sumsqr;\n\t    }\n\t    return {\n\t      sum     : sum(values),\n\t      min     : Math.min.apply(null, values),\n\t      max     : Math.max.apply(null, values),\n\t      count   : values.length,\n\t      sumsqr : sumsqr(values)\n\t    };\n\t  }\n\t};\n\t\n\tfunction addHttpParam(paramName, opts, params, asJson) {\n\t  // add an http param from opts to params, optionally json-encoded\n\t  var val = opts[paramName];\n\t  if (typeof val !== 'undefined') {\n\t    if (asJson) {\n\t      val = encodeURIComponent(JSON.stringify(val));\n\t    }\n\t    params.push(paramName + '=' + val);\n\t  }\n\t}\n\t\n\tfunction coerceInteger(integerCandidate) {\n\t  if (typeof integerCandidate !== 'undefined') {\n\t    var asNumber = Number(integerCandidate);\n\t    // prevents e.g. '1foo' or '1.1' being coerced to 1\n\t    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n\t      return asNumber;\n\t    } else {\n\t      return integerCandidate;\n\t    }\n\t  }\n\t}\n\t\n\tfunction coerceOptions(opts) {\n\t  opts.group_level = coerceInteger(opts.group_level);\n\t  opts.limit = coerceInteger(opts.limit);\n\t  opts.skip = coerceInteger(opts.skip);\n\t  return opts;\n\t}\n\t\n\tfunction checkPositiveInteger(number) {\n\t  if (number) {\n\t    if (typeof number !== 'number') {\n\t      return  new QueryParseError('Invalid value for integer: \"' +\n\t      number + '\"');\n\t    }\n\t    if (number < 0) {\n\t      return new QueryParseError('Invalid value for positive integer: ' +\n\t        '\"' + number + '\"');\n\t    }\n\t  }\n\t}\n\t\n\tfunction checkQueryParseError(options, fun) {\n\t  var startkeyName = options.descending ? 'endkey' : 'startkey';\n\t  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\t\n\t  if (typeof options[startkeyName] !== 'undefined' &&\n\t    typeof options[endkeyName] !== 'undefined' &&\n\t    collate(options[startkeyName], options[endkeyName]) > 0) {\n\t    throw new QueryParseError('No rows can match your key range, ' +\n\t    'reverse your start_key and end_key or set {descending : true}');\n\t  } else if (fun.reduce && options.reduce !== false) {\n\t    if (options.include_docs) {\n\t      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n\t    } else if (options.keys && options.keys.length > 1 &&\n\t        !options.group && !options.group_level) {\n\t      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n\t      '{group: true}');\n\t    }\n\t  }\n\t  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n\t    var error = checkPositiveInteger(options[optionName]);\n\t    if (error) {\n\t      throw error;\n\t    }\n\t  });\n\t}\n\t\n\tfunction httpQuery(db, fun, opts) {\n\t  // List of parameters to add to the PUT request\n\t  var params = [];\n\t  var body;\n\t  var method = 'GET';\n\t\n\t  // If opts.reduce exists and is defined, then add it to the list\n\t  // of parameters.\n\t  // If reduce=false then the results are that of only the map function\n\t  // not the final result of map and reduce.\n\t  addHttpParam('reduce', opts, params);\n\t  addHttpParam('include_docs', opts, params);\n\t  addHttpParam('attachments', opts, params);\n\t  addHttpParam('limit', opts, params);\n\t  addHttpParam('descending', opts, params);\n\t  addHttpParam('group', opts, params);\n\t  addHttpParam('group_level', opts, params);\n\t  addHttpParam('skip', opts, params);\n\t  addHttpParam('stale', opts, params);\n\t  addHttpParam('conflicts', opts, params);\n\t  addHttpParam('startkey', opts, params, true);\n\t  addHttpParam('start_key', opts, params, true);\n\t  addHttpParam('endkey', opts, params, true);\n\t  addHttpParam('end_key', opts, params, true);\n\t  addHttpParam('inclusive_end', opts, params);\n\t  addHttpParam('key', opts, params, true);\n\t\n\t  // Format the list of parameters into a valid URI query string\n\t  params = params.join('&');\n\t  params = params === '' ? '' : '?' + params;\n\t\n\t  // If keys are supplied, issue a POST to circumvent GET query string limits\n\t  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var MAX_URL_LENGTH = 2000;\n\t    // according to http://stackoverflow.com/a/417184/680742,\n\t    // the de facto URL length limit is 2000 characters\n\t\n\t    var keysAsString =\n\t      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n\t    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n\t      // If the keys are short enough, do a GET. we do this to work around\n\t      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n\t      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n\t    } else {\n\t      method = 'POST';\n\t      if (typeof fun === 'string') {\n\t        body = {keys: opts.keys};\n\t      } else { // fun is {map : mapfun}, so append to this\n\t        fun.keys = opts.keys;\n\t      }\n\t    }\n\t  }\n\t\n\t  // We are referencing a query defined in the design doc\n\t  if (typeof fun === 'string') {\n\t    var parts = parseViewName(fun);\n\t    return db.request({\n\t      method: method,\n\t      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n\t      body: body\n\t    }).then(postprocessAttachments(opts));\n\t  }\n\t\n\t  // We are using a temporary view, terrible for performance, good for testing\n\t  body = body || {};\n\t  Object.keys(fun).forEach(function (key) {\n\t    if (Array.isArray(fun[key])) {\n\t      body[key] = fun[key];\n\t    } else {\n\t      body[key] = fun[key].toString();\n\t    }\n\t  });\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_temp_view' + params,\n\t    body: body\n\t  }).then(postprocessAttachments(opts));\n\t}\n\t\n\t// custom adapters can define their own api._query\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customQuery(db, fun, opts) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    db._query(fun, opts, function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\t// custom adapters can define their own api._viewCleanup\n\t// and override the default behavior\n\t/* istanbul ignore next */\n\tfunction customViewCleanup(db) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    db._viewCleanup(function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      }\n\t      resolve(res);\n\t    });\n\t  });\n\t}\n\t\n\tfunction defaultsTo(value) {\n\t  return function (reason) {\n\t    /* istanbul ignore else */\n\t    if (reason.status === 404) {\n\t      return value;\n\t    } else {\n\t      throw reason;\n\t    }\n\t  };\n\t}\n\t\n\t// returns a promise for a list of docs to update, based on the input docId.\n\t// the order doesn't matter, because post-3.2.0, bulkDocs\n\t// is an atomic operation in all three adapters.\n\tfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n\t  var metaDocId = '_local/doc_' + docId;\n\t  var defaultMetaDoc = {_id: metaDocId, keys: []};\n\t  var docData = docIdsToChangesAndEmits[docId];\n\t  var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n\t  var changes = docData.changes;\n\t\n\t  function getMetaDoc() {\n\t    if (isGenOne(changes)) {\n\t      // generation 1, so we can safely assume initial state\n\t      // for performance reasons (avoids unnecessary GETs)\n\t      return PouchPromise.resolve(defaultMetaDoc);\n\t    }\n\t    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n\t  }\n\t\n\t  function getKeyValueDocs(metaDoc) {\n\t    if (!metaDoc.keys.length) {\n\t      // no keys, no need for a lookup\n\t      return PouchPromise.resolve({rows: []});\n\t    }\n\t    return view.db.allDocs({\n\t      keys: metaDoc.keys,\n\t      include_docs: true\n\t    });\n\t  }\n\t\n\t  function processKvDocs(metaDoc, kvDocsRes) {\n\t    var kvDocs = [];\n\t    var oldKeysMap = {};\n\t\n\t    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n\t      var row = kvDocsRes.rows[i];\n\t      var doc = row.doc;\n\t      if (!doc) { // deleted\n\t        continue;\n\t      }\n\t      kvDocs.push(doc);\n\t      oldKeysMap[doc._id] = true;\n\t      doc._deleted = !indexableKeysToKeyValues[doc._id];\n\t      if (!doc._deleted) {\n\t        var keyValue = indexableKeysToKeyValues[doc._id];\n\t        if ('value' in keyValue) {\n\t          doc.value = keyValue.value;\n\t        }\n\t      }\n\t    }\n\t\n\t    var newKeys = Object.keys(indexableKeysToKeyValues);\n\t    newKeys.forEach(function (key) {\n\t      if (!oldKeysMap[key]) {\n\t        // new doc\n\t        var kvDoc = {\n\t          _id: key\n\t        };\n\t        var keyValue = indexableKeysToKeyValues[key];\n\t        if ('value' in keyValue) {\n\t          kvDoc.value = keyValue.value;\n\t        }\n\t        kvDocs.push(kvDoc);\n\t      }\n\t    });\n\t    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n\t    kvDocs.push(metaDoc);\n\t\n\t    return kvDocs;\n\t  }\n\t\n\t  return getMetaDoc().then(function (metaDoc) {\n\t    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n\t      return processKvDocs(metaDoc, kvDocsRes);\n\t    });\n\t  });\n\t}\n\t\n\t// updates all emitted key/value docs and metaDocs in the mrview database\n\t// for the given batch of documents from the source database\n\tfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n\t  var seqDocId = '_local/lastSeq';\n\t  return view.db.get(seqDocId)\n\t  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n\t  .then(function (lastSeqDoc) {\n\t    var docIds = Object.keys(docIdsToChangesAndEmits);\n\t    return PouchPromise.all(docIds.map(function (docId) {\n\t      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n\t    })).then(function (listOfDocsToPersist) {\n\t      var docsToPersist = flatten(listOfDocsToPersist);\n\t      lastSeqDoc.seq = seq;\n\t      docsToPersist.push(lastSeqDoc);\n\t      // write all docs in a single operation, update the seq once\n\t      return view.db.bulkDocs({docs : docsToPersist});\n\t    });\n\t  });\n\t}\n\t\n\tfunction getQueue(view) {\n\t  var viewName = typeof view === 'string' ? view : view.name;\n\t  var queue = persistentQueues[viewName];\n\t  if (!queue) {\n\t    queue = persistentQueues[viewName] = new TaskQueue$1();\n\t  }\n\t  return queue;\n\t}\n\t\n\tfunction updateView(view) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return updateViewInQueue(view);\n\t  })();\n\t}\n\t\n\tfunction updateViewInQueue(view) {\n\t  // bind the emit function once\n\t  var mapResults;\n\t  var doc;\n\t\n\t  function emit(key, value) {\n\t    var output = {id: doc._id, key: normalizeKey(key)};\n\t    // Don't explicitly store the value unless it's defined and non-null.\n\t    // This saves on storage space, because often people don't use it.\n\t    if (typeof value !== 'undefined' && value !== null) {\n\t      output.value = normalizeKey(value);\n\t    }\n\t    mapResults.push(output);\n\t  }\n\t\n\t  var mapFun;\n\t  // for temp_views one can use emit(doc, emit), see #38\n\t  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n\t    var origMap = view.mapFun;\n\t    mapFun = function (doc) {\n\t      return origMap(doc, emit);\n\t    };\n\t  } else {\n\t    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n\t  }\n\t\n\t  var currentSeq = view.seq || 0;\n\t\n\t  function processChange(docIdsToChangesAndEmits, seq) {\n\t    return function () {\n\t      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n\t    };\n\t  }\n\t\n\t  var queue = new TaskQueue$1();\n\t  // TODO(neojski): https://github.com/daleharvey/pouchdb/issues/1521\n\t\n\t  return new PouchPromise(function (resolve, reject) {\n\t\n\t    function complete() {\n\t      queue.finish().then(function () {\n\t        view.seq = currentSeq;\n\t        resolve();\n\t      });\n\t    }\n\t\n\t    function processNextBatch() {\n\t      view.sourceDB.changes({\n\t        conflicts: true,\n\t        include_docs: true,\n\t        style: 'all_docs',\n\t        since: currentSeq,\n\t        limit: CHANGES_BATCH_SIZE$1\n\t      }).on('complete', function (response) {\n\t        var results = response.results;\n\t        if (!results.length) {\n\t          return complete();\n\t        }\n\t        var docIdsToChangesAndEmits = {};\n\t        for (var i = 0, l = results.length; i < l; i++) {\n\t          var change = results[i];\n\t          if (change.doc._id[0] !== '_') {\n\t            mapResults = [];\n\t            doc = change.doc;\n\t\n\t            if (!doc._deleted) {\n\t              tryCode$1(view.sourceDB, mapFun, [doc]);\n\t            }\n\t            mapResults.sort(sortByKeyThenValue);\n\t\n\t            var indexableKeysToKeyValues = {};\n\t            var lastKey;\n\t            for (var j = 0, jl = mapResults.length; j < jl; j++) {\n\t              var obj = mapResults[j];\n\t              var complexKey = [obj.key, obj.id];\n\t              if (collate(obj.key, lastKey) === 0) {\n\t                complexKey.push(j); // dup key+id, so make it unique\n\t              }\n\t              var indexableKey = toIndexableString(complexKey);\n\t              indexableKeysToKeyValues[indexableKey] = obj;\n\t              lastKey = obj.key;\n\t            }\n\t            docIdsToChangesAndEmits[change.doc._id] = {\n\t              indexableKeysToKeyValues: indexableKeysToKeyValues,\n\t              changes: change.changes\n\t            };\n\t          }\n\t          currentSeq = change.seq;\n\t        }\n\t        queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\t        if (results.length < CHANGES_BATCH_SIZE$1) {\n\t          return complete();\n\t        }\n\t        return processNextBatch();\n\t      }).on('error', onError);\n\t      /* istanbul ignore next */\n\t      function onError(err) {\n\t        reject(err);\n\t      }\n\t    }\n\t\n\t    processNextBatch();\n\t  });\n\t}\n\t\n\tfunction reduceView(view, results, options) {\n\t  if (options.group_level === 0) {\n\t    delete options.group_level;\n\t  }\n\t\n\t  var shouldGroup = options.group || options.group_level;\n\t\n\t  var reduceFun;\n\t  if (builtInReduce[view.reduceFun]) {\n\t    reduceFun = builtInReduce[view.reduceFun];\n\t  } else {\n\t    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n\t  }\n\t\n\t  var groups = [];\n\t  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n\t    options.group_level;\n\t  results.forEach(function (e) {\n\t    var last = groups[groups.length - 1];\n\t    var groupKey = shouldGroup ? e.key : null;\n\t\n\t    // only set group_level for array keys\n\t    if (shouldGroup && Array.isArray(groupKey)) {\n\t      groupKey = groupKey.slice(0, lvl);\n\t    }\n\t\n\t    if (last && collate(last.groupKey, groupKey) === 0) {\n\t      last.keys.push([e.key, e.id]);\n\t      last.values.push(e.value);\n\t      return;\n\t    }\n\t    groups.push({\n\t      keys: [[e.key, e.id]],\n\t      values: [e.value],\n\t      groupKey: groupKey\n\t    });\n\t  });\n\t  results = [];\n\t  for (var i = 0, len = groups.length; i < len; i++) {\n\t    var e = groups[i];\n\t    var reduceTry = tryCode$1(view.sourceDB, reduceFun,\n\t      [e.keys, e.values, false]);\n\t    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n\t      // CouchDB returns an error if a built-in errors out\n\t      throw reduceTry.error;\n\t    }\n\t    results.push({\n\t      // CouchDB just sets the value to null if a non-built-in errors out\n\t      value: reduceTry.error ? null : reduceTry.output,\n\t      key: e.groupKey\n\t    });\n\t  }\n\t  // no total_rows/offset when reducing\n\t  return {rows: sliceResults(results, options.limit, options.skip)};\n\t}\n\t\n\tfunction queryView(view, opts) {\n\t  return sequentialize(getQueue(view), function () {\n\t    return queryViewInQueue(view, opts);\n\t  })();\n\t}\n\t\n\tfunction queryViewInQueue(view, opts) {\n\t  var totalRows;\n\t  var shouldReduce = view.reduceFun && opts.reduce !== false;\n\t  var skip = opts.skip || 0;\n\t  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n\t    // equivalent query\n\t    opts.limit = 0;\n\t    delete opts.keys;\n\t  }\n\t\n\t  function fetchFromView(viewOpts) {\n\t    viewOpts.include_docs = true;\n\t    return view.db.allDocs(viewOpts).then(function (res) {\n\t      totalRows = res.total_rows;\n\t      return res.rows.map(function (result) {\n\t\n\t        // implicit migration - in older versions of PouchDB,\n\t        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n\t        // this is tested in a migration test\n\t        /* istanbul ignore next */\n\t        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n\t            result.doc.value !== null) {\n\t          var keys = Object.keys(result.doc.value).sort();\n\t          // this detection method is not perfect, but it's unlikely the user\n\t          // emitted a value which was an object with these 3 exact keys\n\t          var expectedKeys = ['id', 'key', 'value'];\n\t          if (!(keys < expectedKeys || keys > expectedKeys)) {\n\t            return result.doc.value;\n\t          }\n\t        }\n\t\n\t        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n\t        return {\n\t          key: parsedKeyAndDocId[0],\n\t          id: parsedKeyAndDocId[1],\n\t          value: ('value' in result.doc ? result.doc.value : null)\n\t        };\n\t      });\n\t    });\n\t  }\n\t\n\t  function onMapResultsReady(rows) {\n\t    var finalResults;\n\t    if (shouldReduce) {\n\t      finalResults = reduceView(view, rows, opts);\n\t    } else {\n\t      finalResults = {\n\t        total_rows: totalRows,\n\t        offset: skip,\n\t        rows: rows\n\t      };\n\t    }\n\t    if (opts.include_docs) {\n\t      var docIds = uniq(rows.map(rowToDocId));\n\t\n\t      return view.sourceDB.allDocs({\n\t        keys: docIds,\n\t        include_docs: true,\n\t        conflicts: opts.conflicts,\n\t        attachments: opts.attachments,\n\t        binary: opts.binary\n\t      }).then(function (allDocsRes) {\n\t        var docIdsToDocs = {};\n\t        allDocsRes.rows.forEach(function (row) {\n\t          if (row.doc) {\n\t            docIdsToDocs['$' + row.id] = row.doc;\n\t          }\n\t        });\n\t        rows.forEach(function (row) {\n\t          var docId = rowToDocId(row);\n\t          var doc = docIdsToDocs['$' + docId];\n\t          if (doc) {\n\t            row.doc = doc;\n\t          }\n\t        });\n\t        return finalResults;\n\t      });\n\t    } else {\n\t      return finalResults;\n\t    }\n\t  }\n\t\n\t  if (typeof opts.keys !== 'undefined') {\n\t    var keys = opts.keys;\n\t    var fetchPromises = keys.map(function (key) {\n\t      var viewOpts = {\n\t        startkey : toIndexableString([key]),\n\t        endkey   : toIndexableString([key, {}])\n\t      };\n\t      return fetchFromView(viewOpts);\n\t    });\n\t    return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n\t  } else { // normal query, no 'keys'\n\t    var viewOpts = {\n\t      descending : opts.descending\n\t    };\n\t    if (opts.start_key) {\n\t        opts.startkey = opts.start_key;\n\t    }\n\t    if (opts.end_key) {\n\t        opts.endkey = opts.end_key;\n\t    }\n\t    if (typeof opts.startkey !== 'undefined') {\n\t      viewOpts.startkey = opts.descending ?\n\t        toIndexableString([opts.startkey, {}]) :\n\t        toIndexableString([opts.startkey]);\n\t    }\n\t    if (typeof opts.endkey !== 'undefined') {\n\t      var inclusiveEnd = opts.inclusive_end !== false;\n\t      if (opts.descending) {\n\t        inclusiveEnd = !inclusiveEnd;\n\t      }\n\t\n\t      viewOpts.endkey = toIndexableString(\n\t        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n\t    }\n\t    if (typeof opts.key !== 'undefined') {\n\t      var keyStart = toIndexableString([opts.key]);\n\t      var keyEnd = toIndexableString([opts.key, {}]);\n\t      if (viewOpts.descending) {\n\t        viewOpts.endkey = keyStart;\n\t        viewOpts.startkey = keyEnd;\n\t      } else {\n\t        viewOpts.startkey = keyStart;\n\t        viewOpts.endkey = keyEnd;\n\t      }\n\t    }\n\t    if (!shouldReduce) {\n\t      if (typeof opts.limit === 'number') {\n\t        viewOpts.limit = opts.limit;\n\t      }\n\t      viewOpts.skip = skip;\n\t    }\n\t    return fetchFromView(viewOpts).then(onMapResultsReady);\n\t  }\n\t}\n\t\n\tfunction httpViewCleanup(db) {\n\t  return db.request({\n\t    method: 'POST',\n\t    url: '_view_cleanup'\n\t  });\n\t}\n\t\n\tfunction localViewCleanup(db) {\n\t  return db.get('_local/mrviews').then(function (metaDoc) {\n\t    var docsToViews = {};\n\t    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n\t      var parts = parseViewName(fullViewName);\n\t      var designDocName = '_design/' + parts[0];\n\t      var viewName = parts[1];\n\t      docsToViews[designDocName] = docsToViews[designDocName] || {};\n\t      docsToViews[designDocName][viewName] = true;\n\t    });\n\t    var opts = {\n\t      keys : Object.keys(docsToViews),\n\t      include_docs : true\n\t    };\n\t    return db.allDocs(opts).then(function (res) {\n\t      var viewsToStatus = {};\n\t      res.rows.forEach(function (row) {\n\t        var ddocName = row.key.substring(8);\n\t        Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n\t          var fullViewName = ddocName + '/' + viewName;\n\t          /* istanbul ignore if */\n\t          if (!metaDoc.views[fullViewName]) {\n\t            // new format, without slashes, to support PouchDB 2.2.0\n\t            // migration test in pouchdb's browser.migration.js verifies this\n\t            fullViewName = viewName;\n\t          }\n\t          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n\t          // design doc deleted, or view function nonexistent\n\t          var statusIsGood = row.doc && row.doc.views &&\n\t            row.doc.views[viewName];\n\t          viewDBNames.forEach(function (viewDBName) {\n\t            viewsToStatus[viewDBName] =\n\t              viewsToStatus[viewDBName] || statusIsGood;\n\t          });\n\t        });\n\t      });\n\t      var dbsToDelete = Object.keys(viewsToStatus).filter(\n\t        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n\t      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n\t        return sequentialize(getQueue(viewDBName), function () {\n\t          return new db.constructor(viewDBName, db.__opts).destroy();\n\t        })();\n\t      });\n\t      return PouchPromise.all(destroyPromises).then(function () {\n\t        return {ok: true};\n\t      });\n\t    });\n\t  }, defaultsTo({ok: true}));\n\t}\n\t\n\tvar viewCleanup = callbackify(function () {\n\t  var db = this;\n\t  if (db.type() === 'http') {\n\t    return httpViewCleanup(db);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (typeof db._viewCleanup === 'function') {\n\t    return customViewCleanup(db);\n\t  }\n\t  return localViewCleanup(db);\n\t});\n\t\n\tfunction queryPromised(db, fun, opts) {\n\t  if (db.type() === 'http') {\n\t    return httpQuery(db, fun, opts);\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  if (typeof db._query === 'function') {\n\t    return customQuery(db, fun, opts);\n\t  }\n\t\n\t  if (typeof fun !== 'string') {\n\t    // temp_view\n\t    checkQueryParseError(opts, fun);\n\t\n\t    var createViewOpts = {\n\t      db : db,\n\t      viewName : 'temp_view/temp_view',\n\t      map : fun.map,\n\t      reduce : fun.reduce,\n\t      temporary : true\n\t    };\n\t    tempViewQueue.add(function () {\n\t      return createView(createViewOpts).then(function (view) {\n\t        function cleanup() {\n\t          return view.db.destroy();\n\t        }\n\t        return fin(updateView(view).then(function () {\n\t          return queryView(view, opts);\n\t        }), cleanup);\n\t      });\n\t    });\n\t    return tempViewQueue.finish();\n\t  } else {\n\t    // persistent view\n\t    var fullViewName = fun;\n\t    var parts = parseViewName(fullViewName);\n\t    var designDocName = parts[0];\n\t    var viewName = parts[1];\n\t    return db.get('_design/' + designDocName).then(function (doc) {\n\t      var fun = doc.views && doc.views[viewName];\n\t\n\t      if (!fun || typeof fun.map !== 'string') {\n\t        throw new NotFoundError('ddoc ' + designDocName +\n\t        ' has no view named ' + viewName);\n\t      }\n\t      checkQueryParseError(opts, fun);\n\t\n\t      var createViewOpts = {\n\t        db : db,\n\t        viewName : fullViewName,\n\t        map : fun.map,\n\t        reduce : fun.reduce\n\t      };\n\t      return createView(createViewOpts).then(function (view) {\n\t        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n\t          if (opts.stale === 'update_after') {\n\t            process.nextTick(function () {\n\t              updateView(view);\n\t            });\n\t          }\n\t          return queryView(view, opts);\n\t        } else { // stale not ok\n\t          return updateView(view).then(function () {\n\t            return queryView(view, opts);\n\t          });\n\t        }\n\t      });\n\t    });\n\t  }\n\t}\n\t\n\tvar query = function (fun, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts = opts ? coerceOptions(opts) : {};\n\t\n\t  if (typeof fun === 'function') {\n\t    fun = {map : fun};\n\t  }\n\t\n\t  var db = this;\n\t  var promise = PouchPromise.resolve().then(function () {\n\t    return queryPromised(db, fun, opts);\n\t  });\n\t  promisedCallback(promise, callback);\n\t  return promise;\n\t};\n\t\n\t\n\tvar mapreduce = {\n\t  query: query,\n\t  viewCleanup: viewCleanup\n\t};\n\t\n\tfunction isGenOne$1(rev) {\n\t  return /^1-/.test(rev);\n\t}\n\t\n\tfunction fileHasChanged(localDoc, remoteDoc, filename) {\n\t  return !localDoc._attachments ||\n\t         !localDoc._attachments[filename] ||\n\t         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n\t}\n\t\n\tfunction getDocAttachments(db, doc) {\n\t  var filenames = Object.keys(doc._attachments);\n\t  return PouchPromise.all(filenames.map(function (filename) {\n\t    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n\t  }));\n\t}\n\t\n\tfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n\t  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n\t  var filenames = Object.keys(doc._attachments);\n\t\n\t  if (!doCheckForLocalAttachments) {\n\t    return getDocAttachments(src, doc);\n\t  }\n\t\n\t  return target.get(doc._id).then(function (localDoc) {\n\t    return PouchPromise.all(filenames.map(function (filename) {\n\t      if (fileHasChanged(localDoc, doc, filename)) {\n\t        return src.getAttachment(doc._id, filename);\n\t      }\n\t\n\t      return target.getAttachment(localDoc._id, filename);\n\t    }));\n\t  }).catch(function (error) {\n\t    /* istanbul ignore if */\n\t    if (error.status !== 404) {\n\t      throw error;\n\t    }\n\t\n\t    return getDocAttachments(src, doc);\n\t  });\n\t}\n\t\n\tfunction createBulkGetOpts(diffs) {\n\t  var requests = [];\n\t  Object.keys(diffs).forEach(function (id) {\n\t    var missingRevs = diffs[id].missing;\n\t    missingRevs.forEach(function (missingRev) {\n\t      requests.push({\n\t        id: id,\n\t        rev: missingRev\n\t      });\n\t    });\n\t  });\n\t\n\t  return {\n\t    docs: requests,\n\t    revs: true\n\t  };\n\t}\n\t\n\t//\n\t// Fetch all the documents from the src as described in the \"diffs\",\n\t// which is a mapping of docs IDs to revisions. If the state ever\n\t// changes to \"cancelled\", then the returned promise will be rejected.\n\t// Else it will be resolved with a list of fetched documents.\n\t//\n\tfunction getDocs(src, target, diffs, state) {\n\t  diffs = clone(diffs); // we do not need to modify this\n\t\n\t  var resultDocs = [],\n\t      ok = true;\n\t\n\t  function getAllDocs() {\n\t\n\t    var bulkGetOpts = createBulkGetOpts(diffs);\n\t\n\t    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n\t      return;\n\t    }\n\t\n\t    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n\t      /* istanbul ignore if */\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n\t        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n\t          var remoteDoc = doc.ok;\n\t\n\t          if (doc.error) {\n\t            // when AUTO_COMPACTION is set, docs can be returned which look\n\t            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n\t            ok = false;\n\t          }\n\t\n\t          if (!remoteDoc || !remoteDoc._attachments) {\n\t            return remoteDoc;\n\t          }\n\t\n\t          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n\t            var filenames = Object.keys(remoteDoc._attachments);\n\t            attachments.forEach(function (attachment, i) {\n\t              var att = remoteDoc._attachments[filenames[i]];\n\t              delete att.stub;\n\t              delete att.length;\n\t              att.data = attachment;\n\t            });\n\t\n\t            return remoteDoc;\n\t          });\n\t        }));\n\t      }))\n\t\n\t      .then(function (results) {\n\t        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n\t      });\n\t    });\n\t  }\n\t\n\t  function hasAttachments(doc) {\n\t    return doc._attachments && Object.keys(doc._attachments).length > 0;\n\t  }\n\t\n\t  function fetchRevisionOneDocs(ids) {\n\t    // Optimization: fetch gen-1 docs and attachments in\n\t    // a single request using _all_docs\n\t    return src.allDocs({\n\t      keys: ids,\n\t      include_docs: true\n\t    }).then(function (res) {\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      res.rows.forEach(function (row) {\n\t        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n\t            hasAttachments(row.doc)) {\n\t          // if any of these conditions apply, we need to fetch using get()\n\t          return;\n\t        }\n\t\n\t        // the doc we got back from allDocs() is sufficient\n\t        resultDocs.push(row.doc);\n\t        delete diffs[row.id];\n\t      });\n\t    });\n\t  }\n\t\n\t  function getRevisionOneDocs() {\n\t    // filter out the generation 1 docs and get them\n\t    // leaving the non-generation one docs to be got otherwise\n\t    var ids = Object.keys(diffs).filter(function (id) {\n\t      var missing = diffs[id].missing;\n\t      return missing.length === 1 && isGenOne$1(missing[0]);\n\t    });\n\t    if (ids.length > 0) {\n\t      return fetchRevisionOneDocs(ids);\n\t    }\n\t  }\n\t\n\t  function returnResult() {\n\t    return { ok:ok, docs:resultDocs };\n\t  }\n\t\n\t  return PouchPromise.resolve()\n\t    .then(getRevisionOneDocs)\n\t    .then(getAllDocs)\n\t    .then(returnResult);\n\t}\n\t\n\tvar CHECKPOINT_VERSION = 1;\n\tvar REPLICATOR = \"pouchdb\";\n\t// This is an arbitrary number to limit the\n\t// amount of replication history we save in the checkpoint.\n\t// If we save too much, the checkpoing docs will become very big,\n\t// if we save fewer, we'll run a greater risk of having to\n\t// read all the changes from 0 when checkpoint PUTs fail\n\t// CouchDB 2.0 has a more involved history pruning,\n\t// but let's go for the simple version for now.\n\tvar CHECKPOINT_HISTORY_SIZE = 5;\n\tvar LOWEST_SEQ = 0;\n\t\n\tfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n\t  return db.get(id).catch(function (err) {\n\t    if (err.status === 404) {\n\t      if (db.type() === 'http') {\n\t        explainError(\n\t          404, 'PouchDB is just checking if a remote checkpoint exists.'\n\t        );\n\t      }\n\t      return {\n\t        session_id: session,\n\t        _id: id,\n\t        history: [],\n\t        replicator: REPLICATOR,\n\t        version: CHECKPOINT_VERSION\n\t      };\n\t    }\n\t    throw err;\n\t  }).then(function (doc) {\n\t    if (returnValue.cancelled) {\n\t      return;\n\t    }\n\t\n\t    // if the checkpoint has not changed, do not update\n\t    if (doc.last_seq === checkpoint) {\n\t      return;\n\t    }\n\t\n\t    // Filter out current entry for this replication\n\t    doc.history = (doc.history || []).filter(function (item) {\n\t      return item.session_id !== session;\n\t    });\n\t\n\t    // Add the latest checkpoint to history\n\t    doc.history.unshift({\n\t      last_seq: checkpoint,\n\t      session_id: session\n\t    });\n\t\n\t    // Just take the last pieces in history, to\n\t    // avoid really big checkpoint docs.\n\t    // see comment on history size above\n\t    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\t\n\t    doc.version = CHECKPOINT_VERSION;\n\t    doc.replicator = REPLICATOR;\n\t\n\t    doc.session_id = session;\n\t    doc.last_seq = checkpoint;\n\t\n\t    return db.put(doc).catch(function (err) {\n\t      if (err.status === 409) {\n\t        // retry; someone is trying to write a checkpoint simultaneously\n\t        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n\t      }\n\t      throw err;\n\t    });\n\t  });\n\t}\n\t\n\tfunction Checkpointer(src, target, id, returnValue) {\n\t  this.src = src;\n\t  this.target = target;\n\t  this.id = id;\n\t  this.returnValue = returnValue;\n\t}\n\t\n\tCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n\t  var self = this;\n\t  return this.updateTarget(checkpoint, session).then(function () {\n\t    return self.updateSource(checkpoint, session);\n\t  });\n\t};\n\t\n\tCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n\t  return updateCheckpoint(this.target, this.id, checkpoint,\n\t    session, this.returnValue);\n\t};\n\t\n\tCheckpointer.prototype.updateSource = function (checkpoint, session) {\n\t  var self = this;\n\t  if (this.readOnlySource) {\n\t    return PouchPromise.resolve(true);\n\t  }\n\t  return updateCheckpoint(this.src, this.id, checkpoint,\n\t    session, this.returnValue)\n\t    .catch(function (err) {\n\t      if (isForbiddenError(err)) {\n\t        self.readOnlySource = true;\n\t        return true;\n\t      }\n\t      throw err;\n\t    });\n\t};\n\t\n\tvar comparisons = {\n\t  \"undefined\": function (targetDoc, sourceDoc) {\n\t    // This is the previous comparison function\n\t    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n\t      return sourceDoc.last_seq;\n\t    }\n\t    /* istanbul ignore next */\n\t    return 0;\n\t  },\n\t  \"1\": function (targetDoc, sourceDoc) {\n\t    // This is the comparison function ported from CouchDB\n\t    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n\t  }\n\t};\n\t\n\tCheckpointer.prototype.getCheckpoint = function () {\n\t  var self = this;\n\t  return self.target.get(self.id).then(function (targetDoc) {\n\t    if (self.readOnlySource) {\n\t      return PouchPromise.resolve(targetDoc.last_seq);\n\t    }\n\t\n\t    return self.src.get(self.id).then(function (sourceDoc) {\n\t      // Since we can't migrate an old version doc to a new one\n\t      // (no session id), we just go with the lowest seq in this case\n\t      /* istanbul ignore if */\n\t      if (targetDoc.version !== sourceDoc.version) {\n\t        return LOWEST_SEQ;\n\t      }\n\t\n\t      var version;\n\t      if (targetDoc.version) {\n\t        version = targetDoc.version.toString();\n\t      } else {\n\t        version = \"undefined\";\n\t      }\n\t\n\t      if (version in comparisons) {\n\t        return comparisons[version](targetDoc, sourceDoc);\n\t      }\n\t      /* istanbul ignore next */\n\t      return LOWEST_SEQ;\n\t    }, function (err) {\n\t      if (err.status === 404 && targetDoc.last_seq) {\n\t        return self.src.put({\n\t          _id: self.id,\n\t          last_seq: LOWEST_SEQ\n\t        }).then(function () {\n\t          return LOWEST_SEQ;\n\t        }, function (err) {\n\t          if (isForbiddenError(err)) {\n\t            self.readOnlySource = true;\n\t            return targetDoc.last_seq;\n\t          }\n\t          /* istanbul ignore next */\n\t          return LOWEST_SEQ;\n\t        });\n\t      }\n\t      throw err;\n\t    });\n\t  }).catch(function (err) {\n\t    if (err.status !== 404) {\n\t      throw err;\n\t    }\n\t    return LOWEST_SEQ;\n\t  });\n\t};\n\t// This checkpoint comparison is ported from CouchDBs source\n\t// they come from here:\n\t// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\t\n\tfunction compareReplicationLogs(srcDoc, tgtDoc) {\n\t  if (srcDoc.session_id === tgtDoc.session_id) {\n\t    return {\n\t      last_seq: srcDoc.last_seq,\n\t      history: srcDoc.history\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n\t}\n\t\n\tfunction compareReplicationHistory(sourceHistory, targetHistory) {\n\t  // the erlang loop via function arguments is not so easy to repeat in JS\n\t  // therefore, doing this as recursion\n\t  var S = sourceHistory[0];\n\t  var sourceRest = sourceHistory.slice(1);\n\t  var T = targetHistory[0];\n\t  var targetRest = targetHistory.slice(1);\n\t\n\t  if (!S || targetHistory.length === 0) {\n\t    return {\n\t      last_seq: LOWEST_SEQ,\n\t      history: []\n\t    };\n\t  }\n\t\n\t  var sourceId = S.session_id;\n\t  /* istanbul ignore if */\n\t  if (hasSessionId(sourceId, targetHistory)) {\n\t    return {\n\t      last_seq: S.last_seq,\n\t      history: sourceHistory\n\t    };\n\t  }\n\t\n\t  var targetId = T.session_id;\n\t  if (hasSessionId(targetId, sourceRest)) {\n\t    return {\n\t      last_seq: T.last_seq,\n\t      history: targetRest\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(sourceRest, targetRest);\n\t}\n\t\n\tfunction hasSessionId(sessionId, history) {\n\t  var props = history[0];\n\t  var rest = history.slice(1);\n\t\n\t  if (!sessionId || history.length === 0) {\n\t    return false;\n\t  }\n\t\n\t  if (sessionId === props.session_id) {\n\t    return true;\n\t  }\n\t\n\t  return hasSessionId(sessionId, rest);\n\t}\n\t\n\tfunction isForbiddenError(err) {\n\t  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n\t}\n\t\n\tvar STARTING_BACK_OFF = 0;\n\t\n\tfunction backOff(opts, returnValue, error, callback) {\n\t  if (opts.retry === false) {\n\t    returnValue.emit('error', error);\n\t    returnValue.removeAllListeners();\n\t    return;\n\t  }\n\t  if (typeof opts.back_off_function !== 'function') {\n\t    opts.back_off_function = defaultBackOff;\n\t  }\n\t  returnValue.emit('requestError', error);\n\t  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n\t    returnValue.emit('paused', error);\n\t    returnValue.state = 'stopped';\n\t    var backOffSet = function backoffTimeSet() {\n\t      opts.current_back_off = STARTING_BACK_OFF;\n\t    };\n\t    var removeBackOffSetter = function removeBackOffTimeSet() {\n\t      returnValue.removeListener('active', backOffSet);\n\t    };\n\t    returnValue.once('paused', removeBackOffSetter);\n\t    returnValue.once('active', backOffSet);\n\t  }\n\t\n\t  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n\t  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n\t  setTimeout(callback, opts.current_back_off);\n\t}\n\t\n\tfunction sortObjectPropertiesByKey(queryParams) {\n\t  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n\t    result[key] = queryParams[key];\n\t    return result;\n\t  }, {});\n\t}\n\t\n\t// Generate a unique id particular to this replication.\n\t// Not guaranteed to align perfectly with CouchDB's rep ids.\n\tfunction generateReplicationId(src, target, opts) {\n\t  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n\t  var filterFun = opts.filter ? opts.filter.toString() : '';\n\t  var queryParams = '';\n\t  var filterViewName =  '';\n\t\n\t  if (opts.filter && opts.query_params) {\n\t    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n\t  }\n\t\n\t  if (opts.filter && opts.filter === '_view') {\n\t    filterViewName = opts.view.toString();\n\t  }\n\t\n\t  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n\t    var queryData = res[0] + res[1] + filterFun + filterViewName +\n\t      queryParams + docIds;\n\t    return new PouchPromise(function (resolve) {\n\t      binaryMd5(queryData, resolve);\n\t    });\n\t  }).then(function (md5sum) {\n\t    // can't use straight-up md5 alphabet, because\n\t    // the char '/' is interpreted as being for attachments,\n\t    // and + is also not url-safe\n\t    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n\t    return '_local/' + md5sum;\n\t  });\n\t}\n\t\n\tfunction replicate$1(src, target, opts, returnValue, result) {\n\t  var batches = [];               // list of batches to be processed\n\t  var currentBatch;               // the batch currently being processed\n\t  var pendingBatch = {\n\t    seq: 0,\n\t    changes: [],\n\t    docs: []\n\t  }; // next batch, not yet ready to be processed\n\t  var writingCheckpoint = false;  // true while checkpoint is being written\n\t  var changesCompleted = false;   // true when all changes received\n\t  var replicationCompleted = false; // true when replication has completed\n\t  var last_seq = 0;\n\t  var continuous = opts.continuous || opts.live || false;\n\t  var batch_size = opts.batch_size || 100;\n\t  var batches_limit = opts.batches_limit || 10;\n\t  var changesPending = false;     // true while src.changes is running\n\t  var doc_ids = opts.doc_ids;\n\t  var repId;\n\t  var checkpointer;\n\t  var changedDocs = [];\n\t  // Like couchdb, every replication gets a unique session id\n\t  var session = uuid();\n\t\n\t  result = result || {\n\t    ok: true,\n\t    start_time: new Date(),\n\t    docs_read: 0,\n\t    docs_written: 0,\n\t    doc_write_failures: 0,\n\t    errors: []\n\t  };\n\t\n\t  var changesOpts = {};\n\t  returnValue.ready(src, target);\n\t\n\t  function initCheckpointer() {\n\t    if (checkpointer) {\n\t      return PouchPromise.resolve();\n\t    }\n\t    return generateReplicationId(src, target, opts).then(function (res) {\n\t      repId = res;\n\t      checkpointer = new Checkpointer(src, target, repId, returnValue);\n\t    });\n\t  }\n\t\n\t  function writeDocs() {\n\t    changedDocs = [];\n\t\n\t    if (currentBatch.docs.length === 0) {\n\t      return;\n\t    }\n\t    var docs = currentBatch.docs;\n\t    var bulkOpts = {timeout: opts.timeout};\n\t    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t\n\t      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n\t      // (id -> error), and check for errors while iterating over `docs`\n\t      var errorsById = Object.create(null);\n\t      res.forEach(function (res) {\n\t        if (res.error) {\n\t          errorsById[res.id] = res;\n\t        }\n\t      });\n\t\n\t      var errorsNo = Object.keys(errorsById).length;\n\t      result.doc_write_failures += errorsNo;\n\t      result.docs_written += docs.length - errorsNo;\n\t\n\t      docs.forEach(function (doc) {\n\t        var error = errorsById[doc._id];\n\t        if (error) {\n\t          result.errors.push(error);\n\t          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n\t            returnValue.emit('denied', clone(error));\n\t          } else {\n\t            throw error;\n\t          }\n\t        } else {\n\t          changedDocs.push(doc);\n\t        }\n\t      });\n\t\n\t    }, function (err) {\n\t      result.doc_write_failures += docs.length;\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function finishBatch() {\n\t    if (currentBatch.error) {\n\t      throw new Error('There was a problem getting docs.');\n\t    }\n\t    result.last_seq = last_seq = currentBatch.seq;\n\t    var outResult = clone(result);\n\t    if (changedDocs.length) {\n\t      outResult.docs = changedDocs;\n\t      returnValue.emit('change', outResult);\n\t    }\n\t    writingCheckpoint = true;\n\t    return checkpointer.writeCheckpoint(currentBatch.seq,\n\t        session).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      currentBatch = undefined;\n\t      getChanges();\n\t    }).catch(function (err) {\n\t      onCheckpointError(err);\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function getDiffs() {\n\t    var diff = {};\n\t    currentBatch.changes.forEach(function (change) {\n\t      // Couchbase Sync Gateway emits these, but we can ignore them\n\t      /* istanbul ignore if */\n\t      if (change.id === \"_user/\") {\n\t        return;\n\t      }\n\t      diff[change.id] = change.changes.map(function (x) {\n\t        return x.rev;\n\t      });\n\t    });\n\t    return target.revsDiff(diff).then(function (diffs) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      // currentBatch.diffs elements are deleted as the documents are written\n\t      currentBatch.diffs = diffs;\n\t    });\n\t  }\n\t\n\t  function getBatchDocs() {\n\t    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n\t      currentBatch.error = !got.ok;\n\t      got.docs.forEach(function (doc) {\n\t        delete currentBatch.diffs[doc._id];\n\t        result.docs_read++;\n\t        currentBatch.docs.push(doc);\n\t      });\n\t    });\n\t  }\n\t\n\t  function startNextBatch() {\n\t    if (returnValue.cancelled || currentBatch) {\n\t      return;\n\t    }\n\t    if (batches.length === 0) {\n\t      processPendingBatch(true);\n\t      return;\n\t    }\n\t    currentBatch = batches.shift();\n\t    getDiffs()\n\t      .then(getBatchDocs)\n\t      .then(writeDocs)\n\t      .then(finishBatch)\n\t      .then(startNextBatch)\n\t      .catch(function (err) {\n\t        abortReplication('batch processing terminated with error', err);\n\t      });\n\t  }\n\t\n\t\n\t  function processPendingBatch(immediate) {\n\t    if (pendingBatch.changes.length === 0) {\n\t      if (batches.length === 0 && !currentBatch) {\n\t        if ((continuous && changesOpts.live) || changesCompleted) {\n\t          returnValue.state = 'pending';\n\t          returnValue.emit('paused');\n\t        }\n\t        if (changesCompleted) {\n\t          completeReplication();\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    if (\n\t      immediate ||\n\t      changesCompleted ||\n\t      pendingBatch.changes.length >= batch_size\n\t    ) {\n\t      batches.push(pendingBatch);\n\t      pendingBatch = {\n\t        seq: 0,\n\t        changes: [],\n\t        docs: []\n\t      };\n\t      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n\t        returnValue.state = 'active';\n\t        returnValue.emit('active');\n\t      }\n\t      startNextBatch();\n\t    }\n\t  }\n\t\n\t\n\t  function abortReplication(reason, err) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    if (!err.message) {\n\t      err.message = reason;\n\t    }\n\t    result.ok = false;\n\t    result.status = 'aborting';\n\t    batches = [];\n\t    pendingBatch = {\n\t      seq: 0,\n\t      changes: [],\n\t      docs: []\n\t    };\n\t    completeReplication(err);\n\t  }\n\t\n\t\n\t  function completeReplication(fatalError) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      result.status = 'cancelled';\n\t      if (writingCheckpoint) {\n\t        return;\n\t      }\n\t    }\n\t    result.status = result.status || 'complete';\n\t    result.end_time = new Date();\n\t    result.last_seq = last_seq;\n\t    replicationCompleted = true;\n\t\n\t    if (fatalError) {\n\t      fatalError.result = result;\n\t\n\t      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n\t        returnValue.emit('error', fatalError);\n\t        returnValue.removeAllListeners();\n\t      } else {\n\t        backOff(opts, returnValue, fatalError, function () {\n\t          replicate$1(src, target, opts, returnValue);\n\t        });\n\t      }\n\t    } else {\n\t      returnValue.emit('complete', result);\n\t      returnValue.removeAllListeners();\n\t    }\n\t  }\n\t\n\t\n\t  function onChange(change) {\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    var filter = filterChange(opts)(change);\n\t    if (!filter) {\n\t      return;\n\t    }\n\t    pendingBatch.seq = change.seq;\n\t    pendingBatch.changes.push(change);\n\t    processPendingBatch(batches.length === 0 && changesOpts.live);\n\t  }\n\t\n\t\n\t  function onChangesComplete(changes) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t\n\t    // if no results were returned then we're done,\n\t    // else fetch more\n\t    if (changes.results.length > 0) {\n\t      changesOpts.since = changes.last_seq;\n\t      getChanges();\n\t      processPendingBatch(true);\n\t    } else {\n\t\n\t      var complete = function () {\n\t        if (continuous) {\n\t          changesOpts.live = true;\n\t          getChanges();\n\t        } else {\n\t          changesCompleted = true;\n\t        }\n\t        processPendingBatch(true);\n\t      };\n\t\n\t      // update the checkpoint so we start from the right seq next time\n\t      if (!currentBatch && changes.results.length === 0) {\n\t        writingCheckpoint = true;\n\t        checkpointer.writeCheckpoint(changes.last_seq,\n\t            session).then(function () {\n\t          writingCheckpoint = false;\n\t          result.last_seq = last_seq = changes.last_seq;\n\t          complete();\n\t        })\n\t        .catch(onCheckpointError);\n\t      } else {\n\t        complete();\n\t      }\n\t    }\n\t  }\n\t\n\t\n\t  function onChangesError(err) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    abortReplication('changes rejected', err);\n\t  }\n\t\n\t\n\t  function getChanges() {\n\t    if (!(\n\t      !changesPending &&\n\t      !changesCompleted &&\n\t      batches.length < batches_limit\n\t      )) {\n\t      return;\n\t    }\n\t    changesPending = true;\n\t    function abortChanges() {\n\t      changes.cancel();\n\t    }\n\t    function removeListener() {\n\t      returnValue.removeListener('cancel', abortChanges);\n\t    }\n\t\n\t    if (returnValue._changes) { // remove old changes() and listeners\n\t      returnValue.removeListener('cancel', returnValue._abortChanges);\n\t      returnValue._changes.cancel();\n\t    }\n\t    returnValue.once('cancel', abortChanges);\n\t\n\t    var changes = src.changes(changesOpts)\n\t      .on('change', onChange);\n\t    changes.then(removeListener, removeListener);\n\t    changes.then(onChangesComplete)\n\t      .catch(onChangesError);\n\t\n\t    if (opts.retry) {\n\t      // save for later so we can cancel if necessary\n\t      returnValue._changes = changes;\n\t      returnValue._abortChanges = abortChanges;\n\t    }\n\t  }\n\t\n\t\n\t  function startChanges() {\n\t    initCheckpointer().then(function () {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      return checkpointer.getCheckpoint().then(function (checkpoint) {\n\t        last_seq = checkpoint;\n\t        changesOpts = {\n\t          since: last_seq,\n\t          limit: batch_size,\n\t          batch_size: batch_size,\n\t          style: 'all_docs',\n\t          doc_ids: doc_ids,\n\t          return_docs: true // required so we know when we're done\n\t        };\n\t        if (opts.filter) {\n\t          if (typeof opts.filter !== 'string') {\n\t            // required for the client-side filter in onChange\n\t            changesOpts.include_docs = true;\n\t          } else { // ddoc filter\n\t            changesOpts.filter = opts.filter;\n\t          }\n\t        }\n\t        if ('heartbeat' in opts) {\n\t          changesOpts.heartbeat = opts.heartbeat;\n\t        }\n\t        if ('timeout' in opts) {\n\t          changesOpts.timeout = opts.timeout;\n\t        }\n\t        if (opts.query_params) {\n\t          changesOpts.query_params = opts.query_params;\n\t        }\n\t        if (opts.view) {\n\t          changesOpts.view = opts.view;\n\t        }\n\t        getChanges();\n\t      });\n\t    }).catch(function (err) {\n\t      abortReplication('getCheckpoint rejected with ', err);\n\t    });\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  function onCheckpointError(err) {\n\t    writingCheckpoint = false;\n\t    abortReplication('writeCheckpoint completed with error', err);\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (returnValue.cancelled) { // cancelled immediately\n\t    completeReplication();\n\t    return;\n\t  }\n\t\n\t  if (!returnValue._addedListeners) {\n\t    returnValue.once('cancel', completeReplication);\n\t\n\t    if (typeof opts.complete === 'function') {\n\t      returnValue.once('error', opts.complete);\n\t      returnValue.once('complete', function (result) {\n\t        opts.complete(null, result);\n\t      });\n\t    }\n\t    returnValue._addedListeners = true;\n\t  }\n\t\n\t  if (typeof opts.since === 'undefined') {\n\t    startChanges();\n\t  } else {\n\t    initCheckpointer().then(function () {\n\t      writingCheckpoint = true;\n\t      return checkpointer.writeCheckpoint(opts.since, session);\n\t    }).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      last_seq = opts.since;\n\t      startChanges();\n\t    }).catch(onCheckpointError);\n\t  }\n\t}\n\t\n\t// We create a basic promise so the caller can cancel the replication possibly\n\t// before we have actually started listening to changes etc\n\tinherits(Replication, events.EventEmitter);\n\tfunction Replication() {\n\t  events.EventEmitter.call(this);\n\t  this.cancelled = false;\n\t  this.state = 'pending';\n\t  var self = this;\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    self.once('complete', fulfill);\n\t    self.once('error', reject);\n\t  });\n\t  self.then = function (resolve, reject) {\n\t    return promise.then(resolve, reject);\n\t  };\n\t  self.catch = function (reject) {\n\t    return promise.catch(reject);\n\t  };\n\t  // As we allow error handling via \"error\" event as well,\n\t  // put a stub in here so that rejecting never throws UnhandledError.\n\t  self.catch(function () {});\n\t}\n\t\n\tReplication.prototype.cancel = function () {\n\t  this.cancelled = true;\n\t  this.state = 'cancelled';\n\t  this.emit('cancel');\n\t};\n\t\n\tReplication.prototype.ready = function (src, target) {\n\t  var self = this;\n\t  if (self._readyCalled) {\n\t    return;\n\t  }\n\t  self._readyCalled = true;\n\t\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  src.once('destroyed', onDestroy);\n\t  target.once('destroyed', onDestroy);\n\t  function cleanup() {\n\t    src.removeListener('destroyed', onDestroy);\n\t    target.removeListener('destroyed', onDestroy);\n\t  }\n\t  self.once('complete', cleanup);\n\t};\n\t\n\tfunction toPouch(db, opts) {\n\t  var PouchConstructor = opts.PouchConstructor;\n\t  if (typeof db === 'string') {\n\t    return new PouchConstructor(db, opts);\n\t  } else {\n\t    return db;\n\t  }\n\t}\n\t\n\tfunction replicate(src, target, opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t\n\t  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n\t    throw createError(BAD_REQUEST,\n\t                       \"`doc_ids` filter parameter is not a list.\");\n\t  }\n\t\n\t  opts.complete = callback;\n\t  opts = clone(opts);\n\t  opts.continuous = opts.continuous || opts.live;\n\t  opts.retry = ('retry' in opts) ? opts.retry : false;\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  var replicateRet = new Replication(opts);\n\t  var srcPouch = toPouch(src, opts);\n\t  var targetPouch = toPouch(target, opts);\n\t  replicate$1(srcPouch, targetPouch, opts, replicateRet);\n\t  return replicateRet;\n\t}\n\t\n\tinherits(Sync, events.EventEmitter);\n\tfunction sync(src, target, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t  opts = clone(opts);\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  src = toPouch(src, opts);\n\t  target = toPouch(target, opts);\n\t  return new Sync(src, target, opts, callback);\n\t}\n\t\n\tfunction Sync(src, target, opts, callback) {\n\t  var self = this;\n\t  this.canceled = false;\n\t\n\t  var optsPush = opts.push ? jsExtend.extend({}, opts, opts.push) : opts;\n\t  var optsPull = opts.pull ? jsExtend.extend({}, opts, opts.pull) : opts;\n\t\n\t  this.push = replicate(src, target, optsPush);\n\t  this.pull = replicate(target, src, optsPull);\n\t\n\t  this.pushPaused = true;\n\t  this.pullPaused = true;\n\t\n\t  function pullChange(change) {\n\t    self.emit('change', {\n\t      direction: 'pull',\n\t      change: change\n\t    });\n\t  }\n\t  function pushChange(change) {\n\t    self.emit('change', {\n\t      direction: 'push',\n\t      change: change\n\t    });\n\t  }\n\t  function pushDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'push',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pullDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'pull',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pushPaused() {\n\t    self.pushPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pullPaused() {\n\t    self.pullPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pushActive() {\n\t    self.pushPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('active', {\n\t        direction: 'push'\n\t      });\n\t    }\n\t  }\n\t  function pullActive() {\n\t    self.pullPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('active', {\n\t        direction: 'pull'\n\t      });\n\t    }\n\t  }\n\t\n\t  var removed = {};\n\t\n\t  function removeAll(type) { // type is 'push' or 'pull'\n\t    return function (event, func) {\n\t      var isChange = event === 'change' &&\n\t        (func === pullChange || func === pushChange);\n\t      var isDenied = event === 'denied' &&\n\t        (func === pullDenied || func === pushDenied);\n\t      var isPaused = event === 'paused' &&\n\t        (func === pullPaused || func === pushPaused);\n\t      var isActive = event === 'active' &&\n\t        (func === pullActive || func === pushActive);\n\t\n\t      if (isChange || isDenied || isPaused || isActive) {\n\t        if (!(event in removed)) {\n\t          removed[event] = {};\n\t        }\n\t        removed[event][type] = true;\n\t        if (Object.keys(removed[event]).length === 2) {\n\t          // both push and pull have asked to be removed\n\t          self.removeAllListeners(event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (opts.live) {\n\t    this.push.on('complete', self.pull.cancel.bind(self.pull));\n\t    this.pull.on('complete', self.push.cancel.bind(self.push));\n\t  }\n\t\n\t  this.on('newListener', function (event) {\n\t    if (event === 'change') {\n\t      self.pull.on('change', pullChange);\n\t      self.push.on('change', pushChange);\n\t    } else if (event === 'denied') {\n\t      self.pull.on('denied', pullDenied);\n\t      self.push.on('denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      self.pull.on('active', pullActive);\n\t      self.push.on('active', pushActive);\n\t    } else if (event === 'paused') {\n\t      self.pull.on('paused', pullPaused);\n\t      self.push.on('paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.on('removeListener', function (event) {\n\t    if (event === 'change') {\n\t      self.pull.removeListener('change', pullChange);\n\t      self.push.removeListener('change', pushChange);\n\t    } else if (event === 'denied') {\n\t      self.pull.removeListener('denied', pullDenied);\n\t      self.push.removeListener('denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      self.pull.removeListener('active', pullActive);\n\t      self.push.removeListener('active', pushActive);\n\t    } else if (event === 'paused') {\n\t      self.pull.removeListener('paused', pullPaused);\n\t      self.push.removeListener('paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.pull.on('removeListener', removeAll('pull'));\n\t  this.push.on('removeListener', removeAll('push'));\n\t\n\t  var promise = PouchPromise.all([\n\t    this.push,\n\t    this.pull\n\t  ]).then(function (resp) {\n\t    var out = {\n\t      push: resp[0],\n\t      pull: resp[1]\n\t    };\n\t    self.emit('complete', out);\n\t    if (callback) {\n\t      callback(null, out);\n\t    }\n\t    self.removeAllListeners();\n\t    return out;\n\t  }, function (err) {\n\t    self.cancel();\n\t    if (callback) {\n\t      // if there's a callback, then the callback can receive\n\t      // the error event\n\t      callback(err);\n\t    } else {\n\t      // if there's no callback, then we're safe to emit an error\n\t      // event, which would otherwise throw an unhandled error\n\t      // due to 'error' being a special event in EventEmitters\n\t      self.emit('error', err);\n\t    }\n\t    self.removeAllListeners();\n\t    if (callback) {\n\t      // no sense throwing if we're already emitting an 'error' event\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  this.then = function (success, err) {\n\t    return promise.then(success, err);\n\t  };\n\t\n\t  this.catch = function (err) {\n\t    return promise.catch(err);\n\t  };\n\t}\n\t\n\tSync.prototype.cancel = function () {\n\t  if (!this.canceled) {\n\t    this.canceled = true;\n\t    this.push.cancel();\n\t    this.pull.cancel();\n\t  }\n\t};\n\t\n\tfunction replication(PouchDB) {\n\t  PouchDB.replicate = replicate;\n\t  PouchDB.sync = sync;\n\t\n\t  Object.defineProperty(PouchDB.prototype, 'replicate', {\n\t    get: function () {\n\t      var self = this;\n\t      return {\n\t        from: function (other, opts, callback) {\n\t          return self.constructor.replicate(other, self, opts, callback);\n\t        },\n\t        to: function (other, opts, callback) {\n\t          return self.constructor.replicate(self, other, opts, callback);\n\t        }\n\t      };\n\t    }\n\t  });\n\t\n\t  PouchDB.prototype.sync = function (dbName, opts, callback) {\n\t    return this.constructor.sync(this, dbName, opts, callback);\n\t  };\n\t}\n\t\n\tPouchDB.plugin(IDBPouch)\n\t  .plugin(WebSqlPouch)\n\t  .plugin(HttpPouch$1)\n\t  .plugin(mapreduce)\n\t  .plugin(replication);\n\t\n\t// Pull from src because pouchdb-node/pouchdb-browser themselves\n\t// are aggressively optimized and jsnext:main would normally give us this\n\t// aggressive bundle.\n\t\n\tmodule.exports = PouchDB;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function(factory) {\n\t  if(true) {\n\t    factory(exports);\n\t  } else {\n\t    factory(this);\n\t  }\n\t}).call(this, function(root) { \n\t\n\t  var slice   = Array.prototype.slice,\n\t      each    = Array.prototype.forEach;\n\t\n\t  var extend = function(obj) {\n\t    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\t\n\t    var sources = slice.call(arguments, 1); \n\t\n\t    each.call(sources, function(source) {\n\t      if(source) {\n\t        for(var prop in source) {\n\t          if(typeof source[prop] === 'object' && obj[prop]) {\n\t            extend.call(obj, obj[prop], source[prop]);\n\t          } else {\n\t            obj[prop] = source[prop];\n\t          }\n\t        } \n\t      }\n\t    });\n\t\n\t    return obj;\n\t  }\n\t\n\t  root.extend = extend;\n\t});\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(6);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(7);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar immediate = __webpack_require__(10);\n\t\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\t\n\tvar handlers = {};\n\t\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\t\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\t\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\t\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\t\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\t\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\t\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && typeof obj === 'object' && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\t\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\t\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\t\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\t\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\t\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\t\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\t\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\t\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\tvar scheduleDrain;\n\t\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\t\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\t\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\t\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\t\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = argsArray;\n\t\n\tfunction argsArray(fun) {\n\t  return function () {\n\t    var len = arguments.length;\n\t    if (len) {\n\t      var args = [];\n\t      var i = -1;\n\t      while (++i < len) {\n\t        args[i] = arguments[i];\n\t      }\n\t      return fun.call(this, args);\n\t    } else {\n\t      return fun.call(this, []);\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// Generated by CoffeeScript 1.9.2\n\t(function() {\n\t  var hasProp = {}.hasOwnProperty,\n\t    slice = [].slice;\n\t\n\t  module.exports = function(source, scope) {\n\t    var key, keys, value, values;\n\t    keys = [];\n\t    values = [];\n\t    for (key in scope) {\n\t      if (!hasProp.call(scope, key)) continue;\n\t      value = scope[key];\n\t      if (key === 'this') {\n\t        continue;\n\t      }\n\t      keys.push(key);\n\t      values.push(value);\n\t    }\n\t    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n\t  };\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (factory) {\n\t    if (true) {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        // AMD\n\t        define(factory);\n\t    } else {\n\t        // Browser globals (with support for web workers)\n\t        var glob;\n\t\n\t        try {\n\t            glob = window;\n\t        } catch (e) {\n\t            glob = self;\n\t        }\n\t\n\t        glob.SparkMD5 = factory();\n\t    }\n\t}(function (undefined) {\n\t\n\t    'use strict';\n\t\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5).\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\t\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\t\n\t\n\t    function cmn(q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    }\n\t\n\t    function ff(a, b, c, d, x, s, t) {\n\t        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t    }\n\t\n\t    function gg(a, b, c, d, x, s, t) {\n\t        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t    }\n\t\n\t    function hh(a, b, c, d, x, s, t) {\n\t        return cmn(b ^ c ^ d, a, b, x, s, t);\n\t    }\n\t\n\t    function ii(a, b, c, d, x, s, t) {\n\t        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t    }\n\t\n\t    function md5cycle(x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\t\n\t        a = ff(a, b, c, d, k[0], 7, -680876936);\n\t        d = ff(d, a, b, c, k[1], 12, -389564586);\n\t        c = ff(c, d, a, b, k[2], 17, 606105819);\n\t        b = ff(b, c, d, a, k[3], 22, -1044525330);\n\t        a = ff(a, b, c, d, k[4], 7, -176418897);\n\t        d = ff(d, a, b, c, k[5], 12, 1200080426);\n\t        c = ff(c, d, a, b, k[6], 17, -1473231341);\n\t        b = ff(b, c, d, a, k[7], 22, -45705983);\n\t        a = ff(a, b, c, d, k[8], 7, 1770035416);\n\t        d = ff(d, a, b, c, k[9], 12, -1958414417);\n\t        c = ff(c, d, a, b, k[10], 17, -42063);\n\t        b = ff(b, c, d, a, k[11], 22, -1990404162);\n\t        a = ff(a, b, c, d, k[12], 7, 1804603682);\n\t        d = ff(d, a, b, c, k[13], 12, -40341101);\n\t        c = ff(c, d, a, b, k[14], 17, -1502002290);\n\t        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\t\n\t        a = gg(a, b, c, d, k[1], 5, -165796510);\n\t        d = gg(d, a, b, c, k[6], 9, -1069501632);\n\t        c = gg(c, d, a, b, k[11], 14, 643717713);\n\t        b = gg(b, c, d, a, k[0], 20, -373897302);\n\t        a = gg(a, b, c, d, k[5], 5, -701558691);\n\t        d = gg(d, a, b, c, k[10], 9, 38016083);\n\t        c = gg(c, d, a, b, k[15], 14, -660478335);\n\t        b = gg(b, c, d, a, k[4], 20, -405537848);\n\t        a = gg(a, b, c, d, k[9], 5, 568446438);\n\t        d = gg(d, a, b, c, k[14], 9, -1019803690);\n\t        c = gg(c, d, a, b, k[3], 14, -187363961);\n\t        b = gg(b, c, d, a, k[8], 20, 1163531501);\n\t        a = gg(a, b, c, d, k[13], 5, -1444681467);\n\t        d = gg(d, a, b, c, k[2], 9, -51403784);\n\t        c = gg(c, d, a, b, k[7], 14, 1735328473);\n\t        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\t\n\t        a = hh(a, b, c, d, k[5], 4, -378558);\n\t        d = hh(d, a, b, c, k[8], 11, -2022574463);\n\t        c = hh(c, d, a, b, k[11], 16, 1839030562);\n\t        b = hh(b, c, d, a, k[14], 23, -35309556);\n\t        a = hh(a, b, c, d, k[1], 4, -1530992060);\n\t        d = hh(d, a, b, c, k[4], 11, 1272893353);\n\t        c = hh(c, d, a, b, k[7], 16, -155497632);\n\t        b = hh(b, c, d, a, k[10], 23, -1094730640);\n\t        a = hh(a, b, c, d, k[13], 4, 681279174);\n\t        d = hh(d, a, b, c, k[0], 11, -358537222);\n\t        c = hh(c, d, a, b, k[3], 16, -722521979);\n\t        b = hh(b, c, d, a, k[6], 23, 76029189);\n\t        a = hh(a, b, c, d, k[9], 4, -640364487);\n\t        d = hh(d, a, b, c, k[12], 11, -421815835);\n\t        c = hh(c, d, a, b, k[15], 16, 530742520);\n\t        b = hh(b, c, d, a, k[2], 23, -995338651);\n\t\n\t        a = ii(a, b, c, d, k[0], 6, -198630844);\n\t        d = ii(d, a, b, c, k[7], 10, 1126891415);\n\t        c = ii(c, d, a, b, k[14], 15, -1416354905);\n\t        b = ii(b, c, d, a, k[5], 21, -57434055);\n\t        a = ii(a, b, c, d, k[12], 6, 1700485571);\n\t        d = ii(d, a, b, c, k[3], 10, -1894986606);\n\t        c = ii(c, d, a, b, k[10], 15, -1051523);\n\t        b = ii(b, c, d, a, k[1], 21, -2054922799);\n\t        a = ii(a, b, c, d, k[8], 6, 1873313359);\n\t        d = ii(d, a, b, c, k[15], 10, -30611744);\n\t        c = ii(c, d, a, b, k[6], 15, -1560198380);\n\t        b = ii(b, c, d, a, k[13], 21, 1309151649);\n\t        a = ii(a, b, c, d, k[4], 6, -145523070);\n\t        d = ii(d, a, b, c, k[11], 10, -1120210379);\n\t        c = ii(c, d, a, b, k[2], 15, 718787259);\n\t        b = ii(b, c, d, a, k[9], 21, -343485551);\n\t\n\t        x[0] = add32(a, x[0]);\n\t        x[1] = add32(b, x[1]);\n\t        x[2] = add32(c, x[2]);\n\t        x[3] = add32(d, x[3]);\n\t    }\n\t\n\t    function md5blk(s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md5blk_array(a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md51(s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t        return state;\n\t    }\n\t\n\t    function md51_array(a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t\n\t        return state;\n\t    }\n\t\n\t    function rhex(n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    }\n\t\n\t    function hex(x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    }\n\t\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * ArrayBuffer slice polyfill.\n\t     *\n\t     * @see https://github.com/ttaubert/node-arraybuffer-slice\n\t     */\n\t\n\t    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n\t        (function () {\n\t            function clamp(val, length) {\n\t                val = (val | 0) || 0;\n\t\n\t                if (val < 0) {\n\t                    return Math.max(val + length, 0);\n\t                }\n\t\n\t                return Math.min(val, length);\n\t            }\n\t\n\t            ArrayBuffer.prototype.slice = function (from, to) {\n\t                var length = this.byteLength,\n\t                    begin = clamp(from, length),\n\t                    end = length,\n\t                    num,\n\t                    target,\n\t                    targetArray,\n\t                    sourceArray;\n\t\n\t                if (to !== undefined) {\n\t                    end = clamp(to, length);\n\t                }\n\t\n\t                if (begin > end) {\n\t                    return new ArrayBuffer(0);\n\t                }\n\t\n\t                num = end - begin;\n\t                target = new ArrayBuffer(num);\n\t                targetArray = new Uint8Array(target);\n\t\n\t                sourceArray = new Uint8Array(this, begin, num);\n\t                targetArray.set(sourceArray);\n\t\n\t                return target;\n\t            };\n\t        })();\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * Helpers.\n\t     */\n\t\n\t    function toUtf8(str) {\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        return str;\n\t    }\n\t\n\t    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n\t        var length = str.length,\n\t           buff = new ArrayBuffer(length),\n\t           arr = new Uint8Array(buff),\n\t           i;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            arr[i] = str.charCodeAt(i);\n\t        }\n\t\n\t        return returnUInt8Array ? arr : buff;\n\t    }\n\t\n\t    function arrayBuffer2Utf8Str(buff) {\n\t        return String.fromCharCode.apply(null, new Uint8Array(buff));\n\t    }\n\t\n\t    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n\t        var result = new Uint8Array(first.byteLength + second.byteLength);\n\t\n\t        result.set(new Uint8Array(first));\n\t        result.set(new Uint8Array(second), first.byteLength);\n\t\n\t        return returnUInt8Array ? result : result.buffer;\n\t    }\n\t\n\t    function hexToBinaryString(hex) {\n\t        var bytes = [],\n\t            length = hex.length,\n\t            x;\n\t\n\t        for (x = 0; x < length - 1; x += 2) {\n\t            bytes.push(parseInt(hex.substr(x, 2), 16));\n\t        }\n\t\n\t        return String.fromCharCode.apply(String, bytes);\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\t\n\t    function SparkMD5() {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    }\n\t\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then append as binary\n\t        this.appendBinary(toUtf8(str));\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\t\n\t        var length = this._buff.length,\n\t            i;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\t\n\t        this._buff = this._buff.substring(i - 64);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = '';\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.prototype.getState = function () {\n\t        return {\n\t            buff: this._buff,\n\t            length: this._length,\n\t            hash: this._hash\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.setState = function (state) {\n\t        this._buff = state.buff;\n\t        this._length = state.length;\n\t        this._hash = state.hash;\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other additional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._hash;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\t\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._hash, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._hash, tail);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then compute it using the binary function\n\t        return SparkMD5.hashBinary(toUtf8(str), raw);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n\t            length = buff.length,\n\t            i;\n\t\n\t        this._length += arr.byteLength;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\t\n\t        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.getState = function () {\n\t        var state = SparkMD5.prototype.getState.call(this);\n\t\n\t        // Convert buffer to a string\n\t        state.buff = arrayBuffer2Utf8Str(state.buff);\n\t\n\t        return state;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n\t        // Convert string to buffer\n\t        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\t\n\t        return SparkMD5.prototype.setState.call(this, state);\n\t    };\n\t\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\t\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\t\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr)),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    return SparkMD5;\n\t}));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Stringify/parse functions that don't operate\n\t * recursively, so they avoid call stack exceeded\n\t * errors.\n\t */\n\texports.stringify = function stringify(input) {\n\t  var queue = [];\n\t  queue.push({obj: input});\n\t\n\t  var res = '';\n\t  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n\t  while ((next = queue.pop())) {\n\t    obj = next.obj;\n\t    prefix = next.prefix || '';\n\t    val = next.val || '';\n\t    res += prefix;\n\t    if (val) {\n\t      res += val;\n\t    } else if (typeof obj !== 'object') {\n\t      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n\t    } else if (obj === null) {\n\t      res += 'null';\n\t    } else if (Array.isArray(obj)) {\n\t      queue.push({val: ']'});\n\t      for (i = obj.length - 1; i >= 0; i--) {\n\t        arrayPrefix = i === 0 ? '' : ',';\n\t        queue.push({obj: obj[i], prefix: arrayPrefix});\n\t      }\n\t      queue.push({val: '['});\n\t    } else { // object\n\t      keys = [];\n\t      for (k in obj) {\n\t        if (obj.hasOwnProperty(k)) {\n\t          keys.push(k);\n\t        }\n\t      }\n\t      queue.push({val: '}'});\n\t      for (i = keys.length - 1; i >= 0; i--) {\n\t        key = keys[i];\n\t        value = obj[key];\n\t        objPrefix = (i > 0 ? ',' : '');\n\t        objPrefix += JSON.stringify(key) + ':';\n\t        queue.push({obj: value, prefix: objPrefix});\n\t      }\n\t      queue.push({val: '{'});\n\t    }\n\t  }\n\t  return res;\n\t};\n\t\n\t// Convenience function for the parse function.\n\t// This pop function is basically copied from\n\t// pouchCollate.parseIndexableString\n\tfunction pop(obj, stack, metaStack) {\n\t  var lastMetaElement = metaStack[metaStack.length - 1];\n\t  if (obj === lastMetaElement.element) {\n\t    // popping a meta-element, e.g. an object whose value is another object\n\t    metaStack.pop();\n\t    lastMetaElement = metaStack[metaStack.length - 1];\n\t  }\n\t  var element = lastMetaElement.element;\n\t  var lastElementIndex = lastMetaElement.index;\n\t  if (Array.isArray(element)) {\n\t    element.push(obj);\n\t  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t    var key = stack.pop();\n\t    element[key] = obj;\n\t  } else {\n\t    stack.push(obj); // obj with key only\n\t  }\n\t}\n\t\n\texports.parse = function (str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t  var collationIndex,parsedNum,numChar;\n\t  var parsedString,lastCh,numConsecutiveSlashes,ch;\n\t  var arrayElement, objElement;\n\t  while (true) {\n\t    collationIndex = str[i++];\n\t    if (collationIndex === '}' ||\n\t        collationIndex === ']' ||\n\t        typeof collationIndex === 'undefined') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack.pop(), stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case ' ':\n\t      case '\\t':\n\t      case '\\n':\n\t      case ':':\n\t      case ',':\n\t        break;\n\t      case 'n':\n\t        i += 3; // 'ull'\n\t        pop(null, stack, metaStack);\n\t        break;\n\t      case 't':\n\t        i += 3; // 'rue'\n\t        pop(true, stack, metaStack);\n\t        break;\n\t      case 'f':\n\t        i += 4; // 'alse'\n\t        pop(false, stack, metaStack);\n\t        break;\n\t      case '0':\n\t      case '1':\n\t      case '2':\n\t      case '3':\n\t      case '4':\n\t      case '5':\n\t      case '6':\n\t      case '7':\n\t      case '8':\n\t      case '9':\n\t      case '-':\n\t        parsedNum = '';\n\t        i--;\n\t        while (true) {\n\t          numChar = str[i++];\n\t          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n\t            parsedNum += numChar;\n\t          } else {\n\t            i--;\n\t            break;\n\t          }\n\t        }\n\t        pop(parseFloat(parsedNum), stack, metaStack);\n\t        break;\n\t      case '\"':\n\t        parsedString = '';\n\t        lastCh = void 0;\n\t        numConsecutiveSlashes = 0;\n\t        while (true) {\n\t          ch = str[i++];\n\t          if (ch !== '\"' || (lastCh === '\\\\' &&\n\t              numConsecutiveSlashes % 2 === 1)) {\n\t            parsedString += ch;\n\t            lastCh = ch;\n\t            if (lastCh === '\\\\') {\n\t              numConsecutiveSlashes++;\n\t            } else {\n\t              numConsecutiveSlashes = 0;\n\t            }\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n\t        break;\n\t      case '[':\n\t        arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '{':\n\t        objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      default:\n\t        throw new Error(\n\t          'unexpectedly reached end of input: ' + collationIndex);\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\r\n\t  /* istanbul ignore next */\r\n\t  if (true) {\r\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\t  } else if (typeof exports === 'object') {\r\n\t    module.exports = factory()\r\n\t  } else {\r\n\t    root.PromisePool = factory()\r\n\t    // Legacy API\r\n\t    root.promisePool = root.PromisePool\r\n\t  }\r\n\t})(this, function () {\r\n\t  'use strict'\r\n\t\r\n\t  var EventTarget = function () {\r\n\t    this._listeners = {}\r\n\t  }\r\n\t\r\n\t  EventTarget.prototype.addEventListener = function (type, listener) {\r\n\t    this._listeners[type] = this._listeners[type] || []\r\n\t    if (this._listeners[type].indexOf(listener) < 0) {\r\n\t      this._listeners[type].push(listener)\r\n\t    }\r\n\t  }\r\n\t\r\n\t  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n\t    if (this._listeners[type]) {\r\n\t      var p = this._listeners[type].indexOf(listener)\r\n\t      if (p >= 0) {\r\n\t        this._listeners[type].splice(p, 1)\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  EventTarget.prototype.dispatchEvent = function (evt) {\r\n\t    if (this._listeners[evt.type] && this._listeners[evt.type].length) {\r\n\t      var listeners = this._listeners[evt.type].slice()\r\n\t      for (var i = 0, l = listeners.length; i < l; ++i) {\r\n\t        listeners[i].call(this, evt)\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var isGenerator = function (func) {\r\n\t    return (typeof func.constructor === 'function' &&\r\n\t      func.constructor.name === 'GeneratorFunction')\r\n\t  }\r\n\t\r\n\t  var functionToIterator = function (func) {\r\n\t    return {\r\n\t      next: function () {\r\n\t        var promise = func()\r\n\t        return promise ? {value: promise} : {done: true}\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var promiseToIterator = function (promise) {\r\n\t    var called = false\r\n\t    return {\r\n\t      next: function () {\r\n\t        if (called) {\r\n\t          return {done: true}\r\n\t        }\r\n\t        called = true\r\n\t        return {value: promise}\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var toIterator = function (obj, Promise) {\r\n\t    var type = typeof obj\r\n\t    if (type === 'object') {\r\n\t      if (typeof obj.next === 'function') {\r\n\t        return obj\r\n\t      }\r\n\t      /* istanbul ignore else */\r\n\t      if (typeof obj.then === 'function') {\r\n\t        return promiseToIterator(obj)\r\n\t      }\r\n\t    }\r\n\t    if (type === 'function') {\r\n\t      return isGenerator(obj) ? obj() : functionToIterator(obj)\r\n\t    }\r\n\t    return promiseToIterator(Promise.resolve(obj))\r\n\t  }\r\n\t\r\n\t  var PromisePoolEvent = function (target, type, data) {\r\n\t    this.target = target\r\n\t    this.type = type\r\n\t    this.data = data\r\n\t  }\r\n\t\r\n\t  var PromisePool = function (source, concurrency, options) {\r\n\t    EventTarget.call(this)\r\n\t    if (typeof concurrency !== 'number' ||\r\n\t        Math.floor(concurrency) !== concurrency ||\r\n\t        concurrency < 1) {\r\n\t      throw new Error('Invalid concurrency')\r\n\t    }\r\n\t    this._concurrency = concurrency\r\n\t    this._options = options || {}\r\n\t    this._options.promise = this._options.promise || Promise\r\n\t    this._iterator = toIterator(source, this._options.promise)\r\n\t    this._done = false\r\n\t    this._size = 0\r\n\t    this._promise = null\r\n\t    this._callbacks = null\r\n\t  }\r\n\t  PromisePool.prototype = new EventTarget()\r\n\t  PromisePool.prototype.constructor = PromisePool\r\n\t\r\n\t  PromisePool.prototype.concurrency = function (value) {\r\n\t    if (typeof value !== 'undefined') {\r\n\t      this._concurrency = value\r\n\t      if (this.active()) {\r\n\t        this._proceed()\r\n\t      }\r\n\t    }\r\n\t    return this._concurrency\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype.size = function () {\r\n\t    return this._size\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype.active = function () {\r\n\t    return !!this._promise\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype.promise = function () {\r\n\t    return this._promise\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype.start = function () {\r\n\t    var that = this\r\n\t    var Promise = this._options.promise\r\n\t    this._promise = new Promise(function (resolve, reject) {\r\n\t      that._callbacks = {\r\n\t        reject: reject,\r\n\t        resolve: resolve\r\n\t      }\r\n\t      that._proceed()\r\n\t    })\r\n\t    return this._promise\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._fireEvent = function (type, data) {\r\n\t    this.dispatchEvent(new PromisePoolEvent(this, type, data))\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._settle = function (error) {\r\n\t    if (error) {\r\n\t      this._callbacks.reject(error)\r\n\t    } else {\r\n\t      this._callbacks.resolve()\r\n\t    }\r\n\t    this._promise = null\r\n\t    this._callbacks = null\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._onPooledPromiseFulfilled = function (promise, result) {\r\n\t    this._size--\r\n\t    if (this.active()) {\r\n\t      this._fireEvent('fulfilled', {\r\n\t        promise: promise,\r\n\t        result: result\r\n\t      })\r\n\t      this._proceed()\r\n\t    }\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._onPooledPromiseRejected = function (promise, error) {\r\n\t    this._size--\r\n\t    if (this.active()) {\r\n\t      this._fireEvent('rejected', {\r\n\t        promise: promise,\r\n\t        error: error\r\n\t      })\r\n\t      this._settle(error || new Error('Unknown error'))\r\n\t    }\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._trackPromise = function (promise) {\r\n\t    var that = this\r\n\t    promise\r\n\t      .then(function (result) {\r\n\t        that._onPooledPromiseFulfilled(promise, result)\r\n\t      }, function (error) {\r\n\t        that._onPooledPromiseRejected(promise, error)\r\n\t      })['catch'](function (err) {\r\n\t        that._settle(new Error('Promise processing failed: ' + err))\r\n\t      })\r\n\t  }\r\n\t\r\n\t  PromisePool.prototype._proceed = function () {\r\n\t    if (!this._done) {\r\n\t      var result = null\r\n\t      while (this._size < this._concurrency &&\r\n\t          !(result = this._iterator.next()).done) {\r\n\t        this._size++\r\n\t        this._trackPromise(result.value)\r\n\t      }\r\n\t      this._done = (result === null || !!result.done)\r\n\t    }\r\n\t    if (this._done && this._size === 0) {\r\n\t      this._settle()\r\n\t    }\r\n\t  }\r\n\t\r\n\t  PromisePool.PromisePoolEvent = PromisePoolEvent\r\n\t  // Legacy API\r\n\t  PromisePool.PromisePool = PromisePool\r\n\t\r\n\t  return PromisePool\r\n\t})\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _superagent = __webpack_require__(18);\n\t\n\tvar _superagent2 = _interopRequireDefault(_superagent);\n\t\n\tvar _sha = __webpack_require__(23);\n\t\n\tvar _sha2 = _interopRequireDefault(_sha);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar API = {\n\t  apiEndpoint: null,\n\t  apiKey: null,\n\t  appId: null,\n\t  UDID: null,\n\t  authenticationToken: null,\n\t  tokenUpdateCallback: function tokenUpdateCallback(newToken) {}\n\t};\n\t\n\tAPI.call = function (endpoint, data) {\n\t  var _this = this;\n\t\n\t  var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t  var method = arguments[3];\n\t\n\t  if (!this.apiEndpoint) {\n\t    callback(new Error('No API endpoint set - run Telepat.configure or Telepat.connect first'), null);\n\t  }\n\t  var req;\n\t\n\t  if (method === 'get') {\n\t    req = _superagent2.default.get(this.apiEndpoint + endpoint + '?' + data);\n\t  } else if (method === 'delete') {\n\t    req = _superagent2.default.del(this.apiEndpoint + endpoint);\n\t  } else {\n\t    req = _superagent2.default.post(this.apiEndpoint + endpoint);\n\t  }\n\t\n\t  if (method !== 'get') {\n\t    req.send(data);\n\t  }\n\t\n\t  req.set('Content-Type', 'application/json').set('X-BLGREQ-SIGN', (0, _sha2.default)(this.apiKey)).set('X-BLGREQ-APPID', this.appId).set('X-BLGREQ-UDID', this.UDID || 'TP_EMPTY_UDID');\n\t\n\t  if (this.authenticationToken) {\n\t    req.set('Authorization', 'Bearer ' + this.authenticationToken);\n\t  }\n\t\n\t  req.end(function (err, res) {\n\t    if (_this.needsTokenUpdate(res)) {\n\t      _this.updateToken(function (error, result) {\n\t        if (error) {\n\t          callback(error, null);\n\t        } else {\n\t          _this.call(endpoint, data, callback, method);\n\t        }\n\t      });\n\t    } else {\n\t      callback(err, res);\n\t    }\n\t  });\n\t};\n\t\n\tAPI.needsTokenUpdate = function (response) {\n\t  return this.authenticationToken && response.status === 401;\n\t};\n\t\n\tAPI.updateToken = function (callback) {\n\t  var _this2 = this;\n\t\n\t  this.get('user/refresh_token', '', function (err, res) {\n\t    if (err) {\n\t      callback(err, null);\n\t    } else {\n\t      _this2.authenticationToken = res.body.content.token;\n\t      _this2.tokenUpdateCallback(_this2.authenticationToken);\n\t      callback(null, res);\n\t    }\n\t  });\n\t};\n\t\n\tAPI.get = function (endpoint, data, callback) {\n\t  return this.call(endpoint, data, callback, 'get');\n\t};\n\t\n\tAPI.del = function (endpoint, data, callback) {\n\t  return this.call(endpoint, data, callback, 'delete');\n\t};\n\t\n\texports.default = API;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n\t  root = this;\n\t}\n\t\n\tvar Emitter = __webpack_require__(19);\n\tvar requestBase = __webpack_require__(20);\n\tvar isObject = __webpack_require__(21);\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = module.exports = __webpack_require__(22).bind(null, Request);\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  throw Error(\"Browser-only verison of superagent could not find XHR\");\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (val != null) {\n\t    if (Array.isArray(val)) {\n\t      val.forEach(function(v) {\n\t        pushEncodedKeyValuePair(pairs, key, v);\n\t      });\n\t    } else if (isObject(val)) {\n\t      for(var subkey in val) {\n\t        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n\t      }\n\t    } else {\n\t      pairs.push(encodeURIComponent(key)\n\t        + '=' + encodeURIComponent(val));\n\t    }\n\t  } else if (val === null) {\n\t    pairs.push(encodeURIComponent(key));\n\t  }\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var pair;\n\t  var pos;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    pos = pair.indexOf('=');\n\t    if (pos == -1) {\n\t      obj[decodeURIComponent(pair)] = '';\n\t    } else {\n\t      obj[decodeURIComponent(pair.slice(0, pos))] =\n\t        decodeURIComponent(pair.slice(pos + 1));\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return str.split(/ *; */).reduce(function(obj, str){\n\t    var parts = str.split(/ *= */),\n\t        key = parts.shift(),\n\t        val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this._setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this._setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this._parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype._parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  if (!parse && isJSON(this.type)) {\n\t    parse = request.parse['application/json'];\n\t  }\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      // issue #876: return the http status code if the response parsing fails\n\t      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    var new_err;\n\t    try {\n\t      if (res.status < 200 || res.status >= 300) {\n\t        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t        new_err.original = err;\n\t        new_err.response = res;\n\t        new_err.status = res.status;\n\t      }\n\t    } catch(e) {\n\t      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n\t    }\n\t\n\t    // #1000 don't catch errors from the callback to avoid double calling it\n\t    if (new_err) {\n\t      self.callback(new_err, res);\n\t    } else {\n\t      self.callback(null, res);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `requestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tfor (var key in requestBase) {\n\t  Request.prototype[key] = requestBase[key];\n\t}\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n\t * 'arraybuffer'.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.responseType = function(val){\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass, options){\n\t  if (!options) {\n\t    options = {\n\t      type: 'basic'\n\t    }\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      var str = btoa(user + ':' + pass);\n\t      this.set('Authorization', 'Basic ' + str);\n\t    break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t    break;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  this._getFormData().append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\tRequest.prototype._getFormData = function(){\n\t  if (!this._formData) {\n\t    this._formData = new root.FormData();\n\t  }\n\t  return this._formData;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Compose querystring to append to req.url\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._appendQueryString = function(){\n\t  var query = this._query.join('&');\n\t  if (query) {\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self._timeoutError();\n\t      if (self._aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = 'download';\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  this._appendQueryString();\n\t\n\t  // initiate request\n\t  if (this.username && this.password) {\n\t    xhr.open(this.method, this.url, true, this.username, this.password);\n\t  } else {\n\t    xhr.open(this.method, this.url, true);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * OPTIONS query to `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.options = function(url, data, fn){\n\t  var req = request('OPTIONS', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} [data]\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} [data] or fn\n\t * @param {Function} [fn]\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(21);\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.clearTimeout = function _clearTimeout(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default response body parser\n\t *\n\t * This function will be called to convert incoming data into request.body\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.parse = function parse(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default request body serializer\n\t *\n\t * This function will be called to convert data set via .send or .attach into payload to send\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.serialize = function serialize(fn){\n\t  this._serializer = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.timeout = function timeout(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Promise support\n\t *\n\t * @param {Function} resolve\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\texports.then = function then(resolve, reject) {\n\t  if (!this._fullfilledPromise) {\n\t    var self = this;\n\t    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n\t      self.end(function(err, res){\n\t        if (err) innerReject(err); else innerResolve(res);\n\t      });\n\t    });\n\t  }\n\t  return this._fullfilledPromise.then(resolve, reject);\n\t}\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\texports.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\texports.get = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\texports.getHeader = exports.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\texports.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\texports.field = function(name, val) {\n\t  this._getFormData().append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\texports.abort = function(){\n\t  if (this._aborted) {\n\t    return this;\n\t  }\n\t  this._aborted = true;\n\t  this.xhr && this.xhr.abort(); // browser\n\t  this.req && this.req.abort(); // node\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\texports.withCredentials = function(){\n\t  // This is browser-only functionality. Node side is no-op.\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the max redirects to `n`. Does noting in browser XHR implementation.\n\t *\n\t * @param {Number} n\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.redirects = function(n){\n\t  this._maxRedirects = n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Convert to a plain javascript object (not JSON string) of scalar properties.\n\t * Note as this method is designed to return a useful non-this value,\n\t * it cannot be chained.\n\t *\n\t * @return {Object} describing method, url, and data of this request\n\t * @api public\n\t */\n\t\n\texports.toJSON = function(){\n\t  return {\n\t    method: this.method,\n\t    url: this.url,\n\t    data: this._data,\n\t    headers: this._header\n\t  };\n\t};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\texports._isHost = function _isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t *      request.post('/user')\n\t *        .send('name=tobi')\n\t *        .send('species=ferret')\n\t *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    // default to x-www-form-urlencoded\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || this._isHost(data)) return this;\n\t\n\t  // default to json\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null !== obj && 'object' === typeof obj;\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t// The node and browser modules expose versions of this with the\n\t// appropriate constructor function bound as first argument\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(RequestConstructor, method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new RequestConstructor('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (2 == arguments.length) {\n\t    return new RequestConstructor('GET', method);\n\t  }\n\t\n\t  return new RequestConstructor(method, url);\n\t}\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(24));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Initialization and round constants tables\n\t\t    var H = [];\n\t\t    var K = [];\n\t\n\t\t    // Compute constants\n\t\t    (function () {\n\t\t        function isPrime(n) {\n\t\t            var sqrtN = Math.sqrt(n);\n\t\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t\t                if (!(n % factor)) {\n\t\t                    return false;\n\t\t                }\n\t\t            }\n\t\n\t\t            return true;\n\t\t        }\n\t\n\t\t        function getFractionalBits(n) {\n\t\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t\t        }\n\t\n\t\t        var n = 2;\n\t\t        var nPrime = 0;\n\t\t        while (nPrime < 64) {\n\t\t            if (isPrime(n)) {\n\t\t                if (nPrime < 8) {\n\t\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t\t                }\n\t\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\t\n\t\t                nPrime++;\n\t\t            }\n\t\n\t\t            n++;\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Reusable object\n\t\t    var W = [];\n\t\n\t\t    /**\n\t\t     * SHA-256 hash algorithm.\n\t\t     */\n\t\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init(H.slice(0));\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var H = this._hash.words;\n\t\n\t\t            // Working variables\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\t            var e = H[4];\n\t\t            var f = H[5];\n\t\t            var g = H[6];\n\t\t            var h = H[7];\n\t\n\t\t            // Computation\n\t\t            for (var i = 0; i < 64; i++) {\n\t\t                if (i < 16) {\n\t\t                    W[i] = M[offset + i] | 0;\n\t\t                } else {\n\t\t                    var gamma0x = W[i - 15];\n\t\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t\t                                   (gamma0x >>> 3);\n\t\n\t\t                    var gamma1x = W[i - 2];\n\t\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t\t                                   (gamma1x >>> 10);\n\t\n\t\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t\t                }\n\t\n\t\t                var ch  = (e & f) ^ (~e & g);\n\t\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\t\n\t\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\t\n\t\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t\t                var t2 = sigma0 + maj;\n\t\n\t\t                h = g;\n\t\t                g = f;\n\t\t                f = e;\n\t\t                e = (d + t1) | 0;\n\t\t                d = c;\n\t\t                c = b;\n\t\t                b = a;\n\t\t                a = (t1 + t2) | 0;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t            H[4] = (H[4] + e) | 0;\n\t\t            H[5] = (H[5] + f) | 0;\n\t\t            H[6] = (H[6] + g) | 0;\n\t\t            H[7] = (H[7] + h) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Return final computed hash\n\t\t            return this._hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA256('message');\n\t\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t\t     */\n\t\t    C.SHA256 = Hasher._createHelper(SHA256);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t\t     */\n\t\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.SHA256;\n\t\n\t}));\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory();\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\troot.CryptoJS = factory();\n\t\t}\n\t}(this, function () {\n\t\n\t\t/**\n\t\t * CryptoJS core components.\n\t\t */\n\t\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t\t    /**\n\t\t     * CryptoJS namespace.\n\t\t     */\n\t\t    var C = {};\n\t\n\t\t    /**\n\t\t     * Library namespace.\n\t\t     */\n\t\t    var C_lib = C.lib = {};\n\t\n\t\t    /**\n\t\t     * Base object for prototypal inheritance.\n\t\t     */\n\t\t    var Base = C_lib.Base = (function () {\n\t\t        function F() {}\n\t\n\t\t        return {\n\t\t            /**\n\t\t             * Creates a new object that inherits from this object.\n\t\t             *\n\t\t             * @param {Object} overrides Properties to copy into the new object.\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         field: 'value',\n\t\t             *\n\t\t             *         method: function () {\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            extend: function (overrides) {\n\t\t                // Spawn\n\t\t                F.prototype = this;\n\t\t                var subtype = new F();\n\t\n\t\t                // Augment\n\t\t                if (overrides) {\n\t\t                    subtype.mixIn(overrides);\n\t\t                }\n\t\n\t\t                // Create default initializer\n\t\t                if (!subtype.hasOwnProperty('init')) {\n\t\t                    subtype.init = function () {\n\t\t                        subtype.$super.init.apply(this, arguments);\n\t\t                    };\n\t\t                }\n\t\n\t\t                // Initializer's prototype is the subtype object\n\t\t                subtype.init.prototype = subtype;\n\t\n\t\t                // Reference supertype\n\t\t                subtype.$super = this;\n\t\n\t\t                return subtype;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Extends this object and runs the init method.\n\t\t             * Arguments to create() will be passed to init().\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var instance = MyType.create();\n\t\t             */\n\t\t            create: function () {\n\t\t                var instance = this.extend();\n\t\t                instance.init.apply(instance, arguments);\n\t\n\t\t                return instance;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Initializes a newly created object.\n\t\t             * Override this method to add some logic when your objects are created.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         init: function () {\n\t\t             *             // ...\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            init: function () {\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Copies properties into this object.\n\t\t             *\n\t\t             * @param {Object} properties The properties to mix in.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     MyType.mixIn({\n\t\t             *         field: 'value'\n\t\t             *     });\n\t\t             */\n\t\t            mixIn: function (properties) {\n\t\t                for (var propertyName in properties) {\n\t\t                    if (properties.hasOwnProperty(propertyName)) {\n\t\t                        this[propertyName] = properties[propertyName];\n\t\t                    }\n\t\t                }\n\t\n\t\t                // IE won't copy toString using the loop above\n\t\t                if (properties.hasOwnProperty('toString')) {\n\t\t                    this.toString = properties.toString;\n\t\t                }\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Creates a copy of this object.\n\t\t             *\n\t\t             * @return {Object} The clone.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var clone = instance.clone();\n\t\t             */\n\t\t            clone: function () {\n\t\t                return this.init.prototype.extend(this);\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * An array of 32-bit words.\n\t\t     *\n\t\t     * @property {Array} words The array of 32-bit words.\n\t\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t\t     */\n\t\t    var WordArray = C_lib.WordArray = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created word array.\n\t\t         *\n\t\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t\t         */\n\t\t        init: function (words, sigBytes) {\n\t\t            words = this.words = words || [];\n\t\n\t\t            if (sigBytes != undefined) {\n\t\t                this.sigBytes = sigBytes;\n\t\t            } else {\n\t\t                this.sigBytes = words.length * 4;\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this word array to a string.\n\t\t         *\n\t\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t\t         *\n\t\t         * @return {string} The stringified word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var string = wordArray + '';\n\t\t         *     var string = wordArray.toString();\n\t\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t\t         */\n\t\t        toString: function (encoder) {\n\t\t            return (encoder || Hex).stringify(this);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Concatenates a word array to this word array.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array to append.\n\t\t         *\n\t\t         * @return {WordArray} This word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray1.concat(wordArray2);\n\t\t         */\n\t\t        concat: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var thisWords = this.words;\n\t\t            var thatWords = wordArray.words;\n\t\t            var thisSigBytes = this.sigBytes;\n\t\t            var thatSigBytes = wordArray.sigBytes;\n\t\n\t\t            // Clamp excess bits\n\t\t            this.clamp();\n\t\n\t\t            // Concat\n\t\t            if (thisSigBytes % 4) {\n\t\t                // Copy one byte at a time\n\t\t                for (var i = 0; i < thatSigBytes; i++) {\n\t\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t\t                }\n\t\t            } else {\n\t\t                // Copy one word at a time\n\t\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t\t                }\n\t\t            }\n\t\t            this.sigBytes += thatSigBytes;\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Removes insignificant bits.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray.clamp();\n\t\t         */\n\t\t        clamp: function () {\n\t\t            // Shortcuts\n\t\t            var words = this.words;\n\t\t            var sigBytes = this.sigBytes;\n\t\n\t\t            // Clamp\n\t\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t\t            words.length = Math.ceil(sigBytes / 4);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this word array.\n\t\t         *\n\t\t         * @return {WordArray} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = wordArray.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone.words = this.words.slice(0);\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a word array filled with random bytes.\n\t\t         *\n\t\t         * @param {number} nBytes The number of random bytes to generate.\n\t\t         *\n\t\t         * @return {WordArray} The random word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t\t         */\n\t\t        random: function (nBytes) {\n\t\t            var words = [];\n\t\n\t\t            var r = (function (m_w) {\n\t\t                var m_w = m_w;\n\t\t                var m_z = 0x3ade68b1;\n\t\t                var mask = 0xffffffff;\n\t\n\t\t                return function () {\n\t\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t\t                    result /= 0x100000000;\n\t\t                    result += 0.5;\n\t\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t\t                }\n\t\t            });\n\t\n\t\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\t\n\t\t                rcache = _r() * 0x3ade67b7;\n\t\t                words.push((_r() * 0x100000000) | 0);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, nBytes);\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Encoder namespace.\n\t\t     */\n\t\t    var C_enc = C.enc = {};\n\t\n\t\t    /**\n\t\t     * Hex encoding strategy.\n\t\t     */\n\t\t    var Hex = C_enc.Hex = {\n\t\t        /**\n\t\t         * Converts a word array to a hex string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The hex string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var hexChars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                hexChars.push((bite >>> 4).toString(16));\n\t\t                hexChars.push((bite & 0x0f).toString(16));\n\t\t            }\n\t\n\t\t            return hexChars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a hex string to a word array.\n\t\t         *\n\t\t         * @param {string} hexStr The hex string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t\t         */\n\t\t        parse: function (hexStr) {\n\t\t            // Shortcut\n\t\t            var hexStrLength = hexStr.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, hexStrLength / 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Latin1 encoding strategy.\n\t\t     */\n\t\t    var Latin1 = C_enc.Latin1 = {\n\t\t        /**\n\t\t         * Converts a word array to a Latin1 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The Latin1 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var latin1Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                latin1Chars.push(String.fromCharCode(bite));\n\t\t            }\n\t\n\t\t            return latin1Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a Latin1 string to a word array.\n\t\t         *\n\t\t         * @param {string} latin1Str The Latin1 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t\t         */\n\t\t        parse: function (latin1Str) {\n\t\t            // Shortcut\n\t\t            var latin1StrLength = latin1Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < latin1StrLength; i++) {\n\t\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, latin1StrLength);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * UTF-8 encoding strategy.\n\t\t     */\n\t\t    var Utf8 = C_enc.Utf8 = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-8 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-8 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            try {\n\t\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t\t            } catch (e) {\n\t\t                throw new Error('Malformed UTF-8 data');\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-8 string to a word array.\n\t\t         *\n\t\t         * @param {string} utf8Str The UTF-8 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t\t         */\n\t\t        parse: function (utf8Str) {\n\t\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Abstract buffered block algorithm template.\n\t\t     *\n\t\t     * The property blockSize must be implemented in a concrete subtype.\n\t\t     *\n\t\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t\t     */\n\t\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t\t        /**\n\t\t         * Resets this block algorithm's data buffer to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Initial values\n\t\t            this._data = new WordArray.init();\n\t\t            this._nDataBytes = 0;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Adds new data to this block algorithm's buffer.\n\t\t         *\n\t\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm._append('data');\n\t\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t\t         */\n\t\t        _append: function (data) {\n\t\t            // Convert string to WordArray, else assume WordArray already\n\t\t            if (typeof data == 'string') {\n\t\t                data = Utf8.parse(data);\n\t\t            }\n\t\n\t\t            // Append\n\t\t            this._data.concat(data);\n\t\t            this._nDataBytes += data.sigBytes;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Processes available data blocks.\n\t\t         *\n\t\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t\t         *\n\t\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t\t         *\n\t\t         * @return {WordArray} The processed data.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t\t         */\n\t\t        _process: function (doFlush) {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\t            var dataSigBytes = data.sigBytes;\n\t\t            var blockSize = this.blockSize;\n\t\t            var blockSizeBytes = blockSize * 4;\n\t\n\t\t            // Count blocks ready\n\t\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t\t            if (doFlush) {\n\t\t                // Round up to include partial blocks\n\t\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t\t            } else {\n\t\t                // Round down to include only full blocks,\n\t\t                // less the number of blocks that must remain in the buffer\n\t\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t\t            }\n\t\n\t\t            // Count words ready\n\t\t            var nWordsReady = nBlocksReady * blockSize;\n\t\n\t\t            // Count bytes ready\n\t\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\t\n\t\t            // Process blocks\n\t\t            if (nWordsReady) {\n\t\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t\t                    // Perform concrete-algorithm logic\n\t\t                    this._doProcessBlock(dataWords, offset);\n\t\t                }\n\t\n\t\t                // Remove processed words\n\t\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t\t                data.sigBytes -= nBytesReady;\n\t\t            }\n\t\n\t\t            // Return processed words\n\t\t            return new WordArray.init(processedWords, nBytesReady);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this object.\n\t\t         *\n\t\t         * @return {Object} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone._data = this._data.clone();\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        _minBufferSize: 0\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Abstract hasher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t\t     */\n\t\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         */\n\t\t        cfg: Base.extend(),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created hasher.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            // Apply config defaults\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this hasher to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Reset data buffer\n\t\t            BufferedBlockAlgorithm.reset.call(this);\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            this._doReset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Updates this hasher with a message.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate The message to append.\n\t\t         *\n\t\t         * @return {Hasher} This hasher.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.update('message');\n\t\t         *     hasher.update(wordArray);\n\t\t         */\n\t\t        update: function (messageUpdate) {\n\t\t            // Append\n\t\t            this._append(messageUpdate);\n\t\n\t\t            // Update the hash\n\t\t            this._process();\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the hash computation.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t\t         *\n\t\t         * @return {WordArray} The hash.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hash = hasher.finalize();\n\t\t         *     var hash = hasher.finalize('message');\n\t\t         *     var hash = hasher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (messageUpdate) {\n\t\t            // Final message update\n\t\t            if (messageUpdate) {\n\t\t                this._append(messageUpdate);\n\t\t            }\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            var hash = this._doFinalize();\n\t\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        blockSize: 512/32,\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to a hasher's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHelper: function (hasher) {\n\t\t            return function (message, cfg) {\n\t\t                return new hasher.init(cfg).finalize(message);\n\t\t            };\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to the HMAC's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHmacHelper: function (hasher) {\n\t\t            return function (message, key) {\n\t\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t\t            };\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Algorithm namespace.\n\t\t     */\n\t\t    var C_algo = C.algo = {};\n\t\n\t\t    return C;\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _loglevel = __webpack_require__(26);\n\t\n\tvar _loglevel2 = _interopRequireDefault(_loglevel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar originalFactory = _loglevel2.default.methodFactory;\n\t\n\t_loglevel2.default.methodFactory = function (methodName, logLevel) {\n\t  var rawMethod = originalFactory(methodName, logLevel);\n\t\n\t  return function (message) {\n\t    rawMethod('Telepat: ' + message);\n\t  };\n\t};\n\t_loglevel2.default.setLevel('warn');\n\t\n\texports.default = _loglevel2.default;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t* loglevel - https://github.com/pimterry/loglevel\n\t*\n\t* Copyright (c) 2013 Tim Perry\n\t* Licensed under the MIT license.\n\t*/\n\t(function (root, definition) {\n\t    \"use strict\";\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t        module.exports = definition();\n\t    } else {\n\t        root.log = definition();\n\t    }\n\t}(this, function () {\n\t    \"use strict\";\n\t    var noop = function() {};\n\t    var undefinedType = \"undefined\";\n\t\n\t    function realMethod(methodName) {\n\t        if (typeof console === undefinedType) {\n\t            return false; // We can't build a real method without a console to log to\n\t        } else if (console[methodName] !== undefined) {\n\t            return bindMethod(console, methodName);\n\t        } else if (console.log !== undefined) {\n\t            return bindMethod(console, 'log');\n\t        } else {\n\t            return noop;\n\t        }\n\t    }\n\t\n\t    function bindMethod(obj, methodName) {\n\t        var method = obj[methodName];\n\t        if (typeof method.bind === 'function') {\n\t            return method.bind(obj);\n\t        } else {\n\t            try {\n\t                return Function.prototype.bind.call(method, obj);\n\t            } catch (e) {\n\t                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n\t                return function() {\n\t                    return Function.prototype.apply.apply(method, [obj, arguments]);\n\t                };\n\t            }\n\t        }\n\t    }\n\t\n\t    // these private functions always need `this` to be set properly\n\t\n\t    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n\t        return function () {\n\t            if (typeof console !== undefinedType) {\n\t                replaceLoggingMethods.call(this, level, loggerName);\n\t                this[methodName].apply(this, arguments);\n\t            }\n\t        };\n\t    }\n\t\n\t    function replaceLoggingMethods(level, loggerName) {\n\t        /*jshint validthis:true */\n\t        for (var i = 0; i < logMethods.length; i++) {\n\t            var methodName = logMethods[i];\n\t            this[methodName] = (i < level) ?\n\t                noop :\n\t                this.methodFactory(methodName, level, loggerName);\n\t        }\n\t    }\n\t\n\t    function defaultMethodFactory(methodName, level, loggerName) {\n\t        /*jshint validthis:true */\n\t        return realMethod(methodName) ||\n\t               enableLoggingWhenConsoleArrives.apply(this, arguments);\n\t    }\n\t\n\t    var logMethods = [\n\t        \"trace\",\n\t        \"debug\",\n\t        \"info\",\n\t        \"warn\",\n\t        \"error\"\n\t    ];\n\t\n\t    function Logger(name, defaultLevel, factory) {\n\t      var self = this;\n\t      var currentLevel;\n\t      var storageKey = \"loglevel\";\n\t      if (name) {\n\t        storageKey += \":\" + name;\n\t      }\n\t\n\t      function persistLevelIfPossible(levelNum) {\n\t          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\t\n\t          // Use localStorage if available\n\t          try {\n\t              window.localStorage[storageKey] = levelName;\n\t              return;\n\t          } catch (ignore) {}\n\t\n\t          // Use session cookie as fallback\n\t          try {\n\t              window.document.cookie =\n\t                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n\t          } catch (ignore) {}\n\t      }\n\t\n\t      function getPersistedLevel() {\n\t          var storedLevel;\n\t\n\t          try {\n\t              storedLevel = window.localStorage[storageKey];\n\t          } catch (ignore) {}\n\t\n\t          if (typeof storedLevel === undefinedType) {\n\t              try {\n\t                  var cookie = window.document.cookie;\n\t                  var location = cookie.indexOf(\n\t                      encodeURIComponent(storageKey) + \"=\");\n\t                  if (location) {\n\t                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n\t                  }\n\t              } catch (ignore) {}\n\t          }\n\t\n\t          // If the stored level is not valid, treat it as if nothing was stored.\n\t          if (self.levels[storedLevel] === undefined) {\n\t              storedLevel = undefined;\n\t          }\n\t\n\t          return storedLevel;\n\t      }\n\t\n\t      /*\n\t       *\n\t       * Public API\n\t       *\n\t       */\n\t\n\t      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n\t          \"ERROR\": 4, \"SILENT\": 5};\n\t\n\t      self.methodFactory = factory || defaultMethodFactory;\n\t\n\t      self.getLevel = function () {\n\t          return currentLevel;\n\t      };\n\t\n\t      self.setLevel = function (level, persist) {\n\t          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n\t              level = self.levels[level.toUpperCase()];\n\t          }\n\t          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n\t              currentLevel = level;\n\t              if (persist !== false) {  // defaults to true\n\t                  persistLevelIfPossible(level);\n\t              }\n\t              replaceLoggingMethods.call(self, level, name);\n\t              if (typeof console === undefinedType && level < self.levels.SILENT) {\n\t                  return \"No console available for logging\";\n\t              }\n\t          } else {\n\t              throw \"log.setLevel() called with invalid level: \" + level;\n\t          }\n\t      };\n\t\n\t      self.setDefaultLevel = function (level) {\n\t          if (!getPersistedLevel()) {\n\t              self.setLevel(level, false);\n\t          }\n\t      };\n\t\n\t      self.enableAll = function(persist) {\n\t          self.setLevel(self.levels.TRACE, persist);\n\t      };\n\t\n\t      self.disableAll = function(persist) {\n\t          self.setLevel(self.levels.SILENT, persist);\n\t      };\n\t\n\t      // Initialize with the right level\n\t      var initialLevel = getPersistedLevel();\n\t      if (initialLevel == null) {\n\t          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\t      }\n\t      self.setLevel(initialLevel, false);\n\t    }\n\t\n\t    /*\n\t     *\n\t     * Package-level API\n\t     *\n\t     */\n\t\n\t    var defaultLogger = new Logger();\n\t\n\t    var _loggersByName = {};\n\t    defaultLogger.getLogger = function getLogger(name) {\n\t        if (typeof name !== \"string\" || name === \"\") {\n\t          throw new TypeError(\"You must supply a name when creating a logger.\");\n\t        }\n\t\n\t        var logger = _loggersByName[name];\n\t        if (!logger) {\n\t          logger = _loggersByName[name] = new Logger(\n\t            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n\t        }\n\t        return logger;\n\t    };\n\t\n\t    // Grab the current global log variable in case of overwrite\n\t    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n\t    defaultLogger.noConflict = function() {\n\t        if (typeof window !== undefinedType &&\n\t               window.log === defaultLogger) {\n\t            window.log = _log;\n\t        }\n\t\n\t        return defaultLogger;\n\t    };\n\t\n\t    return defaultLogger;\n\t}));\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = error;\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction error(string) {\n\t  _logger2.default.error(string);\n\t  return new Error(string);\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Event = function () {\n\t  function Event() {\n\t    _classCallCheck(this, Event);\n\t\n\t    this.eventFunctions = {};\n\t  }\n\t\n\t  _createClass(Event, [{\n\t    key: 'on',\n\t    value: function on(name, callback) {\n\t      if (_typeof(this.eventFunctions[name]) !== 'object') {\n\t        this.eventFunctions[name] = {};\n\t      }\n\t\n\t      var index = Date.now() + Object.keys(this.eventFunctions[name]).length;\n\t\n\t      this.eventFunctions[name][index] = callback;\n\t      return index;\n\t    }\n\t  }, {\n\t    key: 'removeCallback',\n\t    value: function removeCallback(name, index) {\n\t      delete this.eventFunctions[name][index];\n\t    }\n\t  }, {\n\t    key: 'emit',\n\t    value: function emit(args) {\n\t      _logger2.default.debug('Emitting ' + arguments[0] + ' event');\n\t      var params = Array.prototype.slice.call(arguments);\n\t\n\t      params.shift();\n\t      if (typeof this.eventFunctions[arguments[0]] !== 'undefined') {\n\t        var callbacks = this.eventFunctions[arguments[0]];\n\t\n\t        for (var index in callbacks) {\n\t          callbacks[index].apply(this, params);\n\t        }\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Event;\n\t}();\n\t\n\texports.default = Event;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _event = __webpack_require__(28);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _api = __webpack_require__(17);\n\t\n\tvar _api2 = _interopRequireDefault(_api);\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _error = __webpack_require__(27);\n\t\n\tvar _error2 = _interopRequireDefault(_error);\n\t\n\tvar _jsondiffpatch = __webpack_require__(30);\n\t\n\tvar _jsondiffpatch2 = _interopRequireDefault(_jsondiffpatch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar jsondiffpatch = _jsondiffpatch2.default.create({\n\t  objectHash: function objectHash(obj) {\n\t    if (obj.id) {\n\t      return obj.id;\n\t    }\n\t    return JSON.stringify(obj);\n\t  }, textDiff: {\n\t    minLength: 10000\n\t  }\n\t});\n\t\n\tvar Monitor = function () {\n\t  function Monitor() {\n\t    var interval = arguments.length <= 0 || arguments[0] === undefined ? 150 : arguments[0];\n\t\n\t    _classCallCheck(this, Monitor);\n\t\n\t    function objectPropertyTrimFilter(context) {\n\t      function trimObject(obj) {\n\t        var trimmedObject = {};\n\t\n\t        for (var name in obj) {\n\t          if (name.slice(0, 2) !== '$$' && typeof obj[name] !== 'function') {\n\t            trimmedObject[name] = obj[name];\n\t          }\n\t        }\n\t        return trimmedObject;\n\t      }\n\t      if (!context.leftIsArray && context.leftType === 'object') {\n\t        context.left = trimObject(context.left);\n\t      }\n\t      if (!context.rightIsArray && context.rightType === 'object') {\n\t        context.right = trimObject(context.right);\n\t      }\n\t    }\n\t\n\t    jsondiffpatch.processor.pipes.diff.before('objects', objectPropertyTrimFilter);\n\t\n\t    this._updateRunning = false;\n\t    this._processingPatch = false;\n\t    this._timer = null;\n\t    this._lastObjects = {};\n\t    this._events = {};\n\t\n\t    this.objects = {};\n\t    this.options = {};\n\t    this.callbacks = {};\n\t    this.timerInterval = interval;\n\t  }\n\t\n\t  _createClass(Monitor, [{\n\t    key: 'remove',\n\t    value: function remove(subscriptionOptions) {\n\t      var subscriptionKey = Monitor.subscriptionKeyForOptions(subscriptionOptions);\n\t\n\t      delete this.objects[subscriptionKey];\n\t      delete this._lastObjects[subscriptionKey];\n\t      delete this.options[subscriptionKey];\n\t      delete this.callbacks[subscriptionKey];\n\t      delete this._events[subscriptionKey];\n\t    }\n\t  }, {\n\t    key: 'add',\n\t    value: function add(subscriptionOptions, objects, event, addCallback, removeCallback, updateCallback) {\n\t      var self = this;\n\t\n\t      function processDeltaObject(object) {\n\t        if (Array.isArray(object) || object['_t'] === 'a') {\n\t          return true;\n\t        }\n\t        for (var key in object) {\n\t          if (_typeof(object[key]) === 'object' && processDeltaObject(object[key])) {\n\t            delete object[key];\n\t          }\n\t        }\n\t        if (Object.keys(object).length === 0) {\n\t          return true;\n\t        }\n\t        return false;\n\t      }\n\t\n\t      function timerFunction() {\n\t        if (self._processingPatch || self._updateRunning) {\n\t          return;\n\t        }\n\t        var totalDiff = jsondiffpatch.diff(self._lastObjects, self.objects);\n\t\n\t        if (totalDiff !== undefined) {\n\t          _logger2.default.debug('Found diff: ' + JSON.stringify(totalDiff));\n\t          for (var subKey in totalDiff) {\n\t            var root = self._lastObjects[subKey];\n\t            var diff = totalDiff[subKey];\n\t            var options = self.options[subKey];\n\t            var callbacks = self.callbacks[subKey];\n\t            var diffKeys = Object.keys(diff);\n\t\n\t            for (var i = 0; i < diffKeys.length; i++) {\n\t              var key = diffKeys[i];\n\t\n\t              if (key !== '_t') {\n\t                var obj = diff[key];\n\t\n\t                if (Array.isArray(obj)) {\n\t                  if (obj.length === 1) {\n\t                    callbacks.add(self.objects[subKey][key]);\n\t                    delete root[key];\n\t                    delete self.objects[subKey][key];\n\t                    _logger2.default.debug('Adding object to ' + subKey + ' channel');\n\t                  } else if (obj.length === 3) {\n\t                    callbacks.remove(key);\n\t                    delete root[key];\n\t                    _logger2.default.debug('Removing object from ' + subKey + ' channel');\n\t                  }\n\t                } else {\n\t                  var objKeys = Object.keys(obj);\n\t                  var patch = [];\n\t                  var publicKey = key;\n\t\n\t                  if (Array.isArray(self.objects[subKey]) && self.objects[subKey][key].id) {\n\t                    publicKey = self.objects[subKey][key].id;\n\t                  }\n\t\n\t                  for (var j = 0; j < objKeys.length; j++) {\n\t                    var objKey = objKeys[j];\n\t                    var delta = obj[objKey];\n\t\n\t                    if (!processDeltaObject(delta)) {\n\t                      if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {\n\t                        patch.push({ 'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': self.objects[subKey][key][objKey] });\n\t                        _logger2.default.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n\t                      } else if (delta.length === 1) {\n\t                        patch.push({ 'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': delta[0] });\n\t                        _logger2.default.debug('Added ' + objKey + ' property to object ' + key + ', ' + options.channel.model + ' channel');\n\t                      } else if (delta.length === 2) {\n\t                        patch.push({ 'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': delta[1] });\n\t                        _logger2.default.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n\t                      } else if (delta.length === 3) {\n\t                        _logger2.default.info('Removing object properties is not supported in this version. Try setting to an empty value instead.');\n\t                      }\n\t                    } else {\n\t                      patch.push({ 'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': self.objects[subKey][key][objKey] });\n\t                      _logger2.default.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n\t                    }\n\t\n\t                    root[key][objKey] = JSON.parse(JSON.stringify(self.objects[subKey][key][objKey]));\n\t                  }\n\t\n\t                  if (patch.length) {\n\t                    callbacks.update(publicKey, patch);\n\t                  }\n\t                  _logger2.default.debug('Sending patch to object ' + key + ' on ' + options.channel.model + ' channel: ' + JSON.stringify(patch));\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      var subscriptionKey = Monitor.subscriptionKeyForOptions(subscriptionOptions);\n\t\n\t      this.objects[subscriptionKey] = objects;\n\t      this.options[subscriptionKey] = subscriptionOptions;\n\t      this.callbacks[subscriptionKey] = {\n\t        add: addCallback,\n\t        remove: removeCallback,\n\t        update: updateCallback\n\t      };\n\t      this._events[subscriptionKey] = event;\n\t      this._lastObjects[subscriptionKey] = JSON.parse(JSON.stringify(this.objects[subscriptionKey]));\n\t\n\t      if (this._timer === null) {\n\t        this._timer = setInterval(timerFunction, this.timerInterval);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'processMessage',\n\t\n\t\n\t    // ## Getting notified of object modifications\n\t    // Use the `Channel.on('update', ...)` function to subscribe to object updates.\n\t    //  This will only notify you of changes received from the 'outside' - you'll only see events when the backend\n\t    //  notifies the client that there are updates available, either made by you or by someone else.\n\t    //\n\t    //     Channel.on('update', function(operation, parentId, parentObject, delta) {\n\t    //       // operation can be one of 'replace', 'delete' or 'add'.\n\t    //       // parentId is the id of the Telepat object being modified.\n\t    //       // parentObject is the Telepat object being modified.\n\t    //       // delta is available just for the 'replace' operation, and is an object that contains two properties:\n\t    //  'path' (the name of the modified property on the object) and 'oldValue'.\n\t    //     });\n\t\n\t    value: function processMessage(message) {\n\t      var self = this;\n\t\n\t      function process(operation) {\n\t        var oldValue, root, lastRoot, event, subscription, pathComponents, parent;\n\t\n\t        if (true) {\n\t          // eslint-disable-line no-undef\n\t          if (self.objects.hasOwnProperty(operation.subscription)) {\n\t            root = self.objects[operation.subscription];\n\t            lastRoot = self._lastObjects[operation.subscription];\n\t            event = self._events[operation.subscription];\n\t\n\t            if (operation.hasOwnProperty('path')) {\n\t              pathComponents = operation.path.split('/');\n\t\n\t              if (operation.hasOwnProperty('op')) {\n\t                if (operation.op === 'replace') {\n\t                  if (!root.hasOwnProperty(pathComponents[1])) {\n\t                    self._event.emit('error', (0, _error2.default)('Object id doesn\\'t exist ' + operation));\n\t                  } else if (operation.hasOwnProperty('value')) {\n\t                    parent = root[pathComponents[1]];\n\t\n\t                    oldValue = parent[pathComponents[2]];\n\t                    parent[pathComponents[2]] = operation.value;\n\t                    lastRoot[pathComponents[1]][pathComponents[2]] = JSON.parse(JSON.stringify(operation.value));\n\t                    event.emit('update', 'replace', pathComponents[1], parent, { path: pathComponents[2], oldValue: oldValue });\n\t                    _logger2.default.debug('Replaced property ' + pathComponents[2] + ' of object id ' + pathComponents[1] + ' with  value ' + operation.value);\n\t                  } else {\n\t                    event.emit('error', (0, _error2.default)('Invalid operation ' + operation));\n\t                  }\n\t                } else if (operation.op === 'delete') {\n\t                  oldValue = root[pathComponents[1]];\n\t                  delete root[pathComponents[1]];\n\t                  delete lastRoot[pathComponents[1]];\n\t                  event.emit('update', 'delete', pathComponents[1], oldValue);\n\t                  _logger2.default.debug('Removed object id ' + pathComponents[1]);\n\t                } else {\n\t                  event.emit('error', (0, _error2.default)('Unsupported operation ' + operation));\n\t                }\n\t              } else {\n\t                event.emit('error', (0, _error2.default)('Invalid operation ' + operation));\n\t              }\n\t            } else {\n\t              if (operation.hasOwnProperty('value') && operation.value.hasOwnProperty('id')) {\n\t                if (!root.hasOwnProperty(operation.value.id)) {\n\t                  operation.value.$$event = new _event2.default(_logger2.default);\n\t                  root[operation.value.id] = operation.value;\n\t                  lastRoot[operation.value.id] = JSON.parse(JSON.stringify(operation.value));\n\t                  event.emit('update', 'add', operation.value.id, operation.value);\n\t                  _logger2.default.debug('Added object with id ' + operation.value.id);\n\t                } else {\n\t                  event.emit('error', (0, _error2.default)('Object id already exists ' + operation));\n\t                }\n\t              } else {\n\t                event.emit('error', (0, _error2.default)('Invalid add operation ' + operation));\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          for (var i = 0; i < operation.subscriptions.length; i++) {\n\t            subscription = operation.subscriptions[i];\n\t\n\t            var subscriptionComponents = subscription.split(':');\n\t\n\t            if (subscriptionComponents[2] === 'context' && subscriptionComponents.length === 4) {\n\t              subscriptionComponents.pop();\n\t              subscription = subscriptionComponents.join(':');\n\t            }\n\t\n\t            root = self.objects[subscription];\n\t            lastRoot = self._lastObjects[subscription];\n\t            event = self._events[subscription];\n\t\n\t            if (root) {\n\t              if (operation.op === 'new') {\n\t                if (!root.hasOwnProperty(operation.object.id)) {\n\t                  operation.object.$$event = new _event2.default(_logger2.default);\n\t                  root[operation.object.id] = operation.object;\n\t                  lastRoot[operation.object.id] = JSON.parse(JSON.stringify(operation.object));\n\t                  event.emit('update', 'add', operation.object.id, operation.object);\n\t                  _logger2.default.debug('Added object with id ' + operation.object.id);\n\t                } else {\n\t                  event.emit('error', (0, _error2.default)('Object id already exists ' + operation));\n\t                }\n\t              } else if (operation.op === 'update') {\n\t                pathComponents = operation.patch.path.split('/');\n\t\n\t                if (!root.hasOwnProperty(pathComponents[1])) {\n\t                  event.emit('error', (0, _error2.default)('Object id doesn\\'t exist ' + operation));\n\t                } else if (operation.patch.hasOwnProperty('value')) {\n\t                  parent = root[pathComponents[1]];\n\t\n\t                  oldValue = parent[pathComponents[2]];\n\t                  parent[pathComponents[2]] = operation.patch.value;\n\t                  lastRoot[pathComponents[1]][pathComponents[2]] = JSON.parse(JSON.stringify(operation.patch.value));\n\t                  event.emit('update', 'replace', pathComponents[1], parent, { path: pathComponents[2], oldValue: oldValue });\n\t                  _logger2.default.debug('Replaced property ' + pathComponents[2] + ' of object id ' + pathComponents[1] + ' with  value ' + operation.patch.value);\n\t                } else {\n\t                  event.emit('error', (0, _error2.default)('Invalid operation ' + operation));\n\t                }\n\t              } else {\n\t                oldValue = root[operation.object.id];\n\t                delete root[operation.object.id];\n\t                delete lastRoot[operation.object.id];\n\t                event.emit('update', 'delete', operation.object.id, oldValue);\n\t                _logger2.default.debug('Removed object id ' + operation.object.id);\n\t              }\n\t            } else {\n\t              _logger2.default.warn('Subscription not found ' + subscription);\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      this._processingPatch = true;\n\t      _logger2.default.debug('Received update: ' + JSON.stringify(message));\n\t      var i, operation;\n\t\n\t      for (i = 0; i < message.data.new.length; i++) {\n\t        operation = message.data.new[i];\n\t        if (false) operation.op = 'new'; // eslint-disable-line no-undef\n\t        process(operation);\n\t      }\n\t      for (i = 0; i < message.data.updated.length; i++) {\n\t        operation = message.data.updated[i];\n\t        if (false) operation.op = 'update'; // eslint-disable-line no-undef\n\t        process(operation);\n\t      }\n\t      for (i = 0; i < message.data.deleted.length; i++) {\n\t        operation = message.data.deleted[i];\n\t        if (false) operation.op = 'remove'; // eslint-disable-line no-undef\n\t        process(operation);\n\t      }\n\t      this._processingPatch = false;\n\t    }\n\t  }], [{\n\t    key: 'subscriptionKeyForOptions',\n\t    value: function subscriptionKeyForOptions(options) {\n\t      var key = 'blg:' + _api2.default.appId;\n\t\n\t      if (!options.channel.id && options.channel.context) {\n\t        key += ':context:' + options.channel.context;\n\t      }\n\t      if (options.channel.parent) {\n\t        key += ':' + options.channel.parent.model + ':' + options.channel.parent.id;\n\t      }\n\t      if (options.channel.user) {\n\t        key += ':users:' + options.channel.user;\n\t      }\n\t      key += ':' + options.channel.model;\n\t      if (options.channel.id) {\n\t        key += ':' + options.channel.id;\n\t      }\n\t      if (options.filters) {\n\t        key += ':filter:' + btoa(JSON.stringify(options.filters)).toString('base64');\n\t      }\n\t      return key;\n\t    }\n\t  }]);\n\t\n\t  return Monitor;\n\t}();\n\t\n\texports.default = Monitor;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar environment = __webpack_require__(31);\n\t\n\tvar DiffPatcher = __webpack_require__(32).DiffPatcher;\n\texports.DiffPatcher = DiffPatcher;\n\t\n\texports.create = function(options){\n\t  return new DiffPatcher(options);\n\t};\n\t\n\texports.dateReviver = __webpack_require__(48);\n\t\n\tvar defaultInstance;\n\t\n\texports.diff = function() {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new DiffPatcher();\n\t  }\n\t  return defaultInstance.diff.apply(defaultInstance, arguments);\n\t};\n\t\n\texports.patch = function() {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new DiffPatcher();\n\t  }\n\t  return defaultInstance.patch.apply(defaultInstance, arguments);\n\t};\n\t\n\texports.unpatch = function() {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new DiffPatcher();\n\t  }\n\t  return defaultInstance.unpatch.apply(defaultInstance, arguments);\n\t};\n\t\n\texports.reverse = function() {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new DiffPatcher();\n\t  }\n\t  return defaultInstance.reverse.apply(defaultInstance, arguments);\n\t};\n\t\n\texports.clone = function() {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new DiffPatcher();\n\t  }\n\t  return defaultInstance.clone.apply(defaultInstance, arguments);\n\t};\n\t\n\t\n\tif (environment.isBrowser) {\n\t  exports.homepage = '{{package-homepage}}';\n\t  exports.version = '{{package-version}}';\n\t} else {\n\t  var packageInfoModuleName = '../package.json';\n\t  var packageInfo = __webpack_require__(49)(packageInfoModuleName);\n\t  exports.homepage = packageInfo.homepage;\n\t  exports.version = packageInfo.version;\n\t\n\t  var formatterModuleName = './formatters';\n\t  var formatters = __webpack_require__(49)(formatterModuleName);\n\t  exports.formatters = formatters;\n\t  // shortcut for console\n\t  exports.console = formatters.console;\n\t}\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t\n\texports.isBrowser = typeof window !== 'undefined';\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Processor = __webpack_require__(33).Processor;\n\tvar Pipe = __webpack_require__(34).Pipe;\n\tvar DiffContext = __webpack_require__(35).DiffContext;\n\tvar PatchContext = __webpack_require__(38).PatchContext;\n\tvar ReverseContext = __webpack_require__(39).ReverseContext;\n\t\n\tvar clone = __webpack_require__(37);\n\t\n\tvar trivial = __webpack_require__(40);\n\tvar nested = __webpack_require__(41);\n\tvar arrays = __webpack_require__(42);\n\tvar dates = __webpack_require__(44);\n\tvar texts = __webpack_require__(45);\n\t\n\tvar DiffPatcher = function DiffPatcher(options) {\n\t  this.processor = new Processor(options);\n\t  this.processor.pipe(new Pipe('diff').append(\n\t    nested.collectChildrenDiffFilter,\n\t    trivial.diffFilter,\n\t    dates.diffFilter,\n\t    texts.diffFilter,\n\t    nested.objectsDiffFilter,\n\t    arrays.diffFilter\n\t  ).shouldHaveResult());\n\t  this.processor.pipe(new Pipe('patch').append(\n\t    nested.collectChildrenPatchFilter,\n\t    arrays.collectChildrenPatchFilter,\n\t    trivial.patchFilter,\n\t    texts.patchFilter,\n\t    nested.patchFilter,\n\t    arrays.patchFilter\n\t  ).shouldHaveResult());\n\t  this.processor.pipe(new Pipe('reverse').append(\n\t    nested.collectChildrenReverseFilter,\n\t    arrays.collectChildrenReverseFilter,\n\t    trivial.reverseFilter,\n\t    texts.reverseFilter,\n\t    nested.reverseFilter,\n\t    arrays.reverseFilter\n\t  ).shouldHaveResult());\n\t};\n\t\n\tDiffPatcher.prototype.options = function() {\n\t  return this.processor.options.apply(this.processor, arguments);\n\t};\n\t\n\tDiffPatcher.prototype.diff = function(left, right) {\n\t  return this.processor.process(new DiffContext(left, right));\n\t};\n\t\n\tDiffPatcher.prototype.patch = function(left, delta) {\n\t  return this.processor.process(new PatchContext(left, delta));\n\t};\n\t\n\tDiffPatcher.prototype.reverse = function(delta) {\n\t  return this.processor.process(new ReverseContext(delta));\n\t};\n\t\n\tDiffPatcher.prototype.unpatch = function(right, delta) {\n\t  return this.patch(right, this.reverse(delta));\n\t};\n\t\n\tDiffPatcher.prototype.clone = function(value) {\n\t  return clone(value);\n\t};\n\t\n\texports.DiffPatcher = DiffPatcher;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t\n\tvar Processor = function Processor(options){\n\t  this.selfOptions = options || {};\n\t  this.pipes = {};\n\t};\n\t\n\tProcessor.prototype.options = function(options) {\n\t  if (options) {\n\t    this.selfOptions = options;\n\t  }\n\t  return this.selfOptions;\n\t};\n\t\n\tProcessor.prototype.pipe = function(name, pipe) {\n\t  if (typeof name === 'string') {\n\t    if (typeof pipe === 'undefined') {\n\t      return this.pipes[name];\n\t    } else {\n\t      this.pipes[name] = pipe;\n\t    }\n\t  }\n\t  if (name && name.name) {\n\t    pipe = name;\n\t    if (pipe.processor === this) { return pipe; }\n\t    this.pipes[pipe.name] = pipe;\n\t  }\n\t  pipe.processor = this;\n\t  return pipe;\n\t};\n\t\n\tProcessor.prototype.process = function(input, pipe) {\n\t  var context = input;\n\t  context.options = this.options();\n\t  var nextPipe = pipe || input.pipe || 'default';\n\t  var lastPipe, lastContext;\n\t  while (nextPipe) {\n\t    if (typeof context.nextAfterChildren !== 'undefined') {\n\t      // children processed and coming back to parent\n\t      context.next = context.nextAfterChildren;\n\t      context.nextAfterChildren = null;\n\t    }\n\t\n\t    if (typeof nextPipe === 'string') {\n\t      nextPipe = this.pipe(nextPipe);\n\t    }\n\t    nextPipe.process(context);\n\t    lastContext = context;\n\t    lastPipe = nextPipe;\n\t    nextPipe = null;\n\t    if (context) {\n\t      if (context.next) {\n\t        context = context.next;\n\t        nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n\t      }\n\t    }\n\t  }\n\t  return context.hasResult ? context.result : undefined;\n\t};\n\t\n\texports.Processor = Processor;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tvar Pipe = function Pipe(name) {\n\t  this.name = name;\n\t  this.filters = [];\n\t};\n\t\n\tPipe.prototype.process = function(input) {\n\t  if (!this.processor) {\n\t    throw new Error('add this pipe to a processor before using it');\n\t  }\n\t  var debug = this.debug;\n\t  var length = this.filters.length;\n\t  var context = input;\n\t  for (var index = 0; index < length; index++) {\n\t    var filter = this.filters[index];\n\t    if (debug) {\n\t      this.log('filter: ' + filter.filterName);\n\t    }\n\t    filter(context);\n\t    if (typeof context === 'object' && context.exiting) {\n\t      context.exiting = false;\n\t      break;\n\t    }\n\t  }\n\t  if (!context.next && this.resultCheck) {\n\t    this.resultCheck(context);\n\t  }\n\t};\n\t\n\tPipe.prototype.log = function(msg) {\n\t  console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n\t};\n\t\n\tPipe.prototype.append = function() {\n\t  this.filters.push.apply(this.filters, arguments);\n\t  return this;\n\t};\n\t\n\tPipe.prototype.prepend = function() {\n\t  this.filters.unshift.apply(this.filters, arguments);\n\t  return this;\n\t};\n\t\n\tPipe.prototype.indexOf = function(filterName) {\n\t  if (!filterName) {\n\t    throw new Error('a filter name is required');\n\t  }\n\t  for (var index = 0; index < this.filters.length; index++) {\n\t    var filter = this.filters[index];\n\t    if (filter.filterName === filterName) {\n\t      return index;\n\t    }\n\t  }\n\t  throw new Error('filter not found: ' + filterName);\n\t};\n\t\n\tPipe.prototype.list = function() {\n\t  var names = [];\n\t  for (var index = 0; index < this.filters.length; index++) {\n\t    var filter = this.filters[index];\n\t    names.push(filter.filterName);\n\t  }\n\t  return names;\n\t};\n\t\n\tPipe.prototype.after = function(filterName) {\n\t  var index = this.indexOf(filterName);\n\t  var params = Array.prototype.slice.call(arguments, 1);\n\t  if (!params.length) {\n\t    throw new Error('a filter is required');\n\t  }\n\t  params.unshift(index + 1, 0);\n\t  Array.prototype.splice.apply(this.filters, params);\n\t  return this;\n\t};\n\t\n\tPipe.prototype.before = function(filterName) {\n\t  var index = this.indexOf(filterName);\n\t  var params = Array.prototype.slice.call(arguments, 1);\n\t  if (!params.length) {\n\t    throw new Error('a filter is required');\n\t  }\n\t  params.unshift(index, 0);\n\t  Array.prototype.splice.apply(this.filters, params);\n\t  return this;\n\t};\n\t\n\tPipe.prototype.clear = function() {\n\t  this.filters.length = 0;\n\t  return this;\n\t};\n\t\n\tPipe.prototype.shouldHaveResult = function(should) {\n\t  if (should === false) {\n\t    this.resultCheck = null;\n\t    return;\n\t  }\n\t  if (this.resultCheck) {\n\t    return;\n\t  }\n\t  var pipe = this;\n\t  this.resultCheck = function(context) {\n\t    if (!context.hasResult) {\n\t      console.log(context);\n\t      var error = new Error(pipe.name + ' failed');\n\t      error.noResult = true;\n\t      throw error;\n\t    }\n\t  };\n\t  return this;\n\t};\n\t\n\texports.Pipe = Pipe;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Context = __webpack_require__(36).Context;\n\tvar defaultClone = __webpack_require__(37);\n\t\n\tvar DiffContext = function DiffContext(left, right) {\n\t  this.left = left;\n\t  this.right = right;\n\t  this.pipe = 'diff';\n\t};\n\t\n\tDiffContext.prototype = new Context();\n\t\n\tDiffContext.prototype.setResult = function(result) {\n\t  if (this.options.cloneDiffValues && typeof result === 'object') {\n\t    var clone = typeof this.options.cloneDiffValues === 'function' ?\n\t      this.options.cloneDiffValues : defaultClone;\n\t    if (typeof result[0] === 'object') {\n\t      result[0] = clone(result[0]);\n\t    }\n\t    if (typeof result[1] === 'object') {\n\t      result[1] = clone(result[1]);\n\t    }\n\t  }\n\t  return Context.prototype.setResult.apply(this, arguments);\n\t};\n\t\n\texports.DiffContext = DiffContext;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tvar Pipe = __webpack_require__(34).Pipe;\n\t\n\tvar Context = function Context(){\n\t};\n\t\n\tContext.prototype.setResult = function(result) {\n\t\tthis.result = result;\n\t\tthis.hasResult = true;\n\t\treturn this;\n\t};\n\t\n\tContext.prototype.exit = function() {\n\t\tthis.exiting = true;\n\t\treturn this;\n\t};\n\t\n\tContext.prototype.switchTo = function(next, pipe) {\n\t\tif (typeof next === 'string' || next instanceof Pipe) {\n\t\t\tthis.nextPipe = next;\n\t\t} else {\n\t\t\tthis.next = next;\n\t\t\tif (pipe) {\n\t\t\t\tthis.nextPipe = pipe;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\t\n\tContext.prototype.push = function(child, name) {\n\t\tchild.parent = this;\n\t\tif (typeof name !== 'undefined') {\n\t\t\tchild.childName = name;\n\t\t}\n\t\tchild.root = this.root || this;\n\t\tchild.options = child.options || this.options;\n\t\tif (!this.children) {\n\t\t\tthis.children = [child];\n\t\t\tthis.nextAfterChildren = this.next || null;\n\t\t\tthis.next = child;\n\t\t} else {\n\t\t\tthis.children[this.children.length - 1].next = child;\n\t\t\tthis.children.push(child);\n\t\t}\n\t\tchild.next = this;\n\t\treturn this;\n\t};\n\t\n\texports.Context = Context;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t\n\tvar isArray = (typeof Array.isArray === 'function') ?\n\t  // use native function\n\t  Array.isArray :\n\t  // use instanceof operator\n\t  function(a) {\n\t    return a instanceof Array;\n\t  };\n\t\n\tfunction cloneRegExp(re) {\n\t  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n\t  return new RegExp(regexMatch[1], regexMatch[2]);\n\t}\n\t\n\tfunction clone(arg) {\n\t  if (typeof arg !== 'object') {\n\t    return arg;\n\t  }\n\t  if (arg === null) {\n\t    return null;\n\t  }\n\t  if (isArray(arg)) {\n\t    return arg.map(clone);\n\t  }\n\t  if (arg instanceof Date) {\n\t    return new Date(arg.getTime());\n\t  }\n\t  if (arg instanceof RegExp) {\n\t    return cloneRegExp(arg);\n\t  }\n\t  var cloned = {};\n\t  for (var name in arg) {\n\t    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n\t      cloned[name] = clone(arg[name]);\n\t    }\n\t  }\n\t  return cloned;\n\t}\n\t\n\tmodule.exports = clone;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Context = __webpack_require__(36).Context;\n\t\n\tvar PatchContext = function PatchContext(left, delta) {\n\t  this.left = left;\n\t  this.delta = delta;\n\t  this.pipe = 'patch';\n\t};\n\t\n\tPatchContext.prototype = new Context();\n\t\n\texports.PatchContext = PatchContext;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Context = __webpack_require__(36).Context;\n\t\n\tvar ReverseContext = function ReverseContext(delta) {\n\t  this.delta = delta;\n\t  this.pipe = 'reverse';\n\t};\n\t\n\tReverseContext.prototype = new Context();\n\t\n\texports.ReverseContext = ReverseContext;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\tvar isArray = (typeof Array.isArray === 'function') ?\n\t  // use native function\n\t  Array.isArray :\n\t  // use instanceof operator\n\t  function(a) {\n\t    return a instanceof Array;\n\t  };\n\t\n\tvar diffFilter = function trivialMatchesDiffFilter(context) {\n\t  if (context.left === context.right) {\n\t    context.setResult(undefined).exit();\n\t    return;\n\t  }\n\t  if (typeof context.left === 'undefined') {\n\t    if (typeof context.right === 'function') {\n\t      throw new Error('functions are not supported');\n\t    }\n\t    context.setResult([context.right]).exit();\n\t    return;\n\t  }\n\t  if (typeof context.right === 'undefined') {\n\t    context.setResult([context.left, 0, 0]).exit();\n\t    return;\n\t  }\n\t  if (typeof context.left === 'function' || typeof context.right === 'function') {\n\t    throw new Error('functions are not supported');\n\t  }\n\t  context.leftType = context.left === null ? 'null' : typeof context.left;\n\t  context.rightType = context.right === null ? 'null' : typeof context.right;\n\t  if (context.leftType !== context.rightType) {\n\t    context.setResult([context.left, context.right]).exit();\n\t    return;\n\t  }\n\t  if (context.leftType === 'boolean' || context.leftType === 'number') {\n\t    context.setResult([context.left, context.right]).exit();\n\t    return;\n\t  }\n\t  if (context.leftType === 'object') {\n\t    context.leftIsArray = isArray(context.left);\n\t  }\n\t  if (context.rightType === 'object') {\n\t    context.rightIsArray = isArray(context.right);\n\t  }\n\t  if (context.leftIsArray !== context.rightIsArray) {\n\t    context.setResult([context.left, context.right]).exit();\n\t    return;\n\t  }\n\t\n\t  if (context.left instanceof RegExp) {\n\t    if (context.right instanceof RegExp) {\n\t      context.setResult([context.left.toString(), context.right.toString()]).exit();\n\t    } else {\n\t      context.setResult([context.left, context.right]).exit();\n\t      return;\n\t    }\n\t  }\n\t};\n\tdiffFilter.filterName = 'trivial';\n\t\n\tvar patchFilter = function trivialMatchesPatchFilter(context) {\n\t  if (typeof context.delta === 'undefined') {\n\t    context.setResult(context.left).exit();\n\t    return;\n\t  }\n\t  context.nested = !isArray(context.delta);\n\t  if (context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta.length === 1) {\n\t    context.setResult(context.delta[0]).exit();\n\t    return;\n\t  }\n\t  if (context.delta.length === 2) {\n\t    if (context.left instanceof RegExp) {\n\t      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n\t      if (regexArgs) {\n\t        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n\t        return;\n\t      }\n\t    }\n\t    context.setResult(context.delta[1]).exit();\n\t    return;\n\t  }\n\t  if (context.delta.length === 3 && context.delta[2] === 0) {\n\t    context.setResult(undefined).exit();\n\t    return;\n\t  }\n\t};\n\tpatchFilter.filterName = 'trivial';\n\t\n\tvar reverseFilter = function trivialReferseFilter(context) {\n\t  if (typeof context.delta === 'undefined') {\n\t    context.setResult(context.delta).exit();\n\t    return;\n\t  }\n\t  context.nested = !isArray(context.delta);\n\t  if (context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta.length === 1) {\n\t    context.setResult([context.delta[0], 0, 0]).exit();\n\t    return;\n\t  }\n\t  if (context.delta.length === 2) {\n\t    context.setResult([context.delta[1], context.delta[0]]).exit();\n\t    return;\n\t  }\n\t  if (context.delta.length === 3 && context.delta[2] === 0) {\n\t    context.setResult([context.delta[0]]).exit();\n\t    return;\n\t  }\n\t};\n\treverseFilter.filterName = 'trivial';\n\t\n\texports.diffFilter = diffFilter;\n\texports.patchFilter = patchFilter;\n\texports.reverseFilter = reverseFilter;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DiffContext = __webpack_require__(35).DiffContext;\n\tvar PatchContext = __webpack_require__(38).PatchContext;\n\tvar ReverseContext = __webpack_require__(39).ReverseContext;\n\t\n\tvar collectChildrenDiffFilter = function collectChildrenDiffFilter(context) {\n\t  if (!context || !context.children) {\n\t    return;\n\t  }\n\t  var length = context.children.length;\n\t  var child;\n\t  var result = context.result;\n\t  for (var index = 0; index < length; index++) {\n\t    child = context.children[index];\n\t    if (typeof child.result === 'undefined') {\n\t      continue;\n\t    }\n\t    result = result || {};\n\t    result[child.childName] = child.result;\n\t  }\n\t  if (result && context.leftIsArray) {\n\t    result._t = 'a';\n\t  }\n\t  context.setResult(result).exit();\n\t};\n\tcollectChildrenDiffFilter.filterName = 'collectChildren';\n\t\n\tvar objectsDiffFilter = function objectsDiffFilter(context) {\n\t  if (context.leftIsArray || context.leftType !== 'object') {\n\t    return;\n\t  }\n\t\n\t  var name, child, propertyFilter = context.options.propertyFilter;\n\t  for (name in context.left) {\n\t    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n\t      continue;\n\t    }\n\t    if (propertyFilter && !propertyFilter(name, context)) {\n\t      continue;\n\t    }\n\t    child = new DiffContext(context.left[name], context.right[name]);\n\t    context.push(child, name);\n\t  }\n\t  for (name in context.right) {\n\t    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n\t      continue;\n\t    }\n\t    if (propertyFilter && !propertyFilter(name, context)) {\n\t      continue;\n\t    }\n\t    if (typeof context.left[name] === 'undefined') {\n\t      child = new DiffContext(undefined, context.right[name]);\n\t      context.push(child, name);\n\t    }\n\t  }\n\t\n\t  if (!context.children || context.children.length === 0) {\n\t    context.setResult(undefined).exit();\n\t    return;\n\t  }\n\t  context.exit();\n\t};\n\tobjectsDiffFilter.filterName = 'objects';\n\t\n\tvar patchFilter = function nestedPatchFilter(context) {\n\t  if (!context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta._t) {\n\t    return;\n\t  }\n\t  var name, child;\n\t  for (name in context.delta) {\n\t    child = new PatchContext(context.left[name], context.delta[name]);\n\t    context.push(child, name);\n\t  }\n\t  context.exit();\n\t};\n\tpatchFilter.filterName = 'objects';\n\t\n\tvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n\t  if (!context || !context.children) {\n\t    return;\n\t  }\n\t  if (context.delta._t) {\n\t    return;\n\t  }\n\t  var length = context.children.length;\n\t  var child;\n\t  for (var index = 0; index < length; index++) {\n\t    child = context.children[index];\n\t    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n\t      delete context.left[child.childName];\n\t    } else if (context.left[child.childName] !== child.result) {\n\t      context.left[child.childName] = child.result;\n\t    }\n\t  }\n\t  context.setResult(context.left).exit();\n\t};\n\tcollectChildrenPatchFilter.filterName = 'collectChildren';\n\t\n\tvar reverseFilter = function nestedReverseFilter(context) {\n\t  if (!context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta._t) {\n\t    return;\n\t  }\n\t  var name, child;\n\t  for (name in context.delta) {\n\t    child = new ReverseContext(context.delta[name]);\n\t    context.push(child, name);\n\t  }\n\t  context.exit();\n\t};\n\treverseFilter.filterName = 'objects';\n\t\n\tvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n\t  if (!context || !context.children) {\n\t    return;\n\t  }\n\t  if (context.delta._t) {\n\t    return;\n\t  }\n\t  var length = context.children.length;\n\t  var child;\n\t  var delta = {};\n\t  for (var index = 0; index < length; index++) {\n\t    child = context.children[index];\n\t    if (delta[child.childName] !== child.result) {\n\t      delta[child.childName] = child.result;\n\t    }\n\t  }\n\t  context.setResult(delta).exit();\n\t};\n\tcollectChildrenReverseFilter.filterName = 'collectChildren';\n\t\n\texports.collectChildrenDiffFilter = collectChildrenDiffFilter;\n\texports.objectsDiffFilter = objectsDiffFilter;\n\texports.patchFilter = patchFilter;\n\texports.collectChildrenPatchFilter = collectChildrenPatchFilter;\n\texports.reverseFilter = reverseFilter;\n\texports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar DiffContext = __webpack_require__(35).DiffContext;\n\tvar PatchContext = __webpack_require__(38).PatchContext;\n\tvar ReverseContext = __webpack_require__(39).ReverseContext;\n\t\n\tvar lcs = __webpack_require__(43);\n\t\n\tvar ARRAY_MOVE = 3;\n\t\n\tvar isArray = (typeof Array.isArray === 'function') ?\n\t  // use native function\n\t  Array.isArray :\n\t  // use instanceof operator\n\t  function(a) {\n\t    return a instanceof Array;\n\t  };\n\t\n\tvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ?\n\t  function(array, item) {\n\t    return array.indexOf(item);\n\t  } : function(array, item) {\n\t    var length = array.length;\n\t    for (var i = 0; i < length; i++) {\n\t      if (array[i] === item) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t\n\tfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n\t  for (var index1 = 0; index1 < len1; index1++) {\n\t    var val1 = array1[index1];\n\t    for (var index2 = 0; index2 < len2; index2++) {\n\t      var val2 = array2[index2];\n\t      if (index1 !== index2 && val1 === val2) {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction matchItems(array1, array2, index1, index2, context) {\n\t  var value1 = array1[index1];\n\t  var value2 = array2[index2];\n\t  if (value1 === value2) {\n\t    return true;\n\t  }\n\t  if (typeof value1 !== 'object' || typeof value2 !== 'object') {\n\t    return false;\n\t  }\n\t  var objectHash = context.objectHash;\n\t  if (!objectHash) {\n\t    // no way to match objects was provided, try match by position\n\t    return context.matchByPosition && index1 === index2;\n\t  }\n\t  var hash1;\n\t  var hash2;\n\t  if (typeof index1 === 'number') {\n\t    context.hashCache1 = context.hashCache1 || [];\n\t    hash1 = context.hashCache1[index1];\n\t    if (typeof hash1 === 'undefined') {\n\t      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n\t    }\n\t  } else {\n\t    hash1 = objectHash(value1);\n\t  }\n\t  if (typeof hash1 === 'undefined') {\n\t    return false;\n\t  }\n\t  if (typeof index2 === 'number') {\n\t    context.hashCache2 = context.hashCache2 || [];\n\t    hash2 = context.hashCache2[index2];\n\t    if (typeof hash2 === 'undefined') {\n\t      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n\t    }\n\t  } else {\n\t    hash2 = objectHash(value2);\n\t  }\n\t  if (typeof hash2 === 'undefined') {\n\t    return false;\n\t  }\n\t  return hash1 === hash2;\n\t}\n\t\n\tvar diffFilter = function arraysDiffFilter(context) {\n\t  if (!context.leftIsArray) {\n\t    return;\n\t  }\n\t\n\t  var matchContext = {\n\t    objectHash: context.options && context.options.objectHash,\n\t    matchByPosition: context.options && context.options.matchByPosition\n\t  };\n\t  var commonHead = 0;\n\t  var commonTail = 0;\n\t  var index;\n\t  var index1;\n\t  var index2;\n\t  var array1 = context.left;\n\t  var array2 = context.right;\n\t  var len1 = array1.length;\n\t  var len2 = array2.length;\n\t\n\t  var child;\n\t\n\t  if (len1 > 0 && len2 > 0 && !matchContext.objectHash &&\n\t    typeof matchContext.matchByPosition !== 'boolean') {\n\t    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n\t  }\n\t\n\t  // separate common head\n\t  while (commonHead < len1 && commonHead < len2 &&\n\t    matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n\t    index = commonHead;\n\t    child = new DiffContext(context.left[index], context.right[index]);\n\t    context.push(child, index);\n\t    commonHead++;\n\t  }\n\t  // separate common tail\n\t  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 &&\n\t    matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n\t    index1 = len1 - 1 - commonTail;\n\t    index2 = len2 - 1 - commonTail;\n\t    child = new DiffContext(context.left[index1], context.right[index2]);\n\t    context.push(child, index2);\n\t    commonTail++;\n\t  }\n\t  var result;\n\t  if (commonHead + commonTail === len1) {\n\t    if (len1 === len2) {\n\t      // arrays are identical\n\t      context.setResult(undefined).exit();\n\t      return;\n\t    }\n\t    // trivial case, a block (1 or more consecutive items) was added\n\t    result = result || {\n\t      _t: 'a'\n\t    };\n\t    for (index = commonHead; index < len2 - commonTail; index++) {\n\t      result[index] = [array2[index]];\n\t    }\n\t    context.setResult(result).exit();\n\t    return;\n\t  }\n\t  if (commonHead + commonTail === len2) {\n\t    // trivial case, a block (1 or more consecutive items) was removed\n\t    result = result || {\n\t      _t: 'a'\n\t    };\n\t    for (index = commonHead; index < len1 - commonTail; index++) {\n\t      result['_' + index] = [array1[index], 0, 0];\n\t    }\n\t    context.setResult(result).exit();\n\t    return;\n\t  }\n\t  // reset hash cache\n\t  delete matchContext.hashCache1;\n\t  delete matchContext.hashCache2;\n\t\n\t  // diff is not trivial, find the LCS (Longest Common Subsequence)\n\t  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n\t  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n\t  var seq = lcs.get(\n\t    trimmed1, trimmed2,\n\t    matchItems,\n\t    matchContext\n\t  );\n\t  var removedItems = [];\n\t  result = result || {\n\t    _t: 'a'\n\t  };\n\t  for (index = commonHead; index < len1 - commonTail; index++) {\n\t    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n\t      // removed\n\t      result['_' + index] = [array1[index], 0, 0];\n\t      removedItems.push(index);\n\t    }\n\t  }\n\t\n\t  var detectMove = true;\n\t  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n\t    detectMove = false;\n\t  }\n\t  var includeValueOnMove = false;\n\t  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n\t    includeValueOnMove = true;\n\t  }\n\t\n\t  var removedItemsLength = removedItems.length;\n\t  for (index = commonHead; index < len2 - commonTail; index++) {\n\t    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n\t    if (indexOnArray2 < 0) {\n\t      // added, try to match with a removed item and register as position move\n\t      var isMove = false;\n\t      if (detectMove && removedItemsLength > 0) {\n\t        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n\t          index1 = removedItems[removeItemIndex1];\n\t          if (matchItems(trimmed1, trimmed2, index1 - commonHead,\n\t            index - commonHead, matchContext)) {\n\t            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n\t            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n\t            if (!includeValueOnMove) {\n\t              // don't include moved value on diff, to save bytes\n\t              result['_' + index1][0] = '';\n\t            }\n\t\n\t            index2 = index;\n\t            child = new DiffContext(context.left[index1], context.right[index2]);\n\t            context.push(child, index2);\n\t            removedItems.splice(removeItemIndex1, 1);\n\t            isMove = true;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      if (!isMove) {\n\t        // added\n\t        result[index] = [array2[index]];\n\t      }\n\t    } else {\n\t      // match, do inner diff\n\t      index1 = seq.indices1[indexOnArray2] + commonHead;\n\t      index2 = seq.indices2[indexOnArray2] + commonHead;\n\t      child = new DiffContext(context.left[index1], context.right[index2]);\n\t      context.push(child, index2);\n\t    }\n\t  }\n\t\n\t  context.setResult(result).exit();\n\t\n\t};\n\tdiffFilter.filterName = 'arrays';\n\t\n\tvar compare = {\n\t  numerically: function(a, b) {\n\t    return a - b;\n\t  },\n\t  numericallyBy: function(name) {\n\t    return function(a, b) {\n\t      return a[name] - b[name];\n\t    };\n\t  }\n\t};\n\t\n\tvar patchFilter = function nestedPatchFilter(context) {\n\t  if (!context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta._t !== 'a') {\n\t    return;\n\t  }\n\t  var index, index1;\n\t\n\t  var delta = context.delta;\n\t  var array = context.left;\n\t\n\t  // first, separate removals, insertions and modifications\n\t  var toRemove = [];\n\t  var toInsert = [];\n\t  var toModify = [];\n\t  for (index in delta) {\n\t    if (index !== '_t') {\n\t      if (index[0] === '_') {\n\t        // removed item from original array\n\t        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n\t          toRemove.push(parseInt(index.slice(1), 10));\n\t        } else {\n\t          throw new Error('only removal or move can be applied at original array indices' +\n\t            ', invalid diff type: ' + delta[index][2]);\n\t        }\n\t      } else {\n\t        if (delta[index].length === 1) {\n\t          // added item at new array\n\t          toInsert.push({\n\t            index: parseInt(index, 10),\n\t            value: delta[index][0]\n\t          });\n\t        } else {\n\t          // modified item at new array\n\t          toModify.push({\n\t            index: parseInt(index, 10),\n\t            delta: delta[index]\n\t          });\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // remove items, in reverse order to avoid sawing our own floor\n\t  toRemove = toRemove.sort(compare.numerically);\n\t  for (index = toRemove.length - 1; index >= 0; index--) {\n\t    index1 = toRemove[index];\n\t    var indexDiff = delta['_' + index1];\n\t    var removedValue = array.splice(index1, 1)[0];\n\t    if (indexDiff[2] === ARRAY_MOVE) {\n\t      // reinsert later\n\t      toInsert.push({\n\t        index: indexDiff[1],\n\t        value: removedValue\n\t      });\n\t    }\n\t  }\n\t\n\t  // insert items, in reverse order to avoid moving our own floor\n\t  toInsert = toInsert.sort(compare.numericallyBy('index'));\n\t  var toInsertLength = toInsert.length;\n\t  for (index = 0; index < toInsertLength; index++) {\n\t    var insertion = toInsert[index];\n\t    array.splice(insertion.index, 0, insertion.value);\n\t  }\n\t\n\t  // apply modifications\n\t  var toModifyLength = toModify.length;\n\t  var child;\n\t  if (toModifyLength > 0) {\n\t    for (index = 0; index < toModifyLength; index++) {\n\t      var modification = toModify[index];\n\t      child = new PatchContext(context.left[modification.index], modification.delta);\n\t      context.push(child, modification.index);\n\t    }\n\t  }\n\t\n\t  if (!context.children) {\n\t    context.setResult(context.left).exit();\n\t    return;\n\t  }\n\t  context.exit();\n\t};\n\tpatchFilter.filterName = 'arrays';\n\t\n\tvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n\t  if (!context || !context.children) {\n\t    return;\n\t  }\n\t  if (context.delta._t !== 'a') {\n\t    return;\n\t  }\n\t  var length = context.children.length;\n\t  var child;\n\t  for (var index = 0; index < length; index++) {\n\t    child = context.children[index];\n\t    context.left[child.childName] = child.result;\n\t  }\n\t  context.setResult(context.left).exit();\n\t};\n\tcollectChildrenPatchFilter.filterName = 'arraysCollectChildren';\n\t\n\tvar reverseFilter = function arraysReverseFilter(context) {\n\t  if (!context.nested) {\n\t    if (context.delta[2] === ARRAY_MOVE) {\n\t      context.newName = '_' + context.delta[1];\n\t      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n\t    }\n\t    return;\n\t  }\n\t  if (context.delta._t !== 'a') {\n\t    return;\n\t  }\n\t  var name, child;\n\t  for (name in context.delta) {\n\t    if (name === '_t') {\n\t      continue;\n\t    }\n\t    child = new ReverseContext(context.delta[name]);\n\t    context.push(child, name);\n\t  }\n\t  context.exit();\n\t};\n\treverseFilter.filterName = 'arrays';\n\t\n\tvar reverseArrayDeltaIndex = function(delta, index, itemDelta) {\n\t  if (typeof index === 'string' && index[0] === '_') {\n\t    return parseInt(index.substr(1), 10);\n\t  } else if (isArray(itemDelta) && itemDelta[2] === 0) {\n\t    return '_' + index;\n\t  }\n\t\n\t  var reverseIndex = +index;\n\t  for (var deltaIndex in delta) {\n\t    var deltaItem = delta[deltaIndex];\n\t    if (isArray(deltaItem)) {\n\t      if (deltaItem[2] === ARRAY_MOVE) {\n\t        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n\t        var moveToIndex = deltaItem[1];\n\t        if (moveToIndex === +index) {\n\t          return moveFromIndex;\n\t        }\n\t        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n\t          reverseIndex++;\n\t        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n\t          reverseIndex--;\n\t        }\n\t      } else if (deltaItem[2] === 0) {\n\t        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n\t        if (deleteIndex <= reverseIndex) {\n\t          reverseIndex++;\n\t        }\n\t      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n\t        reverseIndex--;\n\t      }\n\t    }\n\t  }\n\t\n\t  return reverseIndex;\n\t};\n\t\n\tvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n\t  if (!context || !context.children) {\n\t    return;\n\t  }\n\t  if (context.delta._t !== 'a') {\n\t    return;\n\t  }\n\t  var length = context.children.length;\n\t  var child;\n\t  var delta = {\n\t    _t: 'a'\n\t  };\n\t\n\t  for (var index = 0; index < length; index++) {\n\t    child = context.children[index];\n\t    var name = child.newName;\n\t    if (typeof name === 'undefined') {\n\t      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n\t    }\n\t    if (delta[name] !== child.result) {\n\t      delta[name] = child.result;\n\t    }\n\t  }\n\t  context.setResult(delta).exit();\n\t};\n\tcollectChildrenReverseFilter.filterName = 'arraysCollectChildren';\n\t\n\texports.diffFilter = diffFilter;\n\texports.patchFilter = patchFilter;\n\texports.collectChildrenPatchFilter = collectChildrenPatchFilter;\n\texports.reverseFilter = reverseFilter;\n\texports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\t/*\n\t\n\tLCS implementation that supports arrays or strings\n\t\n\treference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\t\n\t*/\n\t\n\tvar defaultMatch = function(array1, array2, index1, index2) {\n\t  return array1[index1] === array2[index2];\n\t};\n\t\n\tvar lengthMatrix = function(array1, array2, match, context) {\n\t  var len1 = array1.length;\n\t  var len2 = array2.length;\n\t  var x, y;\n\t\n\t  // initialize empty matrix of len1+1 x len2+1\n\t  var matrix = [len1 + 1];\n\t  for (x = 0; x < len1 + 1; x++) {\n\t    matrix[x] = [len2 + 1];\n\t    for (y = 0; y < len2 + 1; y++) {\n\t      matrix[x][y] = 0;\n\t    }\n\t  }\n\t  matrix.match = match;\n\t  // save sequence lengths for each coordinate\n\t  for (x = 1; x < len1 + 1; x++) {\n\t    for (y = 1; y < len2 + 1; y++) {\n\t      if (match(array1, array2, x - 1, y - 1, context)) {\n\t        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n\t      } else {\n\t        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n\t      }\n\t    }\n\t  }\n\t  return matrix;\n\t};\n\t\n\tvar backtrack = function(matrix, array1, array2, index1, index2, context) {\n\t  if (index1 === 0 || index2 === 0) {\n\t    return {\n\t      sequence: [],\n\t      indices1: [],\n\t      indices2: []\n\t    };\n\t  }\n\t\n\t  if (matrix.match(array1, array2, index1 - 1, index2 - 1, context)) {\n\t    var subsequence = backtrack(matrix, array1, array2, index1 - 1, index2 - 1, context);\n\t    subsequence.sequence.push(array1[index1 - 1]);\n\t    subsequence.indices1.push(index1 - 1);\n\t    subsequence.indices2.push(index2 - 1);\n\t    return subsequence;\n\t  }\n\t\n\t  if (matrix[index1][index2 - 1] > matrix[index1 - 1][index2]) {\n\t    return backtrack(matrix, array1, array2, index1, index2 - 1, context);\n\t  } else {\n\t    return backtrack(matrix, array1, array2, index1 - 1, index2, context);\n\t  }\n\t};\n\t\n\tvar get = function(array1, array2, match, context) {\n\t  context = context || {};\n\t  var matrix = lengthMatrix(array1, array2, match || defaultMatch, context);\n\t  var result = backtrack(matrix, array1, array2, array1.length, array2.length, context);\n\t  if (typeof array1 === 'string' && typeof array2 === 'string') {\n\t    result.sequence = result.sequence.join('');\n\t  }\n\t  return result;\n\t};\n\t\n\texports.get = get;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tvar diffFilter = function datesDiffFilter(context) {\n\t  if (context.left instanceof Date) {\n\t    if (context.right instanceof Date) {\n\t      if (context.left.getTime() !== context.right.getTime()) {\n\t        context.setResult([context.left, context.right]);\n\t      } else {\n\t        context.setResult(undefined);\n\t      }\n\t    } else {\n\t      context.setResult([context.left, context.right]);\n\t    }\n\t    context.exit();\n\t  } else if (context.right instanceof Date) {\n\t    context.setResult([context.left, context.right]).exit();\n\t  }\n\t};\n\tdiffFilter.filterName = 'dates';\n\t\n\texports.diffFilter = diffFilter;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global diff_match_patch */\n\tvar TEXT_DIFF = 2;\n\tvar DEFAULT_MIN_LENGTH = 60;\n\tvar cachedDiffPatch = null;\n\t\n\tvar getDiffMatchPatch = function(required) {\n\t  /*jshint camelcase: false */\n\t\n\t  if (!cachedDiffPatch) {\n\t    var instance;\n\t    if (typeof diff_match_patch !== 'undefined') {\n\t      // already loaded, probably a browser\n\t      instance = typeof diff_match_patch === 'function' ?\n\t        new diff_match_patch() : new diff_match_patch.diff_match_patch();\n\t    } else if (true) {\n\t      try {\n\t        var dmpModuleName = 'diff_match_patch_uncompressed';\n\t        var dmp = __webpack_require__(46)(\"./\" + dmpModuleName);\n\t        instance = new dmp.diff_match_patch();\n\t      } catch (err) {\n\t        instance = null;\n\t      }\n\t    }\n\t    if (!instance) {\n\t      if (!required) {\n\t        return null;\n\t      }\n\t      var error = new Error('text diff_match_patch library not found');\n\t      error.diff_match_patch_not_found = true;\n\t      throw error;\n\t    }\n\t    cachedDiffPatch = {\n\t      diff: function(txt1, txt2) {\n\t        return instance.patch_toText(instance.patch_make(txt1, txt2));\n\t      },\n\t      patch: function(txt1, patch) {\n\t        var results = instance.patch_apply(instance.patch_fromText(patch), txt1);\n\t        for (var i = 0; i < results[1].length; i++) {\n\t          if (!results[1][i]) {\n\t            var error = new Error('text patch failed');\n\t            error.textPatchFailed = true;\n\t          }\n\t        }\n\t        return results[0];\n\t      }\n\t    };\n\t  }\n\t  return cachedDiffPatch;\n\t};\n\t\n\tvar diffFilter = function textsDiffFilter(context) {\n\t  if (context.leftType !== 'string') {\n\t    return;\n\t  }\n\t  var minLength = (context.options && context.options.textDiff &&\n\t    context.options.textDiff.minLength) || DEFAULT_MIN_LENGTH;\n\t  if (context.left.length < minLength ||\n\t    context.right.length < minLength) {\n\t    context.setResult([context.left, context.right]).exit();\n\t    return;\n\t  }\n\t  // large text, try to use a text-diff algorithm\n\t  var diffMatchPatch = getDiffMatchPatch();\n\t  if (!diffMatchPatch) {\n\t    // diff-match-patch library not available, fallback to regular string replace\n\t    context.setResult([context.left, context.right]).exit();\n\t    return;\n\t  }\n\t  var diff = diffMatchPatch.diff;\n\t  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n\t};\n\tdiffFilter.filterName = 'texts';\n\t\n\tvar patchFilter = function textsPatchFilter(context) {\n\t  if (context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta[2] !== TEXT_DIFF) {\n\t    return;\n\t  }\n\t\n\t  // text-diff, use a text-patch algorithm\n\t  var patch = getDiffMatchPatch(true).patch;\n\t  context.setResult(patch(context.left, context.delta[0])).exit();\n\t};\n\tpatchFilter.filterName = 'texts';\n\t\n\tvar textDeltaReverse = function(delta) {\n\t  var i, l, lines, line, lineTmp, header = null,\n\t    headerRegex = /^@@ +\\-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/,\n\t    lineHeader, lineAdd, lineRemove;\n\t  lines = delta.split('\\n');\n\t  for (i = 0, l = lines.length; i < l; i++) {\n\t    line = lines[i];\n\t    var lineStart = line.slice(0, 1);\n\t    if (lineStart === '@') {\n\t      header = headerRegex.exec(line);\n\t      lineHeader = i;\n\t      lineAdd = null;\n\t      lineRemove = null;\n\t\n\t      // fix header\n\t      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n\t    } else if (lineStart === '+') {\n\t      lineAdd = i;\n\t      lines[i] = '-' + lines[i].slice(1);\n\t      if (lines[i - 1].slice(0, 1) === '+') {\n\t        // swap lines to keep default order (-+)\n\t        lineTmp = lines[i];\n\t        lines[i] = lines[i - 1];\n\t        lines[i - 1] = lineTmp;\n\t      }\n\t    } else if (lineStart === '-') {\n\t      lineRemove = i;\n\t      lines[i] = '+' + lines[i].slice(1);\n\t    }\n\t  }\n\t  return lines.join('\\n');\n\t};\n\t\n\tvar reverseFilter = function textsReverseFilter(context) {\n\t  if (context.nested) {\n\t    return;\n\t  }\n\t  if (context.delta[2] !== TEXT_DIFF) {\n\t    return;\n\t  }\n\t\n\t  // text-diff, use a text-diff algorithm\n\t  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n\t};\n\treverseFilter.filterName = 'texts';\n\t\n\texports.diffFilter = diffFilter;\n\texports.patchFilter = patchFilter;\n\texports.reverseFilter = reverseFilter;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./diff_match_patch_uncompressed\": 47,\n\t\t\"./diff_match_patch_uncompressed.js\": 47\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 46;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Diff Match and Patch\n\t *\n\t * Copyright 2006 Google Inc.\n\t * http://code.google.com/p/google-diff-match-patch/\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *   http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * @fileoverview Computes the difference between two texts to create a patch.\n\t * Applies the patch onto another text, allowing for errors.\n\t * @author fraser@google.com (Neil Fraser)\n\t */\n\t\n\t/**\n\t * Class containing the diff, match and patch methods.\n\t * @constructor\n\t */\n\tfunction diff_match_patch() {\n\t\n\t  // Defaults.\n\t  // Redefine these in your program to override the defaults.\n\t\n\t  // Number of seconds to map a diff before giving up (0 for infinity).\n\t  this.Diff_Timeout = 1.0;\n\t  // Cost of an empty edit operation in terms of edit characters.\n\t  this.Diff_EditCost = 4;\n\t  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n\t  this.Match_Threshold = 0.5;\n\t  // How far to search for a match (0 = exact location, 1000+ = broad match).\n\t  // A match this many characters away from the expected location will add\n\t  // 1.0 to the score (0.0 is a perfect match).\n\t  this.Match_Distance = 1000;\n\t  // When deleting a large block of text (over ~64 characters), how close does\n\t  // the contents have to match the expected contents. (0.0 = perfection,\n\t  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n\t  // end points of a delete need to match.\n\t  this.Patch_DeleteThreshold = 0.5;\n\t  // Chunk size for context length.\n\t  this.Patch_Margin = 4;\n\t\n\t  // The number of bits in an int.\n\t  this.Match_MaxBits = 32;\n\t}\n\t\n\t\n\t//  DIFF FUNCTIONS\n\t\n\t\n\t/**\n\t * The data structure representing a diff is an array of tuples:\n\t * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n\t * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n\t */\n\tvar DIFF_DELETE = -1;\n\tvar DIFF_INSERT = 1;\n\tvar DIFF_EQUAL = 0;\n\t\n\t/** @typedef {!Array.<number|string>} */\n\tdiff_match_patch.Diff;\n\t\n\t\n\t/**\n\t * Find the differences between two texts.  Simplifies the problem by stripping\n\t * any common prefix or suffix off the texts before diffing.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n\t *     then don't run a line-level diff first to identify the changed areas.\n\t *     Defaults to true, which does a faster, slightly less optimal diff.\n\t * @param {number} opt_deadline Optional time when the diff should be complete\n\t *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n\t *     instead.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t */\n\tdiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n\t    opt_deadline) {\n\t  // Set a deadline by which time the diff must be complete.\n\t  if (typeof opt_deadline == 'undefined') {\n\t    if (this.Diff_Timeout <= 0) {\n\t      opt_deadline = Number.MAX_VALUE;\n\t    } else {\n\t      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n\t    }\n\t  }\n\t  var deadline = opt_deadline;\n\t\n\t  // Check for null inputs.\n\t  if (text1 == null || text2 == null) {\n\t    throw new Error('Null input. (diff_main)');\n\t  }\n\t\n\t  // Check for equality (speedup).\n\t  if (text1 == text2) {\n\t    if (text1) {\n\t      return [[DIFF_EQUAL, text1]];\n\t    }\n\t    return [];\n\t  }\n\t\n\t  if (typeof opt_checklines == 'undefined') {\n\t    opt_checklines = true;\n\t  }\n\t  var checklines = opt_checklines;\n\t\n\t  // Trim off common prefix (speedup).\n\t  var commonlength = this.diff_commonPrefix(text1, text2);\n\t  var commonprefix = text1.substring(0, commonlength);\n\t  text1 = text1.substring(commonlength);\n\t  text2 = text2.substring(commonlength);\n\t\n\t  // Trim off common suffix (speedup).\n\t  commonlength = this.diff_commonSuffix(text1, text2);\n\t  var commonsuffix = text1.substring(text1.length - commonlength);\n\t  text1 = text1.substring(0, text1.length - commonlength);\n\t  text2 = text2.substring(0, text2.length - commonlength);\n\t\n\t  // Compute the diff on the middle block.\n\t  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\t\n\t  // Restore the prefix and suffix.\n\t  if (commonprefix) {\n\t    diffs.unshift([DIFF_EQUAL, commonprefix]);\n\t  }\n\t  if (commonsuffix) {\n\t    diffs.push([DIFF_EQUAL, commonsuffix]);\n\t  }\n\t  this.diff_cleanupMerge(diffs);\n\t  return diffs;\n\t};\n\t\n\t\n\t/**\n\t * Find the differences between two texts.  Assumes that the texts do not\n\t * have any common prefix or suffix.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean} checklines Speedup flag.  If false, then don't run a\n\t *     line-level diff first to identify the changed areas.\n\t *     If true, then run a faster, slightly less optimal diff.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n\t    deadline) {\n\t  var diffs;\n\t\n\t  if (!text1) {\n\t    // Just add some text (speedup).\n\t    return [[DIFF_INSERT, text2]];\n\t  }\n\t\n\t  if (!text2) {\n\t    // Just delete some text (speedup).\n\t    return [[DIFF_DELETE, text1]];\n\t  }\n\t\n\t  var longtext = text1.length > text2.length ? text1 : text2;\n\t  var shorttext = text1.length > text2.length ? text2 : text1;\n\t  var i = longtext.indexOf(shorttext);\n\t  if (i != -1) {\n\t    // Shorter text is inside the longer text (speedup).\n\t    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n\t             [DIFF_EQUAL, shorttext],\n\t             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n\t    // Swap insertions for deletions if diff is reversed.\n\t    if (text1.length > text2.length) {\n\t      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n\t    }\n\t    return diffs;\n\t  }\n\t\n\t  if (shorttext.length == 1) {\n\t    // Single character string.\n\t    // After the previous speedup, the character can't be an equality.\n\t    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n\t  }\n\t  longtext = shorttext = null;  // Garbage collect.\n\t\n\t  // Check to see if the problem can be split in two.\n\t  var hm = this.diff_halfMatch_(text1, text2);\n\t  if (hm) {\n\t    // A half-match was found, sort out the return data.\n\t    var text1_a = hm[0];\n\t    var text1_b = hm[1];\n\t    var text2_a = hm[2];\n\t    var text2_b = hm[3];\n\t    var mid_common = hm[4];\n\t    // Send both pairs off for separate processing.\n\t    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n\t    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n\t    // Merge the results.\n\t    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n\t  }\n\t\n\t  if (checklines && text1.length > 100 && text2.length > 100) {\n\t    return this.diff_lineMode_(text1, text2, deadline);\n\t  }\n\t\n\t  return this.diff_bisect_(text1, text2, deadline);\n\t};\n\t\n\t\n\t/**\n\t * Do a quick line-level diff on both strings, then rediff the parts for\n\t * greater accuracy.\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n\t  // Scan the text on a line-by-line basis first.\n\t  var a = this.diff_linesToChars_(text1, text2);\n\t  text1 = /** @type {string} */(a[0]);\n\t  text2 = /** @type {string} */(a[1]);\n\t  var linearray = /** @type {!Array.<string>} */(a[2]);\n\t\n\t  var diffs = this.diff_bisect_(text1, text2, deadline);\n\t\n\t  // Convert the diff back to original text.\n\t  this.diff_charsToLines_(diffs, linearray);\n\t  // Eliminate freak matches (e.g. blank lines)\n\t  this.diff_cleanupSemantic(diffs);\n\t\n\t  // Rediff any replacement blocks, this time character-by-character.\n\t  // Add a dummy entry at the end.\n\t  diffs.push([DIFF_EQUAL, '']);\n\t  var pointer = 0;\n\t  var count_delete = 0;\n\t  var count_insert = 0;\n\t  var text_delete = '';\n\t  var text_insert = '';\n\t  while (pointer < diffs.length) {\n\t    switch (diffs[pointer][0]) {\n\t      case DIFF_INSERT:\n\t        count_insert++;\n\t        text_insert += diffs[pointer][1];\n\t        break;\n\t      case DIFF_DELETE:\n\t        count_delete++;\n\t        text_delete += diffs[pointer][1];\n\t        break;\n\t      case DIFF_EQUAL:\n\t        // Upon reaching an equality, check for prior redundancies.\n\t        if (count_delete >= 1 && count_insert >= 1) {\n\t          // Delete the offending records and add the merged ones.\n\t          var a = this.diff_main(text_delete, text_insert, false, deadline);\n\t          diffs.splice(pointer - count_delete - count_insert,\n\t                       count_delete + count_insert);\n\t          pointer = pointer - count_delete - count_insert;\n\t          for (var j = a.length - 1; j >= 0; j--) {\n\t            diffs.splice(pointer, 0, a[j]);\n\t          }\n\t          pointer = pointer + a.length;\n\t        }\n\t        count_insert = 0;\n\t        count_delete = 0;\n\t        text_delete = '';\n\t        text_insert = '';\n\t        break;\n\t    }\n\t    pointer++;\n\t  }\n\t  diffs.pop();  // Remove the dummy entry at the end.\n\t\n\t  return diffs;\n\t};\n\t\n\t\n\t/**\n\t * Find the 'middle snake' of a diff, split the problem in two\n\t * and return the recursively constructed diff.\n\t * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n\t  // Cache the text lengths to prevent multiple calls.\n\t  var text1_length = text1.length;\n\t  var text2_length = text2.length;\n\t  var max_d = Math.ceil((text1_length + text2_length) / 2);\n\t  var v_offset = max_d;\n\t  var v_length = 2 * max_d;\n\t  var v1 = new Array(v_length);\n\t  var v2 = new Array(v_length);\n\t  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n\t  // integers and undefined.\n\t  for (var x = 0; x < v_length; x++) {\n\t    v1[x] = -1;\n\t    v2[x] = -1;\n\t  }\n\t  v1[v_offset + 1] = 0;\n\t  v2[v_offset + 1] = 0;\n\t  var delta = text1_length - text2_length;\n\t  // If the total number of characters is odd, then the front path will collide\n\t  // with the reverse path.\n\t  var front = (delta % 2 != 0);\n\t  // Offsets for start and end of k loop.\n\t  // Prevents mapping of space beyond the grid.\n\t  var k1start = 0;\n\t  var k1end = 0;\n\t  var k2start = 0;\n\t  var k2end = 0;\n\t  for (var d = 0; d < max_d; d++) {\n\t    // Bail out if deadline is reached.\n\t    if ((new Date()).getTime() > deadline) {\n\t      break;\n\t    }\n\t\n\t    // Walk the front path one step.\n\t    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n\t      var k1_offset = v_offset + k1;\n\t      var x1;\n\t      if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n\t        x1 = v1[k1_offset + 1];\n\t      } else {\n\t        x1 = v1[k1_offset - 1] + 1;\n\t      }\n\t      var y1 = x1 - k1;\n\t      while (x1 < text1_length && y1 < text2_length &&\n\t             text1.charAt(x1) == text2.charAt(y1)) {\n\t        x1++;\n\t        y1++;\n\t      }\n\t      v1[k1_offset] = x1;\n\t      if (x1 > text1_length) {\n\t        // Ran off the right of the graph.\n\t        k1end += 2;\n\t      } else if (y1 > text2_length) {\n\t        // Ran off the bottom of the graph.\n\t        k1start += 2;\n\t      } else if (front) {\n\t        var k2_offset = v_offset + delta - k1;\n\t        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n\t          // Mirror x2 onto top-left coordinate system.\n\t          var x2 = text1_length - v2[k2_offset];\n\t          if (x1 >= x2) {\n\t            // Overlap detected.\n\t            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Walk the reverse path one step.\n\t    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n\t      var k2_offset = v_offset + k2;\n\t      var x2;\n\t      if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n\t        x2 = v2[k2_offset + 1];\n\t      } else {\n\t        x2 = v2[k2_offset - 1] + 1;\n\t      }\n\t      var y2 = x2 - k2;\n\t      while (x2 < text1_length && y2 < text2_length &&\n\t             text1.charAt(text1_length - x2 - 1) ==\n\t             text2.charAt(text2_length - y2 - 1)) {\n\t        x2++;\n\t        y2++;\n\t      }\n\t      v2[k2_offset] = x2;\n\t      if (x2 > text1_length) {\n\t        // Ran off the left of the graph.\n\t        k2end += 2;\n\t      } else if (y2 > text2_length) {\n\t        // Ran off the top of the graph.\n\t        k2start += 2;\n\t      } else if (!front) {\n\t        var k1_offset = v_offset + delta - k2;\n\t        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n\t          var x1 = v1[k1_offset];\n\t          var y1 = v_offset + x1 - k1_offset;\n\t          // Mirror x2 onto top-left coordinate system.\n\t          x2 = text1_length - x2;\n\t          if (x1 >= x2) {\n\t            // Overlap detected.\n\t            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  // Diff took too long and hit the deadline or\n\t  // number of diffs equals number of characters, no commonality at all.\n\t  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n\t};\n\t\n\t\n\t/**\n\t * Given the location of the 'middle snake', split the diff in two parts\n\t * and recurse.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} x Index of split point in text1.\n\t * @param {number} y Index of split point in text2.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n\t    deadline) {\n\t  var text1a = text1.substring(0, x);\n\t  var text2a = text2.substring(0, y);\n\t  var text1b = text1.substring(x);\n\t  var text2b = text2.substring(y);\n\t\n\t  // Compute both diffs serially.\n\t  var diffs = this.diff_main(text1a, text2a, false, deadline);\n\t  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\t\n\t  return diffs.concat(diffsb);\n\t};\n\t\n\t\n\t/**\n\t * Split two texts into an array of strings.  Reduce the texts to a string of\n\t * hashes where each Unicode character represents one line.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {!Array.<string|!Array.<string>>} Three element Array, containing the\n\t *     encoded text1, the encoded text2 and the array of unique strings.  The\n\t *     zeroth element of the array of unique strings is intentionally blank.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n\t  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n\t  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\t\n\t  // '\\x00' is a valid character, but various debuggers don't like it.\n\t  // So we'll insert a junk entry to avoid generating a null character.\n\t  lineArray[0] = '';\n\t\n\t  /**\n\t   * Split a text into an array of strings.  Reduce the texts to a string of\n\t   * hashes where each Unicode character represents one line.\n\t   * Modifies linearray and linehash through being a closure.\n\t   * @param {string} text String to encode.\n\t   * @return {string} Encoded string.\n\t   * @private\n\t   */\n\t  function diff_linesToCharsMunge_(text) {\n\t    var chars = '';\n\t    // Walk the text, pulling out a substring for each line.\n\t    // text.split('\\n') would would temporarily double our memory footprint.\n\t    // Modifying text would create many large strings to garbage collect.\n\t    var lineStart = 0;\n\t    var lineEnd = -1;\n\t    // Keeping our own length variable is faster than looking it up.\n\t    var lineArrayLength = lineArray.length;\n\t    while (lineEnd < text.length - 1) {\n\t      lineEnd = text.indexOf('\\n', lineStart);\n\t      if (lineEnd == -1) {\n\t        lineEnd = text.length - 1;\n\t      }\n\t      var line = text.substring(lineStart, lineEnd + 1);\n\t      lineStart = lineEnd + 1;\n\t\n\t      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n\t          (lineHash[line] !== undefined)) {\n\t        chars += String.fromCharCode(lineHash[line]);\n\t      } else {\n\t        chars += String.fromCharCode(lineArrayLength);\n\t        lineHash[line] = lineArrayLength;\n\t        lineArray[lineArrayLength++] = line;\n\t      }\n\t    }\n\t    return chars;\n\t  }\n\t\n\t  var chars1 = diff_linesToCharsMunge_(text1);\n\t  var chars2 = diff_linesToCharsMunge_(text2);\n\t  return [chars1, chars2, lineArray];\n\t};\n\t\n\t\n\t/**\n\t * Rehydrate the text in a diff from a string of line hashes to real lines of\n\t * text.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @param {!Array.<string>} lineArray Array of unique strings.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    var chars = diffs[x][1];\n\t    var text = [];\n\t    for (var y = 0; y < chars.length; y++) {\n\t      text[y] = lineArray[chars.charCodeAt(y)];\n\t    }\n\t    diffs[x][1] = text.join('');\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Determine the common prefix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the start of each\n\t *     string.\n\t */\n\tdiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n\t  // Quick check for common null cases.\n\t  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n\t    return 0;\n\t  }\n\t  // Binary search.\n\t  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n\t  var pointermin = 0;\n\t  var pointermax = Math.min(text1.length, text2.length);\n\t  var pointermid = pointermax;\n\t  var pointerstart = 0;\n\t  while (pointermin < pointermid) {\n\t    if (text1.substring(pointerstart, pointermid) ==\n\t        text2.substring(pointerstart, pointermid)) {\n\t      pointermin = pointermid;\n\t      pointerstart = pointermin;\n\t    } else {\n\t      pointermax = pointermid;\n\t    }\n\t    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n\t  }\n\t  return pointermid;\n\t};\n\t\n\t\n\t/**\n\t * Determine the common suffix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of each string.\n\t */\n\tdiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n\t  // Quick check for common null cases.\n\t  if (!text1 || !text2 ||\n\t      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n\t    return 0;\n\t  }\n\t  // Binary search.\n\t  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n\t  var pointermin = 0;\n\t  var pointermax = Math.min(text1.length, text2.length);\n\t  var pointermid = pointermax;\n\t  var pointerend = 0;\n\t  while (pointermin < pointermid) {\n\t    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n\t        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n\t      pointermin = pointermid;\n\t      pointerend = pointermin;\n\t    } else {\n\t      pointermax = pointermid;\n\t    }\n\t    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n\t  }\n\t  return pointermid;\n\t};\n\t\n\t\n\t/**\n\t * Determine if the suffix of one string is the prefix of another.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of the first\n\t *     string and the start of the second string.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n\t  // Cache the text lengths to prevent multiple calls.\n\t  var text1_length = text1.length;\n\t  var text2_length = text2.length;\n\t  // Eliminate the null case.\n\t  if (text1_length == 0 || text2_length == 0) {\n\t    return 0;\n\t  }\n\t  // Truncate the longer string.\n\t  if (text1_length > text2_length) {\n\t    text1 = text1.substring(text1_length - text2_length);\n\t  } else if (text1_length < text2_length) {\n\t    text2 = text2.substring(0, text1_length);\n\t  }\n\t  var text_length = Math.min(text1_length, text2_length);\n\t  // Quick check for the worst case.\n\t  if (text1 == text2) {\n\t    return text_length;\n\t  }\n\t\n\t  // Start by looking for a single character match\n\t  // and increase length until no match is found.\n\t  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n\t  var best = 0;\n\t  var length = 1;\n\t  while (true) {\n\t    var pattern = text1.substring(text_length - length);\n\t    var found = text2.indexOf(pattern);\n\t    if (found == -1) {\n\t      return best;\n\t    }\n\t    length += found;\n\t    if (found == 0 || text1.substring(text_length - length) ==\n\t        text2.substring(0, length)) {\n\t      best = length;\n\t      length++;\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Do the two texts share a substring which is at least half the length of the\n\t * longer text?\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t *     text1, the suffix of text1, the prefix of text2, the suffix of\n\t *     text2 and the common middle.  Or null if there was no match.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n\t  if (this.Diff_Timeout <= 0) {\n\t    // Don't risk returning a non-optimal diff if we have unlimited time.\n\t    return null;\n\t  }\n\t  var longtext = text1.length > text2.length ? text1 : text2;\n\t  var shorttext = text1.length > text2.length ? text2 : text1;\n\t  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n\t    return null;  // Pointless.\n\t  }\n\t  var dmp = this;  // 'this' becomes 'window' in a closure.\n\t\n\t  /**\n\t   * Does a substring of shorttext exist within longtext such that the substring\n\t   * is at least half the length of longtext?\n\t   * Closure, but does not reference any external variables.\n\t   * @param {string} longtext Longer string.\n\t   * @param {string} shorttext Shorter string.\n\t   * @param {number} i Start index of quarter length substring within longtext.\n\t   * @return {Array.<string>} Five element Array, containing the prefix of\n\t   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n\t   *     of shorttext and the common middle.  Or null if there was no match.\n\t   * @private\n\t   */\n\t  function diff_halfMatchI_(longtext, shorttext, i) {\n\t    // Start with a 1/4 length substring at position i as a seed.\n\t    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n\t    var j = -1;\n\t    var best_common = '';\n\t    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n\t    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n\t      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n\t                                               shorttext.substring(j));\n\t      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n\t                                               shorttext.substring(0, j));\n\t      if (best_common.length < suffixLength + prefixLength) {\n\t        best_common = shorttext.substring(j - suffixLength, j) +\n\t            shorttext.substring(j, j + prefixLength);\n\t        best_longtext_a = longtext.substring(0, i - suffixLength);\n\t        best_longtext_b = longtext.substring(i + prefixLength);\n\t        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n\t        best_shorttext_b = shorttext.substring(j + prefixLength);\n\t      }\n\t    }\n\t    if (best_common.length * 2 >= longtext.length) {\n\t      return [best_longtext_a, best_longtext_b,\n\t              best_shorttext_a, best_shorttext_b, best_common];\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t\n\t  // First check if the second quarter is the seed for a half-match.\n\t  var hm1 = diff_halfMatchI_(longtext, shorttext,\n\t                             Math.ceil(longtext.length / 4));\n\t  // Check again based on the third quarter.\n\t  var hm2 = diff_halfMatchI_(longtext, shorttext,\n\t                             Math.ceil(longtext.length / 2));\n\t  var hm;\n\t  if (!hm1 && !hm2) {\n\t    return null;\n\t  } else if (!hm2) {\n\t    hm = hm1;\n\t  } else if (!hm1) {\n\t    hm = hm2;\n\t  } else {\n\t    // Both matched.  Select the longest.\n\t    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n\t  }\n\t\n\t  // A half-match was found, sort out the return data.\n\t  var text1_a, text1_b, text2_a, text2_b;\n\t  if (text1.length > text2.length) {\n\t    text1_a = hm[0];\n\t    text1_b = hm[1];\n\t    text2_a = hm[2];\n\t    text2_b = hm[3];\n\t  } else {\n\t    text2_a = hm[0];\n\t    text2_b = hm[1];\n\t    text1_a = hm[2];\n\t    text1_b = hm[3];\n\t  }\n\t  var mid_common = hm[4];\n\t  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n\t};\n\t\n\t\n\t/**\n\t * Reduce the number of edits by eliminating semantically trivial equalities.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t */\n\tdiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n\t  var changes = false;\n\t  var equalities = [];  // Stack of indices where equalities are found.\n\t  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n\t  /** @type {?string} */\n\t  var lastequality = null;  // Always equal to equalities[equalitiesLength-1][1]\n\t  var pointer = 0;  // Index of current position.\n\t  // Number of characters that changed prior to the equality.\n\t  var length_insertions1 = 0;\n\t  var length_deletions1 = 0;\n\t  // Number of characters that changed after the equality.\n\t  var length_insertions2 = 0;\n\t  var length_deletions2 = 0;\n\t  while (pointer < diffs.length) {\n\t    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n\t      equalities[equalitiesLength++] = pointer;\n\t      length_insertions1 = length_insertions2;\n\t      length_deletions1 = length_deletions2;\n\t      length_insertions2 = 0;\n\t      length_deletions2 = 0;\n\t      lastequality = /** @type {string} */(diffs[pointer][1]);\n\t    } else {  // An insertion or deletion.\n\t      if (diffs[pointer][0] == DIFF_INSERT) {\n\t        length_insertions2 += diffs[pointer][1].length;\n\t      } else {\n\t        length_deletions2 += diffs[pointer][1].length;\n\t      }\n\t      // Eliminate an equality that is smaller or equal to the edits on both\n\t      // sides of it.\n\t      if (lastequality !== null && (lastequality.length <=\n\t          Math.max(length_insertions1, length_deletions1)) &&\n\t          (lastequality.length <= Math.max(length_insertions2,\n\t                                           length_deletions2))) {\n\t        // Duplicate record.\n\t        diffs.splice(equalities[equalitiesLength - 1], 0,\n\t                     [DIFF_DELETE, lastequality]);\n\t        // Change second copy to insert.\n\t        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n\t        // Throw away the equality we just deleted.\n\t        equalitiesLength--;\n\t        // Throw away the previous equality (it needs to be reevaluated).\n\t        equalitiesLength--;\n\t        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n\t        length_insertions1 = 0;  // Reset the counters.\n\t        length_deletions1 = 0;\n\t        length_insertions2 = 0;\n\t        length_deletions2 = 0;\n\t        lastequality = null;\n\t        changes = true;\n\t      }\n\t    }\n\t    pointer++;\n\t  }\n\t\n\t  // Normalize the diff.\n\t  if (changes) {\n\t    this.diff_cleanupMerge(diffs);\n\t  }\n\t  this.diff_cleanupSemanticLossless(diffs);\n\t\n\t  // Find any overlaps between deletions and insertions.\n\t  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n\t  //   -> <del>abc</del>xxx<ins>def</ins>\n\t  // Only extract an overlap if it is as big as the edit ahead or behind it.\n\t  pointer = 1;\n\t  while (pointer < diffs.length) {\n\t    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n\t        diffs[pointer][0] == DIFF_INSERT) {\n\t      var deletion = /** @type {string} */(diffs[pointer - 1][1]);\n\t      var insertion = /** @type {string} */(diffs[pointer][1]);\n\t      var overlap_length = this.diff_commonOverlap_(deletion, insertion);\n\t      if (overlap_length >= deletion.length / 2 ||\n\t          overlap_length >= insertion.length / 2) {\n\t        // Overlap found.  Insert an equality and trim the surrounding edits.\n\t        diffs.splice(pointer, 0,\n\t            [DIFF_EQUAL, insertion.substring(0, overlap_length)]);\n\t        diffs[pointer - 1][1] =\n\t            deletion.substring(0, deletion.length - overlap_length);\n\t        diffs[pointer + 1][1] = insertion.substring(overlap_length);\n\t        pointer++;\n\t      }\n\t      pointer++;\n\t    }\n\t    pointer++;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Look for single edits surrounded on both sides by equalities\n\t * which can be shifted sideways to align the edit to a word boundary.\n\t * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t */\n\tdiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n\t  // Define some regex patterns for matching boundaries.\n\t  var punctuation = /[^a-zA-Z0-9]/;\n\t  var whitespace = /\\s/;\n\t  var linebreak = /[\\r\\n]/;\n\t  var blanklineEnd = /\\n\\r?\\n$/;\n\t  var blanklineStart = /^\\r?\\n\\r?\\n/;\n\t\n\t  /**\n\t   * Given two strings, compute a score representing whether the internal\n\t   * boundary falls on logical boundaries.\n\t   * Scores range from 5 (best) to 0 (worst).\n\t   * Closure, makes reference to regex patterns defined above.\n\t   * @param {string} one First string.\n\t   * @param {string} two Second string.\n\t   * @return {number} The score.\n\t   * @private\n\t   */\n\t  function diff_cleanupSemanticScore_(one, two) {\n\t    if (!one || !two) {\n\t      // Edges are the best.\n\t      return 5;\n\t    }\n\t\n\t    // Each port of this function behaves slightly differently due to\n\t    // subtle differences in each language's definition of things like\n\t    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n\t    // the choice has been made to use each language's native features\n\t    // rather than force total conformity.\n\t    var score = 0;\n\t    // One point for non-alphanumeric.\n\t    if (one.charAt(one.length - 1).match(punctuation) ||\n\t        two.charAt(0).match(punctuation)) {\n\t      score++;\n\t      // Two points for whitespace.\n\t      if (one.charAt(one.length - 1).match(whitespace) ||\n\t          two.charAt(0).match(whitespace)) {\n\t        score++;\n\t        // Three points for line breaks.\n\t        if (one.charAt(one.length - 1).match(linebreak) ||\n\t            two.charAt(0).match(linebreak)) {\n\t          score++;\n\t          // Four points for blank lines.\n\t          if (one.match(blanklineEnd) || two.match(blanklineStart)) {\n\t            score++;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return score;\n\t  }\n\t\n\t  var pointer = 1;\n\t  // Intentionally ignore the first and last element (don't need checking).\n\t  while (pointer < diffs.length - 1) {\n\t    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n\t        diffs[pointer + 1][0] == DIFF_EQUAL) {\n\t      // This is a single edit surrounded by equalities.\n\t      var equality1 = /** @type {string} */(diffs[pointer - 1][1]);\n\t      var edit = /** @type {string} */(diffs[pointer][1]);\n\t      var equality2 = /** @type {string} */(diffs[pointer + 1][1]);\n\t\n\t      // First, shift the edit as far left as possible.\n\t      var commonOffset = this.diff_commonSuffix(equality1, edit);\n\t      if (commonOffset) {\n\t        var commonString = edit.substring(edit.length - commonOffset);\n\t        equality1 = equality1.substring(0, equality1.length - commonOffset);\n\t        edit = commonString + edit.substring(0, edit.length - commonOffset);\n\t        equality2 = commonString + equality2;\n\t      }\n\t\n\t      // Second, step character by character right, looking for the best fit.\n\t      var bestEquality1 = equality1;\n\t      var bestEdit = edit;\n\t      var bestEquality2 = equality2;\n\t      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n\t          diff_cleanupSemanticScore_(edit, equality2);\n\t      while (edit.charAt(0) === equality2.charAt(0)) {\n\t        equality1 += edit.charAt(0);\n\t        edit = edit.substring(1) + equality2.charAt(0);\n\t        equality2 = equality2.substring(1);\n\t        var score = diff_cleanupSemanticScore_(equality1, edit) +\n\t            diff_cleanupSemanticScore_(edit, equality2);\n\t        // The >= encourages trailing rather than leading whitespace on edits.\n\t        if (score >= bestScore) {\n\t          bestScore = score;\n\t          bestEquality1 = equality1;\n\t          bestEdit = edit;\n\t          bestEquality2 = equality2;\n\t        }\n\t      }\n\t\n\t      if (diffs[pointer - 1][1] != bestEquality1) {\n\t        // We have an improvement, save it back to the diff.\n\t        if (bestEquality1) {\n\t          diffs[pointer - 1][1] = bestEquality1;\n\t        } else {\n\t          diffs.splice(pointer - 1, 1);\n\t          pointer--;\n\t        }\n\t        diffs[pointer][1] = bestEdit;\n\t        if (bestEquality2) {\n\t          diffs[pointer + 1][1] = bestEquality2;\n\t        } else {\n\t          diffs.splice(pointer + 1, 1);\n\t          pointer--;\n\t        }\n\t      }\n\t    }\n\t    pointer++;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Reduce the number of edits by eliminating operationally trivial equalities.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t */\n\tdiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n\t  var changes = false;\n\t  var equalities = [];  // Stack of indices where equalities are found.\n\t  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n\t  var lastequality = '';  // Always equal to equalities[equalitiesLength-1][1]\n\t  var pointer = 0;  // Index of current position.\n\t  // Is there an insertion operation before the last equality.\n\t  var pre_ins = false;\n\t  // Is there a deletion operation before the last equality.\n\t  var pre_del = false;\n\t  // Is there an insertion operation after the last equality.\n\t  var post_ins = false;\n\t  // Is there a deletion operation after the last equality.\n\t  var post_del = false;\n\t  while (pointer < diffs.length) {\n\t    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n\t      if (diffs[pointer][1].length < this.Diff_EditCost &&\n\t          (post_ins || post_del)) {\n\t        // Candidate found.\n\t        equalities[equalitiesLength++] = pointer;\n\t        pre_ins = post_ins;\n\t        pre_del = post_del;\n\t        lastequality = diffs[pointer][1];\n\t      } else {\n\t        // Not a candidate, and can never become one.\n\t        equalitiesLength = 0;\n\t        lastequality = '';\n\t      }\n\t      post_ins = post_del = false;\n\t    } else {  // An insertion or deletion.\n\t      if (diffs[pointer][0] == DIFF_DELETE) {\n\t        post_del = true;\n\t      } else {\n\t        post_ins = true;\n\t      }\n\t      /*\n\t       * Five types to be split:\n\t       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n\t       * <ins>A</ins>X<ins>C</ins><del>D</del>\n\t       * <ins>A</ins><del>B</del>X<ins>C</ins>\n\t       * <ins>A</del>X<ins>C</ins><del>D</del>\n\t       * <ins>A</ins><del>B</del>X<del>C</del>\n\t       */\n\t      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n\t                           ((lastequality.length < this.Diff_EditCost / 2) &&\n\t                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n\t        // Duplicate record.\n\t        diffs.splice(equalities[equalitiesLength - 1], 0,\n\t                     [DIFF_DELETE, lastequality]);\n\t        // Change second copy to insert.\n\t        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n\t        equalitiesLength--;  // Throw away the equality we just deleted;\n\t        lastequality = '';\n\t        if (pre_ins && pre_del) {\n\t          // No changes made which could affect previous entry, keep going.\n\t          post_ins = post_del = true;\n\t          equalitiesLength = 0;\n\t        } else {\n\t          equalitiesLength--;  // Throw away the previous equality.\n\t          pointer = equalitiesLength > 0 ?\n\t              equalities[equalitiesLength - 1] : -1;\n\t          post_ins = post_del = false;\n\t        }\n\t        changes = true;\n\t      }\n\t    }\n\t    pointer++;\n\t  }\n\t\n\t  if (changes) {\n\t    this.diff_cleanupMerge(diffs);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Reorder and merge like edit sections.  Merge equalities.\n\t * Any edit section can move as long as it doesn't cross an equality.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t */\n\tdiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n\t  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n\t  var pointer = 0;\n\t  var count_delete = 0;\n\t  var count_insert = 0;\n\t  var text_delete = '';\n\t  var text_insert = '';\n\t  var commonlength;\n\t  while (pointer < diffs.length) {\n\t    switch (diffs[pointer][0]) {\n\t      case DIFF_INSERT:\n\t        count_insert++;\n\t        text_insert += diffs[pointer][1];\n\t        pointer++;\n\t        break;\n\t      case DIFF_DELETE:\n\t        count_delete++;\n\t        text_delete += diffs[pointer][1];\n\t        pointer++;\n\t        break;\n\t      case DIFF_EQUAL:\n\t        // Upon reaching an equality, check for prior redundancies.\n\t        if (count_delete + count_insert > 1) {\n\t          if (count_delete !== 0 && count_insert !== 0) {\n\t            // Factor out any common prefixies.\n\t            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n\t            if (commonlength !== 0) {\n\t              if ((pointer - count_delete - count_insert) > 0 &&\n\t                  diffs[pointer - count_delete - count_insert - 1][0] ==\n\t                  DIFF_EQUAL) {\n\t                diffs[pointer - count_delete - count_insert - 1][1] +=\n\t                    text_insert.substring(0, commonlength);\n\t              } else {\n\t                diffs.splice(0, 0, [DIFF_EQUAL,\n\t                                    text_insert.substring(0, commonlength)]);\n\t                pointer++;\n\t              }\n\t              text_insert = text_insert.substring(commonlength);\n\t              text_delete = text_delete.substring(commonlength);\n\t            }\n\t            // Factor out any common suffixies.\n\t            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n\t            if (commonlength !== 0) {\n\t              diffs[pointer][1] = text_insert.substring(text_insert.length -\n\t                  commonlength) + diffs[pointer][1];\n\t              text_insert = text_insert.substring(0, text_insert.length -\n\t                  commonlength);\n\t              text_delete = text_delete.substring(0, text_delete.length -\n\t                  commonlength);\n\t            }\n\t          }\n\t          // Delete the offending records and add the merged ones.\n\t          if (count_delete === 0) {\n\t            diffs.splice(pointer - count_delete - count_insert,\n\t                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n\t          } else if (count_insert === 0) {\n\t            diffs.splice(pointer - count_delete - count_insert,\n\t                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n\t          } else {\n\t            diffs.splice(pointer - count_delete - count_insert,\n\t                count_delete + count_insert, [DIFF_DELETE, text_delete],\n\t                [DIFF_INSERT, text_insert]);\n\t          }\n\t          pointer = pointer - count_delete - count_insert +\n\t                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n\t        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n\t          // Merge this equality with the previous one.\n\t          diffs[pointer - 1][1] += diffs[pointer][1];\n\t          diffs.splice(pointer, 1);\n\t        } else {\n\t          pointer++;\n\t        }\n\t        count_insert = 0;\n\t        count_delete = 0;\n\t        text_delete = '';\n\t        text_insert = '';\n\t        break;\n\t    }\n\t  }\n\t  if (diffs[diffs.length - 1][1] === '') {\n\t    diffs.pop();  // Remove the dummy entry at the end.\n\t  }\n\t\n\t  // Second pass: look for single edits surrounded on both sides by equalities\n\t  // which can be shifted sideways to eliminate an equality.\n\t  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\t  var changes = false;\n\t  pointer = 1;\n\t  // Intentionally ignore the first and last element (don't need checking).\n\t  while (pointer < diffs.length - 1) {\n\t    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n\t        diffs[pointer + 1][0] == DIFF_EQUAL) {\n\t      // This is a single edit surrounded by equalities.\n\t      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n\t          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n\t        // Shift the edit over the previous equality.\n\t        diffs[pointer][1] = diffs[pointer - 1][1] +\n\t            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n\t                                        diffs[pointer - 1][1].length);\n\t        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n\t        diffs.splice(pointer - 1, 1);\n\t        changes = true;\n\t      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n\t          diffs[pointer + 1][1]) {\n\t        // Shift the edit over the next equality.\n\t        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n\t        diffs[pointer][1] =\n\t            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n\t            diffs[pointer + 1][1];\n\t        diffs.splice(pointer + 1, 1);\n\t        changes = true;\n\t      }\n\t    }\n\t    pointer++;\n\t  }\n\t  // If shifts were made, the diff needs reordering and another shift sweep.\n\t  if (changes) {\n\t    this.diff_cleanupMerge(diffs);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * loc is a location in text1, compute and return the equivalent location in\n\t * text2.\n\t * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @param {number} loc Location within text1.\n\t * @return {number} Location within text2.\n\t */\n\tdiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n\t  var chars1 = 0;\n\t  var chars2 = 0;\n\t  var last_chars1 = 0;\n\t  var last_chars2 = 0;\n\t  var x;\n\t  for (x = 0; x < diffs.length; x++) {\n\t    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n\t      chars1 += diffs[x][1].length;\n\t    }\n\t    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n\t      chars2 += diffs[x][1].length;\n\t    }\n\t    if (chars1 > loc) {  // Overshot the location.\n\t      break;\n\t    }\n\t    last_chars1 = chars1;\n\t    last_chars2 = chars2;\n\t  }\n\t  // Was the location was deleted?\n\t  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n\t    return last_chars2;\n\t  }\n\t  // Add the remaining character length.\n\t  return last_chars2 + (loc - last_chars1);\n\t};\n\t\n\t\n\t/**\n\t * Convert a diff array into a pretty HTML report.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @return {string} HTML representation.\n\t */\n\tdiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n\t  var html = [];\n\t  var i = 0;\n\t  var pattern_amp = /&/g;\n\t  var pattern_lt = /</g;\n\t  var pattern_gt = />/g;\n\t  var pattern_para = /\\n/g;\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    var op = diffs[x][0];    // Operation (insert, delete, equal)\n\t    var data = diffs[x][1];  // Text of change.\n\t    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n\t        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n\t    switch (op) {\n\t      case DIFF_INSERT:\n\t        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n\t        break;\n\t      case DIFF_DELETE:\n\t        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n\t        break;\n\t      case DIFF_EQUAL:\n\t        html[x] = '<span>' + text + '</span>';\n\t        break;\n\t    }\n\t    if (op !== DIFF_DELETE) {\n\t      i += data.length;\n\t    }\n\t  }\n\t  return html.join('');\n\t};\n\t\n\t\n\t/**\n\t * Compute and return the source text (all equalities and deletions).\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @return {string} Source text.\n\t */\n\tdiff_match_patch.prototype.diff_text1 = function(diffs) {\n\t  var text = [];\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    if (diffs[x][0] !== DIFF_INSERT) {\n\t      text[x] = diffs[x][1];\n\t    }\n\t  }\n\t  return text.join('');\n\t};\n\t\n\t\n\t/**\n\t * Compute and return the destination text (all equalities and insertions).\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @return {string} Destination text.\n\t */\n\tdiff_match_patch.prototype.diff_text2 = function(diffs) {\n\t  var text = [];\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    if (diffs[x][0] !== DIFF_DELETE) {\n\t      text[x] = diffs[x][1];\n\t    }\n\t  }\n\t  return text.join('');\n\t};\n\t\n\t\n\t/**\n\t * Compute the Levenshtein distance; the number of inserted, deleted or\n\t * substituted characters.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @return {number} Number of changes.\n\t */\n\tdiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n\t  var levenshtein = 0;\n\t  var insertions = 0;\n\t  var deletions = 0;\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    var op = diffs[x][0];\n\t    var data = diffs[x][1];\n\t    switch (op) {\n\t      case DIFF_INSERT:\n\t        insertions += data.length;\n\t        break;\n\t      case DIFF_DELETE:\n\t        deletions += data.length;\n\t        break;\n\t      case DIFF_EQUAL:\n\t        // A deletion and an insertion is one substitution.\n\t        levenshtein += Math.max(insertions, deletions);\n\t        insertions = 0;\n\t        deletions = 0;\n\t        break;\n\t    }\n\t  }\n\t  levenshtein += Math.max(insertions, deletions);\n\t  return levenshtein;\n\t};\n\t\n\t\n\t/**\n\t * Crush the diff into an encoded string which describes the operations\n\t * required to transform text1 into text2.\n\t * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n\t * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n\t * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n\t * @return {string} Delta text.\n\t */\n\tdiff_match_patch.prototype.diff_toDelta = function(diffs) {\n\t  var text = [];\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    switch (diffs[x][0]) {\n\t      case DIFF_INSERT:\n\t        text[x] = '+' + encodeURI(diffs[x][1]);\n\t        break;\n\t      case DIFF_DELETE:\n\t        text[x] = '-' + diffs[x][1].length;\n\t        break;\n\t      case DIFF_EQUAL:\n\t        text[x] = '=' + diffs[x][1].length;\n\t        break;\n\t    }\n\t  }\n\t  return text.join('\\t').replace(/%20/g, ' ');\n\t};\n\t\n\t\n\t/**\n\t * Given the original text1, and an encoded string which describes the\n\t * operations required to transform text1 into text2, compute the full diff.\n\t * @param {string} text1 Source string for the diff.\n\t * @param {string} delta Delta text.\n\t * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n\t * @throws {!Error} If invalid input.\n\t */\n\tdiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n\t  var diffs = [];\n\t  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n\t  var pointer = 0;  // Cursor in text1\n\t  var tokens = delta.split(/\\t/g);\n\t  for (var x = 0; x < tokens.length; x++) {\n\t    // Each token begins with a one character parameter which specifies the\n\t    // operation of this token (delete, insert, equality).\n\t    var param = tokens[x].substring(1);\n\t    switch (tokens[x].charAt(0)) {\n\t      case '+':\n\t        try {\n\t          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n\t        } catch (ex) {\n\t          // Malformed URI sequence.\n\t          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n\t        }\n\t        break;\n\t      case '-':\n\t        // Fall through.\n\t      case '=':\n\t        var n = parseInt(param, 10);\n\t        if (isNaN(n) || n < 0) {\n\t          throw new Error('Invalid number in diff_fromDelta: ' + param);\n\t        }\n\t        var text = text1.substring(pointer, pointer += n);\n\t        if (tokens[x].charAt(0) == '=') {\n\t          diffs[diffsLength++] = [DIFF_EQUAL, text];\n\t        } else {\n\t          diffs[diffsLength++] = [DIFF_DELETE, text];\n\t        }\n\t        break;\n\t      default:\n\t        // Blank tokens are ok (from a trailing \\t).\n\t        // Anything else is an error.\n\t        if (tokens[x]) {\n\t          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n\t                          tokens[x]);\n\t        }\n\t    }\n\t  }\n\t  if (pointer != text1.length) {\n\t    throw new Error('Delta length (' + pointer +\n\t        ') does not equal source text length (' + text1.length + ').');\n\t  }\n\t  return diffs;\n\t};\n\t\n\t\n\t//  MATCH FUNCTIONS\n\t\n\t\n\t/**\n\t * Locate the best instance of 'pattern' in 'text' near 'loc'.\n\t * @param {string} text The text to search.\n\t * @param {string} pattern The pattern to search for.\n\t * @param {number} loc The location to search around.\n\t * @return {number} Best match index or -1.\n\t */\n\tdiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n\t  // Check for null inputs.\n\t  if (text == null || pattern == null || loc == null) {\n\t    throw new Error('Null input. (match_main)');\n\t  }\n\t\n\t  loc = Math.max(0, Math.min(loc, text.length));\n\t  if (text == pattern) {\n\t    // Shortcut (potentially not guaranteed by the algorithm)\n\t    return 0;\n\t  } else if (!text.length) {\n\t    // Nothing to match.\n\t    return -1;\n\t  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n\t    // Perfect match at the perfect spot!  (Includes case of null pattern)\n\t    return loc;\n\t  } else {\n\t    // Do a fuzzy compare.\n\t    return this.match_bitap_(text, pattern, loc);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n\t * Bitap algorithm.\n\t * @param {string} text The text to search.\n\t * @param {string} pattern The pattern to search for.\n\t * @param {number} loc The location to search around.\n\t * @return {number} Best match index or -1.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n\t  if (pattern.length > this.Match_MaxBits) {\n\t    throw new Error('Pattern too long for this browser.');\n\t  }\n\t\n\t  // Initialise the alphabet.\n\t  var s = this.match_alphabet_(pattern);\n\t\n\t  var dmp = this;  // 'this' becomes 'window' in a closure.\n\t\n\t  /**\n\t   * Compute and return the score for a match with e errors and x location.\n\t   * Accesses loc and pattern through being a closure.\n\t   * @param {number} e Number of errors in match.\n\t   * @param {number} x Location of match.\n\t   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n\t   * @private\n\t   */\n\t  function match_bitapScore_(e, x) {\n\t    var accuracy = e / pattern.length;\n\t    var proximity = Math.abs(loc - x);\n\t    if (!dmp.Match_Distance) {\n\t      // Dodge divide by zero error.\n\t      return proximity ? 1.0 : accuracy;\n\t    }\n\t    return accuracy + (proximity / dmp.Match_Distance);\n\t  }\n\t\n\t  // Highest score beyond which we give up.\n\t  var score_threshold = this.Match_Threshold;\n\t  // Is there a nearby exact match? (speedup)\n\t  var best_loc = text.indexOf(pattern, loc);\n\t  if (best_loc != -1) {\n\t    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n\t    // What about in the other direction? (speedup)\n\t    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n\t    if (best_loc != -1) {\n\t      score_threshold =\n\t          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n\t    }\n\t  }\n\t\n\t  // Initialise the bit arrays.\n\t  var matchmask = 1 << (pattern.length - 1);\n\t  best_loc = -1;\n\t\n\t  var bin_min, bin_mid;\n\t  var bin_max = pattern.length + text.length;\n\t  var last_rd;\n\t  for (var d = 0; d < pattern.length; d++) {\n\t    // Scan for the best match; each iteration allows for one more error.\n\t    // Run a binary search to determine how far from 'loc' we can stray at this\n\t    // error level.\n\t    bin_min = 0;\n\t    bin_mid = bin_max;\n\t    while (bin_min < bin_mid) {\n\t      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n\t        bin_min = bin_mid;\n\t      } else {\n\t        bin_max = bin_mid;\n\t      }\n\t      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n\t    }\n\t    // Use the result from this iteration as the maximum for the next.\n\t    bin_max = bin_mid;\n\t    var start = Math.max(1, loc - bin_mid + 1);\n\t    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\t\n\t    var rd = Array(finish + 2);\n\t    rd[finish + 1] = (1 << d) - 1;\n\t    for (var j = finish; j >= start; j--) {\n\t      // The alphabet (s) is a sparse hash, so the following line generates\n\t      // warnings.\n\t      var charMatch = s[text.charAt(j - 1)];\n\t      if (d === 0) {  // First pass: exact match.\n\t        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n\t      } else {  // Subsequent passes: fuzzy match.\n\t        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch |\n\t                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n\t                last_rd[j + 1];\n\t      }\n\t      if (rd[j] & matchmask) {\n\t        var score = match_bitapScore_(d, j - 1);\n\t        // This match will almost certainly be better than any existing match.\n\t        // But check anyway.\n\t        if (score <= score_threshold) {\n\t          // Told you so.\n\t          score_threshold = score;\n\t          best_loc = j - 1;\n\t          if (best_loc > loc) {\n\t            // When passing loc, don't exceed our current distance from loc.\n\t            start = Math.max(1, 2 * loc - best_loc);\n\t          } else {\n\t            // Already passed loc, downhill from here on in.\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    // No hope for a (better) match at greater error levels.\n\t    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n\t      break;\n\t    }\n\t    last_rd = rd;\n\t  }\n\t  return best_loc;\n\t};\n\t\n\t\n\t/**\n\t * Initialise the alphabet for the Bitap algorithm.\n\t * @param {string} pattern The text to encode.\n\t * @return {!Object} Hash of character locations.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n\t  var s = {};\n\t  for (var i = 0; i < pattern.length; i++) {\n\t    s[pattern.charAt(i)] = 0;\n\t  }\n\t  for (var i = 0; i < pattern.length; i++) {\n\t    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n\t  }\n\t  return s;\n\t};\n\t\n\t\n\t//  PATCH FUNCTIONS\n\t\n\t\n\t/**\n\t * Increase the context until it is unique,\n\t * but don't let the pattern expand beyond Match_MaxBits.\n\t * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n\t * @param {string} text Source text.\n\t * @private\n\t */\n\tdiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n\t  if (text.length == 0) {\n\t    return;\n\t  }\n\t  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n\t  var padding = 0;\n\t\n\t  // Look for the first and last matches of pattern in text.  If two different\n\t  // matches are found, increase the pattern length.\n\t  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n\t         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n\t         this.Patch_Margin) {\n\t    padding += this.Patch_Margin;\n\t    pattern = text.substring(patch.start2 - padding,\n\t                             patch.start2 + patch.length1 + padding);\n\t  }\n\t  // Add one chunk for good luck.\n\t  padding += this.Patch_Margin;\n\t\n\t  // Add the prefix.\n\t  var prefix = text.substring(patch.start2 - padding, patch.start2);\n\t  if (prefix) {\n\t    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n\t  }\n\t  // Add the suffix.\n\t  var suffix = text.substring(patch.start2 + patch.length1,\n\t                              patch.start2 + patch.length1 + padding);\n\t  if (suffix) {\n\t    patch.diffs.push([DIFF_EQUAL, suffix]);\n\t  }\n\t\n\t  // Roll back the start points.\n\t  patch.start1 -= prefix.length;\n\t  patch.start2 -= prefix.length;\n\t  // Extend the lengths.\n\t  patch.length1 += prefix.length + suffix.length;\n\t  patch.length2 += prefix.length + suffix.length;\n\t};\n\t\n\t\n\t/**\n\t * Compute a list of patches to turn text1 into text2.\n\t * Use diffs if provided, otherwise compute it ourselves.\n\t * There are four ways to call this function, depending on what data is\n\t * available to the caller:\n\t * Method 1:\n\t * a = text1, b = text2\n\t * Method 2:\n\t * a = diffs\n\t * Method 3 (optimal):\n\t * a = text1, b = diffs\n\t * Method 4 (deprecated, use method 3):\n\t * a = text1, b = text2, c = diffs\n\t *\n\t * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n\t * Array of diff tuples for text1 to text2 (method 2).\n\t * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n\t * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n\t * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n\t * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n\t * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n\t */\n\tdiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n\t  var text1, diffs;\n\t  if (typeof a == 'string' && typeof opt_b == 'string' &&\n\t      typeof opt_c == 'undefined') {\n\t    // Method 1: text1, text2\n\t    // Compute diffs from text1 and text2.\n\t    text1 = /** @type {string} */(a);\n\t    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n\t    if (diffs.length > 2) {\n\t      this.diff_cleanupSemantic(diffs);\n\t      this.diff_cleanupEfficiency(diffs);\n\t    }\n\t  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n\t      typeof opt_c == 'undefined') {\n\t    // Method 2: diffs\n\t    // Compute text1 from diffs.\n\t    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n\t    text1 = this.diff_text1(diffs);\n\t  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n\t      typeof opt_c == 'undefined') {\n\t    // Method 3: text1, diffs\n\t    text1 = /** @type {string} */(a);\n\t    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n\t  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n\t      opt_c && typeof opt_c == 'object') {\n\t    // Method 4: text1, text2, diffs\n\t    // text2 is not used.\n\t    text1 = /** @type {string} */(a);\n\t    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n\t  } else {\n\t    throw new Error('Unknown call format to patch_make.');\n\t  }\n\t\n\t  if (diffs.length === 0) {\n\t    return [];  // Get rid of the null case.\n\t  }\n\t  var patches = [];\n\t  var patch = new diff_match_patch.patch_obj();\n\t  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n\t  var char_count1 = 0;  // Number of characters into the text1 string.\n\t  var char_count2 = 0;  // Number of characters into the text2 string.\n\t  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n\t  // text2 (postpatch_text).  We recreate the patches one by one to determine\n\t  // context info.\n\t  var prepatch_text = text1;\n\t  var postpatch_text = text1;\n\t  for (var x = 0; x < diffs.length; x++) {\n\t    var diff_type = diffs[x][0];\n\t    var diff_text = diffs[x][1];\n\t\n\t    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n\t      // A new patch starts here.\n\t      patch.start1 = char_count1;\n\t      patch.start2 = char_count2;\n\t    }\n\t\n\t    switch (diff_type) {\n\t      case DIFF_INSERT:\n\t        patch.diffs[patchDiffLength++] = diffs[x];\n\t        patch.length2 += diff_text.length;\n\t        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n\t                         postpatch_text.substring(char_count2);\n\t        break;\n\t      case DIFF_DELETE:\n\t        patch.length1 += diff_text.length;\n\t        patch.diffs[patchDiffLength++] = diffs[x];\n\t        postpatch_text = postpatch_text.substring(0, char_count2) +\n\t                         postpatch_text.substring(char_count2 +\n\t                             diff_text.length);\n\t        break;\n\t      case DIFF_EQUAL:\n\t        if (diff_text.length <= 2 * this.Patch_Margin &&\n\t            patchDiffLength && diffs.length != x + 1) {\n\t          // Small equality inside a patch.\n\t          patch.diffs[patchDiffLength++] = diffs[x];\n\t          patch.length1 += diff_text.length;\n\t          patch.length2 += diff_text.length;\n\t        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n\t          // Time for a new patch.\n\t          if (patchDiffLength) {\n\t            this.patch_addContext_(patch, prepatch_text);\n\t            patches.push(patch);\n\t            patch = new diff_match_patch.patch_obj();\n\t            patchDiffLength = 0;\n\t            // Unlike Unidiff, our patch lists have a rolling context.\n\t            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n\t            // Update prepatch text & pos to reflect the application of the\n\t            // just completed patch.\n\t            prepatch_text = postpatch_text;\n\t            char_count1 = char_count2;\n\t          }\n\t        }\n\t        break;\n\t    }\n\t\n\t    // Update the current character count.\n\t    if (diff_type !== DIFF_INSERT) {\n\t      char_count1 += diff_text.length;\n\t    }\n\t    if (diff_type !== DIFF_DELETE) {\n\t      char_count2 += diff_text.length;\n\t    }\n\t  }\n\t  // Pick up the leftover patch if not empty.\n\t  if (patchDiffLength) {\n\t    this.patch_addContext_(patch, prepatch_text);\n\t    patches.push(patch);\n\t  }\n\t\n\t  return patches;\n\t};\n\t\n\t\n\t/**\n\t * Given an array of patches, return another array that is identical.\n\t * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n\t * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n\t */\n\tdiff_match_patch.prototype.patch_deepCopy = function(patches) {\n\t  // Making deep copies is hard in JavaScript.\n\t  var patchesCopy = [];\n\t  for (var x = 0; x < patches.length; x++) {\n\t    var patch = patches[x];\n\t    var patchCopy = new diff_match_patch.patch_obj();\n\t    patchCopy.diffs = [];\n\t    for (var y = 0; y < patch.diffs.length; y++) {\n\t      patchCopy.diffs[y] = patch.diffs[y].slice();\n\t    }\n\t    patchCopy.start1 = patch.start1;\n\t    patchCopy.start2 = patch.start2;\n\t    patchCopy.length1 = patch.length1;\n\t    patchCopy.length2 = patch.length2;\n\t    patchesCopy[x] = patchCopy;\n\t  }\n\t  return patchesCopy;\n\t};\n\t\n\t\n\t/**\n\t * Merge a set of patches onto the text.  Return a patched text, as well\n\t * as a list of true/false values indicating which patches were applied.\n\t * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n\t * @param {string} text Old text.\n\t * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n\t *      new text and an array of boolean values.\n\t */\n\tdiff_match_patch.prototype.patch_apply = function(patches, text) {\n\t  if (patches.length == 0) {\n\t    return [text, []];\n\t  }\n\t\n\t  // Deep copy the patches so that no changes are made to originals.\n\t  patches = this.patch_deepCopy(patches);\n\t\n\t  var nullPadding = this.patch_addPadding(patches);\n\t  text = nullPadding + text + nullPadding;\n\t\n\t  this.patch_splitMax(patches);\n\t  // delta keeps track of the offset between the expected and actual location\n\t  // of the previous patch.  If there are patches expected at positions 10 and\n\t  // 20, but the first patch was found at 12, delta is 2 and the second patch\n\t  // has an effective expected position of 22.\n\t  var delta = 0;\n\t  var results = [];\n\t  for (var x = 0; x < patches.length; x++) {\n\t    var expected_loc = patches[x].start2 + delta;\n\t    var text1 = this.diff_text1(patches[x].diffs);\n\t    var start_loc;\n\t    var end_loc = -1;\n\t    if (text1.length > this.Match_MaxBits) {\n\t      // patch_splitMax will only provide an oversized pattern in the case of\n\t      // a monster delete.\n\t      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n\t                                  expected_loc);\n\t      if (start_loc != -1) {\n\t        end_loc = this.match_main(text,\n\t            text1.substring(text1.length - this.Match_MaxBits),\n\t            expected_loc + text1.length - this.Match_MaxBits);\n\t        if (end_loc == -1 || start_loc >= end_loc) {\n\t          // Can't find valid trailing context.  Drop this patch.\n\t          start_loc = -1;\n\t        }\n\t      }\n\t    } else {\n\t      start_loc = this.match_main(text, text1, expected_loc);\n\t    }\n\t    if (start_loc == -1) {\n\t      // No match found.  :(\n\t      results[x] = false;\n\t      // Subtract the delta for this failed patch from subsequent patches.\n\t      delta -= patches[x].length2 - patches[x].length1;\n\t    } else {\n\t      // Found a match.  :)\n\t      results[x] = true;\n\t      delta = start_loc - expected_loc;\n\t      var text2;\n\t      if (end_loc == -1) {\n\t        text2 = text.substring(start_loc, start_loc + text1.length);\n\t      } else {\n\t        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n\t      }\n\t      if (text1 == text2) {\n\t        // Perfect match, just shove the replacement text in.\n\t        text = text.substring(0, start_loc) +\n\t               this.diff_text2(patches[x].diffs) +\n\t               text.substring(start_loc + text1.length);\n\t      } else {\n\t        // Imperfect match.  Run a diff to get a framework of equivalent\n\t        // indices.\n\t        var diffs = this.diff_main(text1, text2, false);\n\t        if (text1.length > this.Match_MaxBits &&\n\t            this.diff_levenshtein(diffs) / text1.length >\n\t            this.Patch_DeleteThreshold) {\n\t          // The end points match, but the content is unacceptably bad.\n\t          results[x] = false;\n\t        } else {\n\t          this.diff_cleanupSemanticLossless(diffs);\n\t          var index1 = 0;\n\t          var index2;\n\t          for (var y = 0; y < patches[x].diffs.length; y++) {\n\t            var mod = patches[x].diffs[y];\n\t            if (mod[0] !== DIFF_EQUAL) {\n\t              index2 = this.diff_xIndex(diffs, index1);\n\t            }\n\t            if (mod[0] === DIFF_INSERT) {  // Insertion\n\t              text = text.substring(0, start_loc + index2) + mod[1] +\n\t                     text.substring(start_loc + index2);\n\t            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n\t              text = text.substring(0, start_loc + index2) +\n\t                     text.substring(start_loc + this.diff_xIndex(diffs,\n\t                         index1 + mod[1].length));\n\t            }\n\t            if (mod[0] !== DIFF_DELETE) {\n\t              index1 += mod[1].length;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  // Strip the padding off.\n\t  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n\t  return [text, results];\n\t};\n\t\n\t\n\t/**\n\t * Add some padding on text start and end so that edges can match something.\n\t * Intended to be called only from within patch_apply.\n\t * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n\t * @return {string} The padding string added to each side.\n\t */\n\tdiff_match_patch.prototype.patch_addPadding = function(patches) {\n\t  var paddingLength = this.Patch_Margin;\n\t  var nullPadding = '';\n\t  for (var x = 1; x <= paddingLength; x++) {\n\t    nullPadding += String.fromCharCode(x);\n\t  }\n\t\n\t  // Bump all the patches forward.\n\t  for (var x = 0; x < patches.length; x++) {\n\t    patches[x].start1 += paddingLength;\n\t    patches[x].start2 += paddingLength;\n\t  }\n\t\n\t  // Add some padding on start of first diff.\n\t  var patch = patches[0];\n\t  var diffs = patch.diffs;\n\t  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n\t    // Add nullPadding equality.\n\t    diffs.unshift([DIFF_EQUAL, nullPadding]);\n\t    patch.start1 -= paddingLength;  // Should be 0.\n\t    patch.start2 -= paddingLength;  // Should be 0.\n\t    patch.length1 += paddingLength;\n\t    patch.length2 += paddingLength;\n\t  } else if (paddingLength > diffs[0][1].length) {\n\t    // Grow first equality.\n\t    var extraLength = paddingLength - diffs[0][1].length;\n\t    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n\t    patch.start1 -= extraLength;\n\t    patch.start2 -= extraLength;\n\t    patch.length1 += extraLength;\n\t    patch.length2 += extraLength;\n\t  }\n\t\n\t  // Add some padding on end of last diff.\n\t  patch = patches[patches.length - 1];\n\t  diffs = patch.diffs;\n\t  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n\t    // Add nullPadding equality.\n\t    diffs.push([DIFF_EQUAL, nullPadding]);\n\t    patch.length1 += paddingLength;\n\t    patch.length2 += paddingLength;\n\t  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n\t    // Grow last equality.\n\t    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n\t    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n\t    patch.length1 += extraLength;\n\t    patch.length2 += extraLength;\n\t  }\n\t\n\t  return nullPadding;\n\t};\n\t\n\t\n\t/**\n\t * Look through the patches and break up any which are longer than the maximum\n\t * limit of the match algorithm.\n\t * Intended to be called only from within patch_apply.\n\t * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n\t */\n\tdiff_match_patch.prototype.patch_splitMax = function(patches) {\n\t  var patch_size = this.Match_MaxBits;\n\t  for (var x = 0; x < patches.length; x++) {\n\t    if (patches[x].length1 > patch_size) {\n\t      var bigpatch = patches[x];\n\t      // Remove the big old patch.\n\t      patches.splice(x--, 1);\n\t      var start1 = bigpatch.start1;\n\t      var start2 = bigpatch.start2;\n\t      var precontext = '';\n\t      while (bigpatch.diffs.length !== 0) {\n\t        // Create one of several smaller patches.\n\t        var patch = new diff_match_patch.patch_obj();\n\t        var empty = true;\n\t        patch.start1 = start1 - precontext.length;\n\t        patch.start2 = start2 - precontext.length;\n\t        if (precontext !== '') {\n\t          patch.length1 = patch.length2 = precontext.length;\n\t          patch.diffs.push([DIFF_EQUAL, precontext]);\n\t        }\n\t        while (bigpatch.diffs.length !== 0 &&\n\t               patch.length1 < patch_size - this.Patch_Margin) {\n\t          var diff_type = bigpatch.diffs[0][0];\n\t          var diff_text = bigpatch.diffs[0][1];\n\t          if (diff_type === DIFF_INSERT) {\n\t            // Insertions are harmless.\n\t            patch.length2 += diff_text.length;\n\t            start2 += diff_text.length;\n\t            patch.diffs.push(bigpatch.diffs.shift());\n\t            empty = false;\n\t          } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n\t                     patch.diffs[0][0] == DIFF_EQUAL &&\n\t                     diff_text.length > 2 * patch_size) {\n\t            // This is a large deletion.  Let it pass in one chunk.\n\t            patch.length1 += diff_text.length;\n\t            start1 += diff_text.length;\n\t            empty = false;\n\t            patch.diffs.push([diff_type, diff_text]);\n\t            bigpatch.diffs.shift();\n\t          } else {\n\t            // Deletion or equality.  Only take as much as we can stomach.\n\t            diff_text = diff_text.substring(0,\n\t                patch_size - patch.length1 - this.Patch_Margin);\n\t            patch.length1 += diff_text.length;\n\t            start1 += diff_text.length;\n\t            if (diff_type === DIFF_EQUAL) {\n\t              patch.length2 += diff_text.length;\n\t              start2 += diff_text.length;\n\t            } else {\n\t              empty = false;\n\t            }\n\t            patch.diffs.push([diff_type, diff_text]);\n\t            if (diff_text == bigpatch.diffs[0][1]) {\n\t              bigpatch.diffs.shift();\n\t            } else {\n\t              bigpatch.diffs[0][1] =\n\t                  bigpatch.diffs[0][1].substring(diff_text.length);\n\t            }\n\t          }\n\t        }\n\t        // Compute the head context for the next patch.\n\t        precontext = this.diff_text2(patch.diffs);\n\t        precontext =\n\t            precontext.substring(precontext.length - this.Patch_Margin);\n\t        // Append the end context for this patch.\n\t        var postcontext = this.diff_text1(bigpatch.diffs)\n\t                              .substring(0, this.Patch_Margin);\n\t        if (postcontext !== '') {\n\t          patch.length1 += postcontext.length;\n\t          patch.length2 += postcontext.length;\n\t          if (patch.diffs.length !== 0 &&\n\t              patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n\t            patch.diffs[patch.diffs.length - 1][1] += postcontext;\n\t          } else {\n\t            patch.diffs.push([DIFF_EQUAL, postcontext]);\n\t          }\n\t        }\n\t        if (!empty) {\n\t          patches.splice(++x, 0, patch);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Take a list of patches and return a textual representation.\n\t * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n\t * @return {string} Text representation of patches.\n\t */\n\tdiff_match_patch.prototype.patch_toText = function(patches) {\n\t  var text = [];\n\t  for (var x = 0; x < patches.length; x++) {\n\t    text[x] = patches[x];\n\t  }\n\t  return text.join('');\n\t};\n\t\n\t\n\t/**\n\t * Parse a textual representation of patches and return a list of patch objects.\n\t * @param {string} textline Text representation of patches.\n\t * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n\t * @throws {!Error} If invalid input.\n\t */\n\tdiff_match_patch.prototype.patch_fromText = function(textline) {\n\t  var patches = [];\n\t  if (!textline) {\n\t    return patches;\n\t  }\n\t  var text = textline.split('\\n');\n\t  var textPointer = 0;\n\t  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n\t  while (textPointer < text.length) {\n\t    var m = text[textPointer].match(patchHeader);\n\t    if (!m) {\n\t      throw new Error('Invalid patch string: ' + text[textPointer]);\n\t    }\n\t    var patch = new diff_match_patch.patch_obj();\n\t    patches.push(patch);\n\t    patch.start1 = parseInt(m[1], 10);\n\t    if (m[2] === '') {\n\t      patch.start1--;\n\t      patch.length1 = 1;\n\t    } else if (m[2] == '0') {\n\t      patch.length1 = 0;\n\t    } else {\n\t      patch.start1--;\n\t      patch.length1 = parseInt(m[2], 10);\n\t    }\n\t\n\t    patch.start2 = parseInt(m[3], 10);\n\t    if (m[4] === '') {\n\t      patch.start2--;\n\t      patch.length2 = 1;\n\t    } else if (m[4] == '0') {\n\t      patch.length2 = 0;\n\t    } else {\n\t      patch.start2--;\n\t      patch.length2 = parseInt(m[4], 10);\n\t    }\n\t    textPointer++;\n\t\n\t    while (textPointer < text.length) {\n\t      var sign = text[textPointer].charAt(0);\n\t      try {\n\t        var line = decodeURI(text[textPointer].substring(1));\n\t      } catch (ex) {\n\t        // Malformed URI sequence.\n\t        throw new Error('Illegal escape in patch_fromText: ' + line);\n\t      }\n\t      if (sign == '-') {\n\t        // Deletion.\n\t        patch.diffs.push([DIFF_DELETE, line]);\n\t      } else if (sign == '+') {\n\t        // Insertion.\n\t        patch.diffs.push([DIFF_INSERT, line]);\n\t      } else if (sign == ' ') {\n\t        // Minor equality.\n\t        patch.diffs.push([DIFF_EQUAL, line]);\n\t      } else if (sign == '@') {\n\t        // Start of next patch.\n\t        break;\n\t      } else if (sign === '') {\n\t        // Blank line?  Whatever.\n\t      } else {\n\t        // WTF?\n\t        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n\t      }\n\t      textPointer++;\n\t    }\n\t  }\n\t  return patches;\n\t};\n\t\n\t\n\t/**\n\t * Class representing one patch operation.\n\t * @constructor\n\t */\n\tdiff_match_patch.patch_obj = function() {\n\t  /** @type {!Array.<!diff_match_patch.Diff>} */\n\t  this.diffs = [];\n\t  /** @type {?number} */\n\t  this.start1 = null;\n\t  /** @type {?number} */\n\t  this.start2 = null;\n\t  /** @type {number} */\n\t  this.length1 = 0;\n\t  /** @type {number} */\n\t  this.length2 = 0;\n\t};\n\t\n\t\n\t/**\n\t * Emmulate GNU diff's format.\n\t * Header: @@ -382,8 +481,9 @@\n\t * Indicies are printed as 1-based, not 0-based.\n\t * @return {string} The GNU diff string.\n\t */\n\tdiff_match_patch.patch_obj.prototype.toString = function() {\n\t  var coords1, coords2;\n\t  if (this.length1 === 0) {\n\t    coords1 = this.start1 + ',0';\n\t  } else if (this.length1 == 1) {\n\t    coords1 = this.start1 + 1;\n\t  } else {\n\t    coords1 = (this.start1 + 1) + ',' + this.length1;\n\t  }\n\t  if (this.length2 === 0) {\n\t    coords2 = this.start2 + ',0';\n\t  } else if (this.length2 == 1) {\n\t    coords2 = this.start2 + 1;\n\t  } else {\n\t    coords2 = (this.start2 + 1) + ',' + this.length2;\n\t  }\n\t  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n\t  var op;\n\t  // Escape the body of the patch with %xx notation.\n\t  for (var x = 0; x < this.diffs.length; x++) {\n\t    switch (this.diffs[x][0]) {\n\t      case DIFF_INSERT:\n\t        op = '+';\n\t        break;\n\t      case DIFF_DELETE:\n\t        op = '-';\n\t        break;\n\t      case DIFF_EQUAL:\n\t        op = ' ';\n\t        break;\n\t    }\n\t    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n\t  }\n\t  return text.join('').replace(/%20/g, ' ');\n\t};\n\t\n\t\n\t// Export these global variables so that they survive Google's JS compiler.\n\t// In a browser, 'this' will be 'window'.\n\t// In node.js 'this' will be a global object.\n\tthis['diff_match_patch'] = diff_match_patch;\n\tthis['DIFF_DELETE'] = DIFF_DELETE;\n\tthis['DIFF_INSERT'] = DIFF_INSERT;\n\tthis['DIFF_EQUAL'] = DIFF_EQUAL;\n\t\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t// use as 2nd parameter for JSON.parse to revive Date instances\n\tmodule.exports = function dateReviver(key, value) {\n\t  var parts;\n\t  if (typeof value === 'string') {\n\t    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+\\-])(\\d{2}):(\\d{2}))$/.exec(value);\n\t    if (parts) {\n\t      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n\t    }\n\t  }\n\t  return value;\n\t};\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./clone\": 37,\n\t\t\"./clone.js\": 37,\n\t\t\"./contexts/context\": 36,\n\t\t\"./contexts/context.js\": 36,\n\t\t\"./contexts/diff\": 35,\n\t\t\"./contexts/diff.js\": 35,\n\t\t\"./contexts/patch\": 38,\n\t\t\"./contexts/patch.js\": 38,\n\t\t\"./contexts/reverse\": 39,\n\t\t\"./contexts/reverse.js\": 39,\n\t\t\"./date-reviver\": 48,\n\t\t\"./date-reviver.js\": 48,\n\t\t\"./diffpatcher\": 32,\n\t\t\"./diffpatcher.js\": 32,\n\t\t\"./environment\": 31,\n\t\t\"./environment.js\": 31,\n\t\t\"./filters/arrays\": 42,\n\t\t\"./filters/arrays.js\": 42,\n\t\t\"./filters/dates\": 44,\n\t\t\"./filters/dates.js\": 44,\n\t\t\"./filters/lcs\": 43,\n\t\t\"./filters/lcs.js\": 43,\n\t\t\"./filters/nested\": 41,\n\t\t\"./filters/nested.js\": 41,\n\t\t\"./filters/texts\": 45,\n\t\t\"./filters/texts.js\": 45,\n\t\t\"./filters/trivial\": 40,\n\t\t\"./filters/trivial.js\": 40,\n\t\t\"./formatters/annotated\": 50,\n\t\t\"./formatters/annotated.js\": 50,\n\t\t\"./formatters/base\": 51,\n\t\t\"./formatters/base.js\": 51,\n\t\t\"./formatters/console\": 52,\n\t\t\"./formatters/console.js\": 52,\n\t\t\"./formatters/html\": 60,\n\t\t\"./formatters/html.js\": 60,\n\t\t\"./formatters/index\": 61,\n\t\t\"./formatters/index.js\": 61,\n\t\t\"./formatters/jsonpatch\": 62,\n\t\t\"./formatters/jsonpatch.js\": 62,\n\t\t\"./main\": 30,\n\t\t\"./main-formatters\": 64,\n\t\t\"./main-formatters.js\": 64,\n\t\t\"./main-full\": 65,\n\t\t\"./main-full.js\": 65,\n\t\t\"./main.js\": 30,\n\t\t\"./pipe\": 34,\n\t\t\"./pipe.js\": 34,\n\t\t\"./processor\": 33,\n\t\t\"./processor.js\": 33\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 49;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar base = __webpack_require__(51);\n\tvar BaseFormatter = base.BaseFormatter;\n\t\n\tvar AnnotatedFormatter = function AnnotatedFormatter() {\n\t  this.includeMoveDestinations = false;\n\t};\n\t\n\tAnnotatedFormatter.prototype = new BaseFormatter();\n\t\n\tAnnotatedFormatter.prototype.prepareContext = function(context) {\n\t  BaseFormatter.prototype.prepareContext.call(this, context);\n\t  context.indent = function(levels) {\n\t    this.indentLevel = (this.indentLevel || 0) +\n\t      (typeof levels === 'undefined' ? 1 : levels);\n\t    this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n\t  };\n\t  context.row = function(json, htmlNote) {\n\t    context.out('<tr><td style=\"white-space: nowrap;\">' +\n\t      '<pre class=\"jsondiffpatch-annotated-indent\" style=\"display: inline-block\">');\n\t    context.out(context.indentPad);\n\t    context.out('</pre><pre style=\"display: inline-block\">');\n\t    context.out(json);\n\t    context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n\t    context.out(htmlNote);\n\t    context.out('</div></td></tr>');\n\t  };\n\t};\n\t\n\tAnnotatedFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n\t  context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n\t};\n\t\n\tAnnotatedFormatter.prototype.formatTextDiffString = function(context, value) {\n\t  var lines = this.parseTextDiff(value);\n\t  context.out('<ul class=\"jsondiffpatch-textdiff\">');\n\t  for (var i = 0, l = lines.length; i < l; i++) {\n\t    var line = lines[i];\n\t    context.out('<li>' +\n\t      '<div class=\"jsondiffpatch-textdiff-location\">' +\n\t      '<span class=\"jsondiffpatch-textdiff-line-number\">' +\n\t      line.location.line +\n\t      '</span>' +\n\t      '<span class=\"jsondiffpatch-textdiff-char\">' +\n\t      line.location.chr +\n\t      '</span>' +\n\t      '</div>' +\n\t      '<div class=\"jsondiffpatch-textdiff-line\">');\n\t    var pieces = line.pieces;\n\t    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n\t      var piece = pieces[pieceIndex];\n\t      context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' +\n\t        piece.text + '</span>');\n\t    }\n\t    context.out('</div></li>');\n\t  }\n\t  context.out('</ul>');\n\t};\n\t\n\tAnnotatedFormatter.prototype.rootBegin = function(context, type, nodeType) {\n\t  context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n\t  if (type === 'node') {\n\t    context.row('{');\n\t    context.indent();\n\t  }\n\t  if (nodeType === 'array') {\n\t    context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n\t  }\n\t};\n\t\n\tAnnotatedFormatter.prototype.rootEnd = function(context, type) {\n\t  if (type === 'node') {\n\t    context.indent(-1);\n\t    context.row('}');\n\t  }\n\t  context.out('</table>');\n\t};\n\t\n\tAnnotatedFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n\t  context.row('&quot;' + key + '&quot;: {');\n\t  if (type === 'node') {\n\t    context.indent();\n\t  }\n\t  if (nodeType === 'array') {\n\t    context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n\t  }\n\t};\n\t\n\tAnnotatedFormatter.prototype.nodeEnd = function(context, key, leftKey, type, nodeType, isLast) {\n\t  if (type === 'node') {\n\t    context.indent(-1);\n\t  }\n\t  context.row('}' + (isLast ? '' : ','));\n\t};\n\t\n\t/* jshint camelcase: false */\n\t\n\tAnnotatedFormatter.prototype.format_unchanged = function() {\n\t  return;\n\t};\n\t\n\tAnnotatedFormatter.prototype.format_movedestination = function() {\n\t  return;\n\t};\n\t\n\t\n\tAnnotatedFormatter.prototype.format_node = function(context, delta, left) {\n\t  // recurse\n\t  this.formatDeltaChildren(context, delta, left);\n\t};\n\t\n\tvar wrapPropertyName = function(name) {\n\t  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n\t};\n\t\n\tvar deltaAnnotations = {\n\t  added: function(delta, left, key, leftKey) {\n\t    var formatLegend = ' <pre>([newValue])</pre>';\n\t    if (typeof leftKey === 'undefined') {\n\t      return 'new value' + formatLegend;\n\t    }\n\t    if (typeof leftKey === 'number') {\n\t      return 'insert at index ' + leftKey + formatLegend;\n\t    }\n\t    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n\t  },\n\t  modified: function(delta, left, key, leftKey) {\n\t    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n\t    if (typeof leftKey === 'undefined') {\n\t      return 'modify value' + formatLegend;\n\t    }\n\t    if (typeof leftKey === 'number') {\n\t      return 'modify at index ' + leftKey + formatLegend;\n\t    }\n\t    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n\t  },\n\t  deleted: function(delta, left, key, leftKey) {\n\t    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n\t    if (typeof leftKey === 'undefined') {\n\t      return 'delete value' + formatLegend;\n\t    }\n\t    if (typeof leftKey === 'number') {\n\t      return 'remove index ' + leftKey + formatLegend;\n\t    }\n\t    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n\t  },\n\t  moved: function(delta, left, key, leftKey) {\n\t    return 'move from <span title=\"(position to remove at original state)\">index ' +\n\t      leftKey + '</span> to ' +\n\t      '<span title=\"(position to insert at final state)\">index ' +\n\t      delta[1] + '</span>';\n\t  },\n\t  textdiff: function(delta, left, key, leftKey) {\n\t    var location = (typeof leftKey === 'undefined') ?\n\t      '' : (\n\t        (typeof leftKey === 'number') ?\n\t        ' at index ' + leftKey :\n\t        ' at property ' + wrapPropertyName(leftKey)\n\t      );\n\t    return 'text diff' + location + ', format is ' +\n\t      '<a href=\"https://code.google.com/p/google-diff-match-patch/wiki/Unidiff\">' +\n\t      'a variation of Unidiff</a>';\n\t  }\n\t};\n\t\n\tvar formatAnyChange = function(context, delta) {\n\t  var deltaType = this.getDeltaType(delta);\n\t  var annotator = deltaAnnotations[deltaType];\n\t  var htmlNote = annotator && annotator.apply(annotator,\n\t    Array.prototype.slice.call(arguments, 1));\n\t  var json = JSON.stringify(delta, null, 2);\n\t  if (deltaType === 'textdiff') {\n\t    // split text diffs lines\n\t    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n\t  }\n\t  context.indent();\n\t  context.row(json, htmlNote);\n\t  context.indent(-1);\n\t};\n\t\n\tAnnotatedFormatter.prototype.format_added = formatAnyChange;\n\tAnnotatedFormatter.prototype.format_modified = formatAnyChange;\n\tAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\n\tAnnotatedFormatter.prototype.format_moved = formatAnyChange;\n\tAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\n\t\n\t/* jshint camelcase: true */\n\t\n\texports.AnnotatedFormatter = AnnotatedFormatter;\n\t\n\tvar defaultInstance;\n\t\n\texports.format = function(delta, left) {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new AnnotatedFormatter();\n\t  }\n\t  return defaultInstance.format(delta, left);\n\t};\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\tvar isArray = (typeof Array.isArray === 'function') ?\n\t  // use native function\n\t  Array.isArray :\n\t  // use instanceof operator\n\t  function(a) {\n\t    return a instanceof Array;\n\t  };\n\t\n\tvar getObjectKeys = typeof Object.keys === 'function' ?\n\t  function(obj) {\n\t    return Object.keys(obj);\n\t  } : function(obj) {\n\t    var names = [];\n\t    for (var property in obj) {\n\t      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n\t        names.push(property);\n\t      }\n\t    }\n\t    return names;\n\t  };\n\t\n\tvar trimUnderscore = function(str) {\n\t  if (str.substr(0, 1) === '_') {\n\t    return str.slice(1);\n\t  }\n\t  return str;\n\t};\n\t\n\tvar arrayKeyToSortNumber = function(key) {\n\t  if (key === '_t') {\n\t    return -1;\n\t  } else {\n\t    if (key.substr(0, 1) === '_') {\n\t      return parseInt(key.slice(1), 10);\n\t    } else {\n\t      return parseInt(key, 10) + 0.1;\n\t    }\n\t  }\n\t};\n\t\n\tvar arrayKeyComparer = function(key1, key2) {\n\t  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n\t};\n\t\n\tvar BaseFormatter = function BaseFormatter() {};\n\t\n\tBaseFormatter.prototype.format = function(delta, left) {\n\t  var context = {};\n\t  this.prepareContext(context);\n\t  this.recurse(context, delta, left);\n\t  return this.finalize(context);\n\t};\n\t\n\tBaseFormatter.prototype.prepareContext = function(context) {\n\t  context.buffer = [];\n\t  context.out = function() {\n\t    this.buffer.push.apply(this.buffer, arguments);\n\t  };\n\t};\n\t\n\tBaseFormatter.prototype.typeFormattterNotFound = function(context, deltaType) {\n\t  throw new Error('cannot format delta type: ' + deltaType);\n\t};\n\t\n\tBaseFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n\t  return err.toString();\n\t};\n\t\n\tBaseFormatter.prototype.finalize = function(context) {\n\t  if (isArray(context.buffer)) {\n\t    return context.buffer.join('');\n\t  }\n\t};\n\t\n\tBaseFormatter.prototype.recurse = function(context, delta, left, key, leftKey, movedFrom, isLast) {\n\t\n\t  var useMoveOriginHere = delta && movedFrom;\n\t  var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\t\n\t  if (typeof delta === 'undefined' && typeof key === 'undefined') {\n\t    return undefined;\n\t  }\n\t\n\t  var type = this.getDeltaType(delta, movedFrom);\n\t  var nodeType = type === 'node' ? (delta._t === 'a' ? 'array' : 'object') : '';\n\t\n\t  if (typeof key !== 'undefined') {\n\t    this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n\t  } else {\n\t    this.rootBegin(context, type, nodeType);\n\t  }\n\t\n\t  var typeFormattter;\n\t  try {\n\t    typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n\t    typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n\t  } catch (err) {\n\t    this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n\t    if (typeof console !== 'undefined' && console.error) {\n\t      console.error(err.stack);\n\t    }\n\t  }\n\t\n\t  if (typeof key !== 'undefined') {\n\t    this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n\t  } else {\n\t    this.rootEnd(context, type, nodeType);\n\t  }\n\t};\n\t\n\tBaseFormatter.prototype.formatDeltaChildren = function(context, delta, left) {\n\t  var self = this;\n\t  this.forEachDeltaKey(delta, left, function(key, leftKey, movedFrom, isLast) {\n\t    self.recurse(context, delta[key], left ? left[leftKey] : undefined,\n\t      key, leftKey, movedFrom, isLast);\n\t  });\n\t};\n\t\n\tBaseFormatter.prototype.forEachDeltaKey = function(delta, left, fn) {\n\t  var keys = getObjectKeys(delta);\n\t  var arrayKeys = delta._t === 'a';\n\t  var moveDestinations = {};\n\t  var name;\n\t  if (typeof left !== 'undefined') {\n\t    for (name in left) {\n\t      if (Object.prototype.hasOwnProperty.call(left, name)) {\n\t        if (typeof delta[name] === 'undefined' &&\n\t          ((!arrayKeys) || typeof delta['_' + name] === 'undefined')) {\n\t          keys.push(name);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  // look for move destinations\n\t  for (name in delta) {\n\t    if (Object.prototype.hasOwnProperty.call(delta, name)) {\n\t      var value = delta[name];\n\t      if (isArray(value) && value[2] === 3) {\n\t        moveDestinations[value[1].toString()] = {\n\t          key: name,\n\t          value: left && left[parseInt(name.substr(1))]\n\t        };\n\t        if (this.includeMoveDestinations !== false) {\n\t          if ((typeof left === 'undefined') &&\n\t            (typeof delta[value[1]] === 'undefined')) {\n\t            keys.push(value[1].toString());\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t  if (arrayKeys) {\n\t    keys.sort(arrayKeyComparer);\n\t  } else {\n\t    keys.sort();\n\t  }\n\t  for (var index = 0, length = keys.length; index < length; index++) {\n\t    var key = keys[index];\n\t    if (arrayKeys && key === '_t') {\n\t      continue;\n\t    }\n\t    var leftKey = arrayKeys ?\n\t      (typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10)) :\n\t      key;\n\t    var isLast = (index === length - 1);\n\t    fn(key, leftKey, moveDestinations[leftKey], isLast);\n\t  }\n\t};\n\t\n\tBaseFormatter.prototype.getDeltaType = function(delta, movedFrom) {\n\t  if (typeof delta === 'undefined') {\n\t    if (typeof movedFrom !== 'undefined') {\n\t      return 'movedestination';\n\t    }\n\t    return 'unchanged';\n\t  }\n\t  if (isArray(delta)) {\n\t    if (delta.length === 1) {\n\t      return 'added';\n\t    }\n\t    if (delta.length === 2) {\n\t      return 'modified';\n\t    }\n\t    if (delta.length === 3 && delta[2] === 0) {\n\t      return 'deleted';\n\t    }\n\t    if (delta.length === 3 && delta[2] === 2) {\n\t      return 'textdiff';\n\t    }\n\t    if (delta.length === 3 && delta[2] === 3) {\n\t      return 'moved';\n\t    }\n\t  } else if (typeof delta === 'object') {\n\t    return 'node';\n\t  }\n\t  return 'unknown';\n\t};\n\t\n\tBaseFormatter.prototype.parseTextDiff = function(value) {\n\t  var output = [];\n\t  var lines = value.split('\\n@@ ');\n\t  for (var i = 0, l = lines.length; i < l; i++) {\n\t    var line = lines[i];\n\t    var lineOutput = {\n\t      pieces: []\n\t    };\n\t    var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n\t    lineOutput.location = {\n\t      line: location[0],\n\t      chr: location[1]\n\t    };\n\t    var pieces = line.split('\\n').slice(1);\n\t    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n\t      var piece = pieces[pieceIndex];\n\t      if (!piece.length) {\n\t        continue;\n\t      }\n\t      var pieceOutput = {\n\t        type: 'context'\n\t      };\n\t      if (piece.substr(0, 1) === '+') {\n\t        pieceOutput.type = 'added';\n\t      } else if (piece.substr(0, 1) === '-') {\n\t        pieceOutput.type = 'deleted';\n\t      }\n\t      pieceOutput.text = piece.slice(1);\n\t      lineOutput.pieces.push(pieceOutput);\n\t    }\n\t    output.push(lineOutput);\n\t  }\n\t  return output;\n\t};\n\t\n\texports.BaseFormatter = BaseFormatter;\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar chalk = __webpack_require__(53);\n\tvar base = __webpack_require__(51);\n\tvar BaseFormatter = base.BaseFormatter;\n\t\n\tvar colors = {\n\t  added: chalk.green,\n\t  deleted: chalk.red,\n\t  movedestination: chalk.gray,\n\t  moved: chalk.yellow,\n\t  unchanged: chalk.gray,\n\t  error: chalk.white.bgRed,\n\t  textDiffLine: chalk.gray\n\t};\n\t\n\tvar ConsoleFormatter = function ConsoleFormatter() {\n\t  this.includeMoveDestinations = false;\n\t};\n\t\n\tConsoleFormatter.prototype = new BaseFormatter();\n\t\n\tConsoleFormatter.prototype.prepareContext = function(context) {\n\t  BaseFormatter.prototype.prepareContext.call(this, context);\n\t  context.indent = function(levels) {\n\t    this.indentLevel = (this.indentLevel || 0) +\n\t      (typeof levels === 'undefined' ? 1 : levels);\n\t    this.indentPad = new Array(this.indentLevel + 1).join('  ');\n\t    this.outLine();\n\t  };\n\t  context.outLine = function() {\n\t    this.buffer.push('\\n' + (this.indentPad || ''));\n\t  };\n\t  context.out = function() {\n\t    for (var i = 0, l = arguments.length; i < l; i++) {\n\t      var lines = arguments[i].split('\\n');\n\t      var text = lines.join('\\n' + (this.indentPad || ''));\n\t      if (this.color && this.color[0]) {\n\t        text = this.color[0](text);\n\t      }\n\t      this.buffer.push(text);\n\t    }\n\t  };\n\t  context.pushColor = function(color) {\n\t    this.color = this.color || [];\n\t    this.color.unshift(color);\n\t  };\n\t  context.popColor = function() {\n\t    this.color = this.color || [];\n\t    this.color.shift();\n\t  };\n\t};\n\t\n\tConsoleFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n\t  context.pushColor(colors.error);\n\t  context.out('[ERROR]' + err);\n\t  context.popColor();\n\t};\n\t\n\tConsoleFormatter.prototype.formatValue = function(context, value) {\n\t  context.out(JSON.stringify(value, null, 2));\n\t};\n\t\n\tConsoleFormatter.prototype.formatTextDiffString = function(context, value) {\n\t  var lines = this.parseTextDiff(value);\n\t  context.indent();\n\t  for (var i = 0, l = lines.length; i < l; i++) {\n\t    var line = lines[i];\n\t    context.pushColor(colors.textDiffLine);\n\t    context.out(line.location.line + ',' + line.location.chr + ' ');\n\t    context.popColor();\n\t    var pieces = line.pieces;\n\t    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n\t      var piece = pieces[pieceIndex];\n\t      context.pushColor(colors[piece.type]);\n\t      context.out(piece.text);\n\t      context.popColor();\n\t    }\n\t    if (i < l - 1) {\n\t      context.outLine();\n\t    }\n\t  }\n\t  context.indent(-1);\n\t};\n\t\n\tConsoleFormatter.prototype.rootBegin = function(context, type, nodeType) {\n\t  context.pushColor(colors[type]);\n\t  if (type === 'node') {\n\t    context.out(nodeType === 'array' ? '[' : '{');\n\t    context.indent();\n\t  }\n\t};\n\t\n\tConsoleFormatter.prototype.rootEnd = function(context, type, nodeType) {\n\t  if (type === 'node') {\n\t    context.indent(-1);\n\t    context.out(nodeType === 'array' ? ']' : '}');\n\t  }\n\t  context.popColor();\n\t};\n\t\n\tConsoleFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n\t  context.pushColor(colors[type]);\n\t  context.out(leftKey + ': ');\n\t  if (type === 'node') {\n\t    context.out(nodeType === 'array' ? '[' : '{');\n\t    context.indent();\n\t  }\n\t};\n\t\n\tConsoleFormatter.prototype.nodeEnd = function(context, key, leftKey, type, nodeType, isLast) {\n\t  if (type === 'node') {\n\t    context.indent(-1);\n\t    context.out(nodeType === 'array' ? ']' : '}' +\n\t      (isLast ? '' : ','));\n\t  }\n\t  if (!isLast) {\n\t    context.outLine();\n\t  }\n\t  context.popColor();\n\t};\n\t\n\t/* jshint camelcase: false */\n\t\n\tConsoleFormatter.prototype.format_unchanged = function(context, delta, left) {\n\t  if (typeof left === 'undefined') {\n\t    return;\n\t  }\n\t  this.formatValue(context, left);\n\t};\n\t\n\tConsoleFormatter.prototype.format_movedestination = function(context, delta, left) {\n\t  if (typeof left === 'undefined') {\n\t    return;\n\t  }\n\t  this.formatValue(context, left);\n\t};\n\t\n\tConsoleFormatter.prototype.format_node = function(context, delta, left) {\n\t  // recurse\n\t  this.formatDeltaChildren(context, delta, left);\n\t};\n\t\n\tConsoleFormatter.prototype.format_added = function(context, delta) {\n\t  this.formatValue(context, delta[0]);\n\t};\n\t\n\tConsoleFormatter.prototype.format_modified = function(context, delta) {\n\t  context.pushColor(colors.deleted);\n\t  this.formatValue(context, delta[0]);\n\t  context.popColor();\n\t  context.out(' => ');\n\t  context.pushColor(colors.added);\n\t  this.formatValue(context, delta[1]);\n\t  context.popColor();\n\t};\n\t\n\tConsoleFormatter.prototype.format_deleted = function(context, delta) {\n\t  this.formatValue(context, delta[0]);\n\t};\n\t\n\tConsoleFormatter.prototype.format_moved = function(context, delta) {\n\t  context.out('==> ' + delta[1]);\n\t};\n\t\n\tConsoleFormatter.prototype.format_textdiff = function(context, delta) {\n\t  this.formatTextDiffString(context, delta[0]);\n\t};\n\t\n\t/* jshint camelcase: true */\n\t\n\texports.ConsoleFormatter = ConsoleFormatter;\n\t\n\tvar defaultInstance;\n\t\n\tvar format = function(delta, left) {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new ConsoleFormatter();\n\t  }\n\t  return defaultInstance.format(delta, left);\n\t};\n\t\n\texports.log = function(delta, left) {\n\t  console.log(format(delta, left));\n\t};\n\t\n\texports.format = format;\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar escapeStringRegexp = __webpack_require__(54);\n\tvar ansiStyles = __webpack_require__(55);\n\tvar stripAnsi = __webpack_require__(56);\n\tvar hasAnsi = __webpack_require__(58);\n\tvar supportsColor = __webpack_require__(59);\n\tvar defineProps = Object.defineProperties;\n\tvar chalk = module.exports;\n\t\n\tfunction build(_styles) {\n\t\tvar builder = function builder() {\n\t\t\treturn applyStyle.apply(builder, arguments);\n\t\t};\n\t\tbuilder._styles = _styles;\n\t\t// __proto__ is used because we must return a function, but there is\n\t\t// no way to create a function with a different prototype.\n\t\tbuilder.__proto__ = proto;\n\t\treturn builder;\n\t}\n\t\n\tvar styles = (function () {\n\t\tvar ret = {};\n\t\n\t\tansiStyles.grey = ansiStyles.gray;\n\t\n\t\tObject.keys(ansiStyles).forEach(function (key) {\n\t\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\t\n\t\t\tret[key] = {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn build(this._styles.concat(key));\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\n\t\treturn ret;\n\t})();\n\t\n\tvar proto = defineProps(function chalk() {}, styles);\n\t\n\tfunction applyStyle() {\n\t\t// support varags, but simply cast to string in case there's only one arg\n\t\tvar args = arguments;\n\t\tvar argsLen = args.length;\n\t\tvar str = argsLen !== 0 && String(arguments[0]);\n\t\tif (argsLen > 1) {\n\t\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\t\tstr += ' ' + args[a];\n\t\t\t}\n\t\t}\n\t\n\t\tif (!chalk.enabled || !str) {\n\t\t\treturn str;\n\t\t}\n\t\n\t\t/*jshint validthis: true*/\n\t\tvar nestedStyles = this._styles;\n\t\n\t\tfor (var i = 0; i < nestedStyles.length; i++) {\n\t\t\tvar code = ansiStyles[nestedStyles[i]];\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t\t}\n\t\n\t\treturn str;\n\t}\n\t\n\tfunction init() {\n\t\tvar ret = {};\n\t\n\t\tObject.keys(styles).forEach(function (name) {\n\t\t\tret[name] = {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn build([name]);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\n\t\treturn ret;\n\t}\n\t\n\tdefineProps(chalk, init());\n\t\n\tchalk.styles = ansiStyles;\n\tchalk.hasColor = hasAnsi;\n\tchalk.stripColor = stripAnsi;\n\tchalk.supportsColor = supportsColor;\n\t\n\t// detect mode if not set manually\n\tif (chalk.enabled === undefined) {\n\t\tchalk.enabled = chalk.supportsColor;\n\t}\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\t\n\tmodule.exports = function (str) {\n\t\tif (typeof str !== 'string') {\n\t\t\tthrow new TypeError('Expected a string');\n\t\t}\n\t\n\t\treturn str.replace(matchOperatorsRe, '\\\\$&');\n\t};\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\tvar styles = module.exports;\n\t\n\tvar codes = {\n\t\treset: [0, 0],\n\t\n\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\tdim: [2, 22],\n\t\titalic: [3, 23],\n\t\tunderline: [4, 24],\n\t\tinverse: [7, 27],\n\t\thidden: [8, 28],\n\t\tstrikethrough: [9, 29],\n\t\n\t\tblack: [30, 39],\n\t\tred: [31, 39],\n\t\tgreen: [32, 39],\n\t\tyellow: [33, 39],\n\t\tblue: [34, 39],\n\t\tmagenta: [35, 39],\n\t\tcyan: [36, 39],\n\t\twhite: [37, 39],\n\t\tgray: [90, 39],\n\t\n\t\tbgBlack: [40, 49],\n\t\tbgRed: [41, 49],\n\t\tbgGreen: [42, 49],\n\t\tbgYellow: [43, 49],\n\t\tbgBlue: [44, 49],\n\t\tbgMagenta: [45, 49],\n\t\tbgCyan: [46, 49],\n\t\tbgWhite: [47, 49]\n\t};\n\t\n\tObject.keys(codes).forEach(function (key) {\n\t\tvar val = codes[key];\n\t\tvar style = styles[key] = {};\n\t\tstyle.open = '\\u001b[' + val[0] + 'm';\n\t\tstyle.close = '\\u001b[' + val[1] + 'm';\n\t});\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ansiRegex = __webpack_require__(57)();\n\t\n\tmodule.exports = function (str) {\n\t\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n\t};\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\tmodule.exports = function () {\n\t\treturn /\\u001b\\[(?:[0-9]{1,3}(?:;[0-9]{1,3})*)?[m|K]/g;\n\t};\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ansiRegex = __webpack_require__(57);\n\tvar re = new RegExp(ansiRegex().source); // remove the `g` flag\n\tmodule.exports = re.test.bind(re);\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\tmodule.exports = (function () {\n\t\tif (process.argv.indexOf('--no-color') !== -1) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (process.argv.indexOf('--color') !== -1) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif (process.stdout && !process.stdout.isTTY) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (process.platform === 'win32') {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ('COLORTERM' in process.env) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif (process.env.TERM === 'dumb') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\treturn false;\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar base = __webpack_require__(51);\n\tvar BaseFormatter = base.BaseFormatter;\n\t\n\tvar HtmlFormatter = function HtmlFormatter() {};\n\t\n\tHtmlFormatter.prototype = new BaseFormatter();\n\t\n\tfunction htmlEscape(text) {\n\t  var html = text;\n\t  var replacements = [\n\t    [/&/g, '&amp;'],\n\t    [/</g, '&lt;'],\n\t    [/>/g, '&gt;'],\n\t    [/'/g, '&apos;'],\n\t    [/\"/g, '&quot;']\n\t  ];\n\t  for (var i = 0; i < replacements.length; i++) {\n\t    html = html.replace(replacements[i][0], replacements[i][1]);\n\t  }\n\t  return html;\n\t}\n\t\n\tHtmlFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n\t  context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n\t};\n\t\n\tHtmlFormatter.prototype.formatValue = function(context, value) {\n\t  context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n\t};\n\t\n\tHtmlFormatter.prototype.formatTextDiffString = function(context, value) {\n\t  var lines = this.parseTextDiff(value);\n\t  context.out('<ul class=\"jsondiffpatch-textdiff\">');\n\t  for (var i = 0, l = lines.length; i < l; i++) {\n\t    var line = lines[i];\n\t    context.out('<li>' +\n\t      '<div class=\"jsondiffpatch-textdiff-location\">' +\n\t      '<span class=\"jsondiffpatch-textdiff-line-number\">' +\n\t      line.location.line +\n\t      '</span>' +\n\t      '<span class=\"jsondiffpatch-textdiff-char\">' +\n\t      line.location.chr +\n\t      '</span>' +\n\t      '</div>' +\n\t      '<div class=\"jsondiffpatch-textdiff-line\">');\n\t    var pieces = line.pieces;\n\t    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n\t      /* global unescape */\n\t      var piece = pieces[pieceIndex];\n\t      context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' +\n\t        htmlEscape(unescape(piece.text)) + '</span>');\n\t    }\n\t    context.out('</div></li>');\n\t  }\n\t  context.out('</ul>');\n\t};\n\t\n\tvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(node) {\n\t  node = node || document;\n\t  var getElementText = function(el) {\n\t    return el.textContent || el.innerText;\n\t  };\n\t  var eachByQuery = function(el, query, fn) {\n\t    var elems = el.querySelectorAll(query);\n\t    for (var i = 0, l = elems.length; i < l; i++) {\n\t      fn(elems[i]);\n\t    }\n\t  };\n\t  var eachChildren = function(el, fn) {\n\t    for (var i = 0, l = el.children.length; i < l; i++) {\n\t      fn(el.children[i], i);\n\t    }\n\t  };\n\t  eachByQuery(node, '.jsondiffpatch-arrow', function(arrow) {\n\t    var arrowParent = arrow.parentNode;\n\t    var svg = arrow.children[0],\n\t      path = svg.children[1];\n\t    svg.style.display = 'none';\n\t    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n\t    var container = arrowParent.parentNode;\n\t    var destinationElem;\n\t    eachChildren(container, function(child) {\n\t      if (child.getAttribute('data-key') === destination) {\n\t        destinationElem = child;\n\t      }\n\t    });\n\t    if (!destinationElem) {\n\t      return;\n\t    }\n\t    try {\n\t      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n\t      svg.setAttribute('height', Math.abs(distance) + 6);\n\t      arrow.style.top = (-8 + (distance > 0 ? 0 : distance)) + 'px';\n\t      var curve = distance > 0 ?\n\t        'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) :\n\t        'M30,' + (-distance) + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n\t      path.setAttribute('d', curve);\n\t      svg.style.display = '';\n\t    } catch (err) {\n\t      return;\n\t    }\n\t  });\n\t};\n\t\n\tHtmlFormatter.prototype.rootBegin = function(context, type, nodeType) {\n\t  var nodeClass = 'jsondiffpatch-' + type +\n\t    (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n\t  context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n\t};\n\t\n\tHtmlFormatter.prototype.rootEnd = function(context) {\n\t  context.out('</div>' + (context.hasArrows ?\n\t    ('<script type=\"text/javascript\">setTimeout(' +\n\t      adjustArrows.toString() +\n\t      ',10);</script>') : ''));\n\t};\n\t\n\tHtmlFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n\t  var nodeClass = 'jsondiffpatch-' + type +\n\t    (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n\t  context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' +\n\t    '<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>');\n\t};\n\t\n\t\n\tHtmlFormatter.prototype.nodeEnd = function(context) {\n\t  context.out('</li>');\n\t};\n\t\n\t/* jshint camelcase: false */\n\t\n\tHtmlFormatter.prototype.format_unchanged = function(context, delta, left) {\n\t  if (typeof left === 'undefined') {\n\t    return;\n\t  }\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatValue(context, left);\n\t  context.out('</div>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_movedestination = function(context, delta, left) {\n\t  if (typeof left === 'undefined') {\n\t    return;\n\t  }\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatValue(context, left);\n\t  context.out('</div>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_node = function(context, delta, left) {\n\t  // recurse\n\t  var nodeType = (delta._t === 'a') ? 'array' : 'object';\n\t  context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n\t  this.formatDeltaChildren(context, delta, left);\n\t  context.out('</ul>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_added = function(context, delta) {\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatValue(context, delta[0]);\n\t  context.out('</div>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_modified = function(context, delta) {\n\t  context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n\t  this.formatValue(context, delta[0]);\n\t  context.out('</div>' +\n\t    '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n\t  this.formatValue(context, delta[1]);\n\t  context.out('</div>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_deleted = function(context, delta) {\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatValue(context, delta[0]);\n\t  context.out('</div>');\n\t};\n\t\n\tHtmlFormatter.prototype.format_moved = function(context, delta) {\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatValue(context, delta[0]);\n\t  context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\t\n\t  // draw an SVG arrow from here to move destination\n\t  context.out(\n\t    /*jshint multistr: true */\n\t    '<div class=\"jsondiffpatch-arrow\" style=\"position: relative; left: -34px;\">\\\n\t        <svg width=\"30\" height=\"60\" style=\"position: absolute; display: none;\">\\\n\t        <defs>\\\n\t            <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\" refx=\"2\" refy=\"4\"\\\n\t                   orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\\n\t                <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\\n\t            </marker>\\\n\t        </defs>\\\n\t        <path d=\"M30,0 Q-10,25 26,50\" style=\"stroke: #88f; stroke-width: 2px; fill: none;\\\n\t        stroke-opacity: 0.5; marker-end: url(#markerArrow);\"></path>\\\n\t        </svg>\\\n\t        </div>');\n\t  context.hasArrows = true;\n\t};\n\t\n\tHtmlFormatter.prototype.format_textdiff = function(context, delta) {\n\t  context.out('<div class=\"jsondiffpatch-value\">');\n\t  this.formatTextDiffString(context, delta[0]);\n\t  context.out('</div>');\n\t};\n\t\n\t/* jshint camelcase: true */\n\t\n\tvar showUnchanged = function(show, node, delay) {\n\t  var el = node || document.body;\n\t  var prefix = 'jsondiffpatch-unchanged-';\n\t  var classes = {\n\t    showing: prefix + 'showing',\n\t    hiding: prefix + 'hiding',\n\t    visible: prefix + 'visible',\n\t    hidden: prefix + 'hidden',\n\t  };\n\t  var list = el.classList;\n\t  if (!list) {\n\t    return;\n\t  }\n\t  if (!delay) {\n\t    list.remove(classes.showing);\n\t    list.remove(classes.hiding);\n\t    list.remove(classes.visible);\n\t    list.remove(classes.hidden);\n\t    if (show === false) {\n\t      list.add(classes.hidden);\n\t    }\n\t    return;\n\t  }\n\t  if (show === false) {\n\t    list.remove(classes.showing);\n\t    list.add(classes.visible);\n\t    setTimeout(function() {\n\t      list.add(classes.hiding);\n\t    }, 10);\n\t  } else {\n\t    list.remove(classes.hiding);\n\t    list.add(classes.showing);\n\t    list.remove(classes.hidden);\n\t  }\n\t  var intervalId = setInterval(function() {\n\t    adjustArrows(el);\n\t  }, 100);\n\t  setTimeout(function() {\n\t    list.remove(classes.showing);\n\t    list.remove(classes.hiding);\n\t    if (show === false) {\n\t      list.add(classes.hidden);\n\t      list.remove(classes.visible);\n\t    } else {\n\t      list.add(classes.visible);\n\t      list.remove(classes.hidden);\n\t    }\n\t    setTimeout(function() {\n\t      list.remove(classes.visible);\n\t      clearInterval(intervalId);\n\t    }, delay + 400);\n\t  }, delay);\n\t};\n\t\n\tvar hideUnchanged = function(node, delay) {\n\t  return showUnchanged(false, node, delay);\n\t};\n\t\n\texports.HtmlFormatter = HtmlFormatter;\n\t\n\texports.showUnchanged = showUnchanged;\n\t\n\texports.hideUnchanged = hideUnchanged;\n\t\n\tvar defaultInstance;\n\t\n\texports.format = function(delta, left) {\n\t  if (!defaultInstance) {\n\t    defaultInstance = new HtmlFormatter();\n\t  }\n\t  return defaultInstance.format(delta, left);\n\t};\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar environment = __webpack_require__(31);\n\t\n\texports.base = __webpack_require__(51);\n\texports.html = __webpack_require__(60);\n\texports.annotated = __webpack_require__(50);\n\texports.jsonpatch = __webpack_require__(62);\n\t\n\tif (!environment.isBrowser) {\n\t  var consoleModuleName = './console';\n\t  exports.console = __webpack_require__(63)(consoleModuleName);\n\t}\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function () {\n\t  var base = __webpack_require__(51);\n\t  var BaseFormatter = base.BaseFormatter;\n\t\n\t  var named = {\n\t    added: 'add',\n\t    deleted: 'remove',\n\t    modified: 'replace',\n\t    moved: 'moved',\n\t    movedestination: 'movedestination',\n\t    unchanged: 'unchanged',\n\t    error: 'error',\n\t    textDiffLine: 'textDiffLine'\n\t  };\n\t\n\t  function JSONFormatter() {\n\t    this.includeMoveDestinations = false;\n\t  }\n\t\n\t  JSONFormatter.prototype = new BaseFormatter();\n\t\n\t  JSONFormatter.prototype.prepareContext = function (context) {\n\t    BaseFormatter.prototype.prepareContext.call(this, context);\n\t    context.result = [];\n\t    context.path = [];\n\t    context.pushCurrentOp = function (op, value) {\n\t      var val = {\n\t        op: op,\n\t        path: this.currentPath()\n\t      };\n\t      if (typeof value !== 'undefined') {\n\t        val.value = value;\n\t      }\n\t      this.result.push(val);\n\t    };\n\t\n\t    context.currentPath = function () {\n\t      return '/' + this.path.join('/');\n\t    };\n\t  };\n\t\n\t  JSONFormatter.prototype.typeFormattterErrorFormatter = function (context, err) {\n\t    context.out('[ERROR]' + err);\n\t  };\n\t\n\t  JSONFormatter.prototype.rootBegin = function () {\n\t  };\n\t\n\t  JSONFormatter.prototype.rootEnd = function () {\n\t  };\n\t\n\t  JSONFormatter.prototype.nodeBegin = function (context, key, leftKey) {\n\t    context.path.push(leftKey);\n\t  };\n\t\n\t  JSONFormatter.prototype.nodeEnd = function (context) {\n\t    context.path.pop();\n\t  };\n\t\n\t  /* jshint camelcase: false */\n\t\n\t  JSONFormatter.prototype.format_unchanged = function (context, delta, left) {\n\t    if (typeof left === 'undefined') {\n\t      return;\n\t    }\n\t    context.pushCurrentOp(named.unchanged, left);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_movedestination = function (context, delta, left) {\n\t    if (typeof left === 'undefined') {\n\t      return;\n\t    }\n\t    context.pushCurrentOp(named.movedestination, left);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_node = function (context, delta, left) {\n\t    this.formatDeltaChildren(context, delta, left);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_added = function (context, delta) {\n\t    context.pushCurrentOp(named.added, delta[0]);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_modified = function (context, delta) {\n\t    context.pushCurrentOp(named.modified, delta[1]);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_deleted = function (context) {\n\t    context.pushCurrentOp(named.deleted);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_moved = function (context, delta) {\n\t    context.pushCurrentOp(named.moved, delta[1]);\n\t  };\n\t\n\t  JSONFormatter.prototype.format_textdiff = function () {\n\t    throw 'not implimented';\n\t  };\n\t\n\t  JSONFormatter.prototype.format = function (delta, left) {\n\t    var context = {};\n\t    this.prepareContext(context);\n\t    this.recurse(context, delta, left);\n\t    return context.result;\n\t  };\n\t  /* jshint camelcase: true */\n\t\n\t  exports.JSONFormatter = JSONFormatter;\n\t\n\t  var defaultInstance;\n\t\n\t  function last(arr) {\n\t    return arr[arr.length - 1];\n\t  }\n\t\n\t  function sortBy(arr, pred) {\n\t    arr.sort(pred);\n\t    return arr;\n\t  }\n\t\n\t  var compareByIndexDesc = function (indexA, indexB) {\n\t    var lastA = parseInt(indexA, 10);\n\t    var lastB = parseInt(indexB, 10);\n\t    if (!(isNaN(lastA) || isNaN(lastB))) {\n\t      return lastB - lastA;\n\t    } else {\n\t      return 0;\n\t    }\n\t  };\n\t\n\t  function opsByDescendingOrder(removeOps) {\n\t    return sortBy(removeOps, function (a, b) {\n\t      var splitA = a.path.split('/');\n\t      var splitB = b.path.split('/');\n\t      if (splitA.length !== splitB.length) {\n\t        return splitA.length - splitB.length;\n\t      } else {\n\t        return compareByIndexDesc(last(splitA), last(splitB));\n\t      }\n\t    });\n\t  }\n\t\n\t  function partition(arr, pred) {\n\t    var left = [];\n\t    var right = [];\n\t\n\t    arr.forEach(function (el) {\n\t      var coll = pred(el) ? left : right;\n\t      coll.push(el);\n\t    });\n\t    return [left, right];\n\t  }\n\t\n\t  function reorderOps(jsonFormattedDiff) {\n\t    var removeOpsOtherOps = partition(jsonFormattedDiff, function (operation) {\n\t      return operation.op === 'remove';\n\t    });\n\t    var removeOps = removeOpsOtherOps[0];\n\t    var otherOps = removeOpsOtherOps[1];\n\t\n\t    var removeOpsReverse = opsByDescendingOrder(removeOps);\n\t    return removeOpsReverse.concat(otherOps);\n\t  }\n\t\n\t\n\t  var format = function (delta, left) {\n\t    if (!defaultInstance) {\n\t      defaultInstance = new JSONFormatter();\n\t    }\n\t    return reorderOps(defaultInstance.format(delta, left));\n\t  };\n\t\n\t  exports.log = function (delta, left) {\n\t    console.log(format(delta, left));\n\t  };\n\t\n\t  exports.format = format;\n\t})();\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./annotated\": 50,\n\t\t\"./annotated.js\": 50,\n\t\t\"./base\": 51,\n\t\t\"./base.js\": 51,\n\t\t\"./console\": 52,\n\t\t\"./console.js\": 52,\n\t\t\"./html\": 60,\n\t\t\"./html.js\": 60,\n\t\t\"./index\": 61,\n\t\t\"./index.js\": 61,\n\t\t\"./jsonpatch\": 62,\n\t\t\"./jsonpatch.js\": 62\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 63;\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(61);\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar environment = __webpack_require__(31);\n\t\n\tif (environment.isBrowser) {\n\t  /* global window */\n\t  /* jshint camelcase: false */\n\t  window.diff_match_patch = __webpack_require__(47);\n\t  /* jshint camelcase: true */\n\t}\n\t\n\tmodule.exports = __webpack_require__(30);\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _event = __webpack_require__(28);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _api = __webpack_require__(17);\n\t\n\tvar _api2 = _interopRequireDefault(_api);\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _error = __webpack_require__(27);\n\t\n\tvar _error2 = _interopRequireDefault(_error);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Use Channels to create, update and remove Telepat objects. You can create new Channels using the {@link #Telepat#subscribe subscribe}\n\t * or the {@link #Telepat#getChannel getChannel} methods of the main {@link Telepat} object.\n\t *\n\t * @class Channel\n\t *\n\t * @example\n\t * let articleChannel = telepat.subscribe({\n\t *  channel: {\n\t *    context: 'context-unique-identifier',\n\t *    model: 'article'\n\t *  }\n\t * }, () => {\n\t *  console.log(articleChannel.objectsArray);\n\t *\n\t *  // Create a new article object\n\t *  articleChannel.objects['new'] = {\n\t *    title: 'New article',\n\t *    text: 'Article body'\n\t *  };\n\t *\n\t *  // Update a specific article\n\t *  articleChannel.objects['article-unique-id'].title = 'New title';\n\t *\n\t *  // Delete a specific article\n\t *  delete articleChannel.objects['article-unique-id'];\n\t *\n\t *  // React to object updates\n\t *  articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n\t *    console.log(`Received article update of type ${operationType}, for object with id ${objectId}`);\n\t *    // Objects are already updated\n\t *    console.log(articleChannel.objects);\n\t *  });\n\t *\n\t *  // Unsubscribe and clear objects\n\t *  articleChannel.unsubscribe();\n\t * });\n\t */\n\tvar Channel = function () {\n\t  function Channel(monitor, options) {\n\t    var addCallback = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t    var updateCallback = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\t    var removeCallback = arguments.length <= 4 || arguments[4] === undefined ? null : arguments[4];\n\t\n\t    _classCallCheck(this, Channel);\n\t\n\t    this._event = new _event2.default(_logger2.default);\n\t    this._monitor = monitor;\n\t    this._options = options;\n\t    this._addCallback = addCallback;\n\t    this._updateCallback = updateCallback;\n\t    this._removeCallback = removeCallback;\n\t\n\t    /**\n\t     * A container object referencing all of the objects retrieved via subscription. Each object is stored on a key equal to its own unique id.\n\t     * @type {Object}\n\t     * @memberof Channel\n\t     * @instance\n\t     */\n\t    this.objects = {};\n\t    /**\n\t     * A container array referencing all of the objects retrieved via subscription. The order of the objects reflects the sorting options set for the channel.\n\t     * @type {Array<Object>}\n\t     * @memberof Channel\n\t     * @instance\n\t     */\n\t    this.objectsArray = [];\n\t    /**\n\t     * The current object count.\n\t     * @type {number|null}\n\t     * @memberof Channel\n\t     * @instance\n\t     */\n\t    this.objectsCount = null;\n\t  }\n\t\n\t  _createClass(Channel, [{\n\t    key: '_sortObjectArray',\n\t    value: function _sortObjectArray() {\n\t      var _this = this;\n\t\n\t      if (this._options.sort) {\n\t        this.objectsArray.sort(function (a, b) {\n\t          var result = null;\n\t\n\t          Object.keys(_this._options.sort).map(function (key) {\n\t            var order = _this._options.sort[key];\n\t            var factor = order === 'asc' ? 1 : -1;\n\t\n\t            if (a[key] && !b[key]) {\n\t              result = factor;\n\t            }\n\t            if (!a[key] && b[key]) {\n\t              result = -factor;\n\t            }\n\t            if (a[key] && b[key]) {\n\t              if (a[key] < b[key]) {\n\t                result = -factor;\n\t              }\n\t              if (a[key] > b[key]) {\n\t                result = factor;\n\t              }\n\t            }\n\t          });\n\t\n\t          if (!result) {\n\t            return 0;\n\t          }\n\t          return result;\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Call this function to perform the actual subscribe for the configured channel. This is usually invoked by the\n\t     * {@link #Telepat#subscribe subscribe} method on the main {@link Telepat} object.\n\t     *\n\t     * @param {TelepatCallback} callback Callback invoked after subscribe is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'subscribe',\n\t    value: function subscribe() {\n\t      var _this2 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.call('object/subscribe', this._options, function (err, res) {\n\t        if (err) {\n\t          _this2._event.emit('error', (0, _error2.default)('Subscribe failed with error: ' + err));\n\t          callback(err, null);\n\t        } else {\n\t          var i;\n\t\n\t          for (i = 0; i < res.body.content.length; i++) {\n\t            _this2.objects[res.body.content[i].id] = res.body.content[i];\n\t          }\n\t          _this2.objectsArray = res.body.content;\n\t          _this2._sortObjectArray();\n\t          var objectKeys = Object.keys(_this2.objects);\n\t\n\t          for (i = 0; i < objectKeys.length; i++) {\n\t            _this2.objects[objectKeys[i]].$$event = new _event2.default(_logger2.default);\n\t          }\n\t          _this2._monitor.add(_this2._options, _this2.objects, _this2._event, _this2._addCallback || _this2.add.bind(_this2), _this2._removeCallback || _this2.remove.bind(_this2), _this2._updateCallback || _this2.update.bind(_this2));\n\t          _this2._event.on('update', function (operation, parentId, parentObject, delta) {\n\t            if (operation === 'add') {\n\t              _this2.objectsArray.push(parentObject);\n\t              _this2._sortObjectArray();\n\t              if (_this2.objectsCount) {\n\t                _this2.objectsCount++;\n\t              }\n\t            } else if (operation === 'delete') {\n\t              _this2.objectsArray = _this2.objectsArray.filter(function (object) {\n\t                return object.id !== parentId;\n\t              });\n\t              _this2._sortObjectArray();\n\t              if (_this2.objectsCount) {\n\t                _this2.objectsCount--;\n\t              }\n\t            }\n\t          });\n\t          _this2._event.emit('subscribe');\n\t          callback(null, _this2);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this function to unsubscribe from the configured channel. All channel properties will be reset to original values.\n\t     *\n\t     * @param {TelepatCallback} callback Callback invoked after unsubscribe is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'unsubscribe',\n\t    value: function unsubscribe() {\n\t      var _this3 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.call('object/unsubscribe', this._options, function (err) {\n\t        if (err) {\n\t          _this3._event.emit('error', (0, _error2.default)('Unsubscribe failed with error: ' + err));\n\t          callback(err, null);\n\t        } else {\n\t          _this3.objects = {};\n\t          _this3.objectsArray = [];\n\t          _this3.objectsCount = null;\n\t          _this3._monitor.remove(_this3._options);\n\t          _this3._event.emit('unsubscribe');\n\t          _this3._event.emit('_unsubscribe');\n\t          callback(null, _this3);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to retrieve the number of objects available for this channel. Value will be available on the {@link #ChannelobjectsCount objectsCount} property.\n\t     *\n\t     * @param  {TelepatCallback} callback Callback invoked after getting object count is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'getCount',\n\t    value: function getCount() {\n\t      var _this4 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.call('object/count', this._options, function (err, res) {\n\t        if (err) {\n\t          _this4._event.emit('error', (0, _error2.default)('Get object count failed with error: ' + err));\n\t          callback(err, null);\n\t        } else {\n\t          _this4.objectsCount = res.body.content.count;\n\t          callback(null, _this4.objectsCount);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Add a new Telepat object to the current channel.\n\t     * Instead of using this function, you can also add the object to {@link #Channelobjects Channel.objects}, on any new key.\n\t     * The key will be automatically replaced with the new object id after the backend processes the operation.\n\t     *\n\t     * @param {Object} object The new object to add\n\t     * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the new object\n\t     *\n\t     * @example\n\t     * // This is one way of adding a new object using the channel instance.\n\t     * // The new key will be picked up by the monitoring system, which will signal the new event creation\n\t     * //   to the Telepat backend, and then delete the new key you just set from the objects property.\n\t     * // After processing the request, Telepat will signal the change back to the client, and the new object will be\n\t     * //   re-added to the objects property, but this time on the right key (equal to the new object's assigned id).\n\t     * //   This is when the 'update' event will get triggered on the channel.\n\t     * channel.objects['new'] = newObject;\n\t     *\n\t     * // Alternatively, you can call the add method:\n\t     * channel.add(newObject, err => {\n\t     *  if (err) {\n\t     *    // There's been a server error, check err. The object will not be added.\n\t     *  } else {\n\t     *    // We've successfully signaled that we want to add the object.\n\t     *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n\t     *    //   event on the channel, signaling the availability of the new object on the channel.objects property.\n\t     *  }\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(object) {\n\t      var _this5 = this;\n\t\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.call('object/create', {\n\t        model: this._options.channel.model,\n\t        context: this._options.channel.context || object.context_id,\n\t        content: object\n\t      }, function (err) {\n\t        if (err) {\n\t          _this5._event.emit('error', (0, _error2.default)('Adding object failed with error: ' + err));\n\t          callback(err, null);\n\t        } else {\n\t          callback(null, object);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Remove a Telepat object from the current channel.\n\t     * Instead of using this function, you can also delete the object from {@link #Channelobjects Channel.objects}.\n\t     *\n\t     * @param {string} id The id of the object to delete\n\t     * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the deleted object\n\t     *\n\t     * @example\n\t     * // This is one way of deleting an object using the channel instance.\n\t     * // The deleted key will be picked up by the monitoring system, which will signal the object removal\n\t     * //   to the Telepat backend. The change will be then signaled back to the client as confirmation, triggering\n\t     * //   the channel's 'update' event.\n\t     * // This is the optimistic way of doing a delete, as the removed object will be instantly gone from the local\n\t     * //   state, before the 'update' event is triggered (and even if it is not).\n\t     * delete channel.objects[objectId];\n\t     *\n\t     * // Alternatively, the pessimistic approach is to call the remove method:\n\t     * channel.remove(objectId, err => {\n\t     *  if (err) {\n\t     *    // There's been a server error, check err. The object will not be deleted.\n\t     *  } else {\n\t     *    // We've successfully signaled that we want to delete the object.\n\t     *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n\t     *    //   event on the channel, signaling that the object has been removed from the channel.objects property.\n\t     *  }\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'remove',\n\t    value: function remove(id) {\n\t      var _this6 = this;\n\t\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.del('object/delete', {\n\t        model: this._options.channel.model,\n\t        context: this._options.channel.context || this.objects[id].context_id,\n\t        id: id\n\t      }, function (err) {\n\t        if (err) {\n\t          _this6._event.emit('error', (0, _error2.default)('Removing object failed with error: ' + err));\n\t          callback(err, null);\n\t        } else {\n\t          callback(null, id);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Updates a Telepat object from the current channel.\n\t     * To call this function, you need to create an  array containing 'patch' objects, representing the\n\t      modifications that need to be persisted. The structure of a patch object is:\n\t     *\n\t     * `{'op': 'replace', 'path': channel + '/' + object_id + '/' + object_property, 'value': modified_value}`\n\t     *\n\t     * Instead of using this function, you can also update the object directly from {@link #Channelobjects Channel.objects}.\n\t     *\n\t     * @param {number} id The id of the object to update\n\t     * @param {Array<Object>} patches The array of patches representing the modifications that need to be persisted.\n\t     * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the updated object\n\t     *\n\t     * @example\n\t     * // This is one way of updating an object using the channel instance.\n\t     * // The updated key will be picked up by the monitoring system, which will signal the object update\n\t     * //   to the Telepat backend. The change will be then signaled back to the client as confirmation, triggering\n\t     * //   the channel's 'update' event.\n\t     * // This is the optimistic way of doing a delete, as the updated object will be instantly modified within the local\n\t     * //   state, before the 'update' event is triggered (and even if it is not).\n\t     * channel.objects[objectId].title = \"New title\";\n\t     *\n\t     * // Alternatively, the pessimistic approach is to call the update method:\n\t     * channel.update(objectId, [\n\t     *  {\n\t     *    'op': 'replace',\n\t     *    'path': `article/${objectId}/title`,\n\t     *    'value': 'New title'\n\t     *  }\n\t     * ], err => {\n\t     *  if (err) {\n\t     *    // There's been a server error, check err. The object will not be updated.\n\t     *  } else {\n\t     *    // We've successfully signaled that we want to update the object.\n\t     *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n\t     *    //   event on the channel, signaling that the object has been updated within the channel.objects property.\n\t     *  }\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(id, patches) {\n\t      var _this7 = this;\n\t\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      _api2.default.call('object/update', {\n\t        model: this._options.channel.model,\n\t        context: this._options.channel.context || this.objects[id].context_id,\n\t        id: id,\n\t        patches: patches\n\t      }, function (err) {\n\t        if (err) {\n\t          _this7._event.emit('error', (0, _error2.default)('Updating object failed with error: ' + err));\n\t        } else {}\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Invoked when there was an error processing the requested operation.\n\t     *\n\t     * @event error\n\t     * @type {Error}\n\t     */\n\t    /**\n\t     * Invoked when channel subscription is successful.\n\t     *\n\t     * @event subscribe\n\t     */\n\t    /**\n\t     * Invoked when channel unsubscription is successful.\n\t     *\n\t     * @event unsubscribe\n\t     */\n\t    /**\n\t     * Invoked when objects in the subscription have been modified (there was an update of an existing object, a new object has been added or an object has been deleted).\n\t     *\n\t     * @event update\n\t     * @param {string} eventType One of 'add', 'delete' or 'replace'\n\t     * @param {string} objectId The id of the affected object\n\t     * @param {Object} object The affected object itself\n\t     * @param {Object} oldObject Present only for the 'replace' eventType, the old state of the affected object\n\t     */\n\t\n\t    /**\n\t     * Call this function to add callbacks to be invoked on event triggers.\n\t     * Available callbacks:\n\t     *\n\t     * | Name                                               | Description           |\n\t     * | -------------------------------------------------- | --------------------- |\n\t     * | {@link #Channel.event:error error}                 | Invoked when there was an error processing the requested operation |\n\t     * | {@link #Channel.event:subscribe subscribe}         | Invoked when channel subscription is successful |\n\t     * | {@link #Channel.event:unsubscribe unsubscribe}     | Invoked when channel unsubscription is successful |\n\t     * | {@link #Channel.event:update update}               | Invoked when objects in the subscription have been modified (update of an existing object, new object or deleted object) |\n\t     *\n\t     * @param {string} name The name of the event to associate the callback with\n\t     * @param {function} callback The callback to be executed\n\t     * @return {number} A callback id. Save this in order to later remove the callback from the event (using {@link #Channel#removeCallback removeCallback})\n\t     * @example\n\t     * // React to object updates\n\t     *  articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n\t     *    console.log(`Received article update of type ${operationType}, for object with id ${objectId}`);\n\t     *    // Objects are already updated\n\t     *    console.log(articleChannel.objects);\n\t     *  });\n\t     */\n\t\n\t  }, {\n\t    key: 'on',\n\t    value: function on(name, callback) {\n\t      return this._event.on(name, callback);\n\t    }\n\t\n\t    /**\n\t     * Call this function to remove callbacks that have been set using {@link #Channel#on on}.\n\t     *\n\t     * @param {string} name The name of the event the callback was associated with\n\t     * @param {number} callbackId The callback id returned by calling {@link #Channel#on on}\n\t     * @example\n\t     * let updateCallbackId = channel.on('update', () => {\n\t     *  // Remove the callback after the first update event\n\t     *  channel.removeCallback(updateCallbackId);\n\t     * });\n\t     */\n\t\n\t  }, {\n\t    key: 'removeCallback',\n\t    value: function removeCallback(name, index) {\n\t      return this._event.removeCallback(name, index);\n\t    }\n\t  }]);\n\t\n\t  return Channel;\n\t}();\n\t\n\texports.default = Channel;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _api = __webpack_require__(17);\n\t\n\tvar _api2 = _interopRequireDefault(_api);\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tvar _error = __webpack_require__(27);\n\t\n\tvar _error2 = _interopRequireDefault(_error);\n\t\n\tvar _admin = __webpack_require__(68);\n\t\n\tvar _admin2 = _interopRequireDefault(_admin);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * You can access an instance of this class using the {@link #Telepatuser user} property of the Telepat object.\n\t *\n\t * @class User\n\t *\n\t * @example\n\t * telepat.user.login('email', 'password', (err) => {\n\t *  if (err) {\n\t *    // Treat login error\n\t *  } else {\n\t *    // Treat successful login\n\t *    console.log(telepat.user.data);\n\t *\n\t *    // Update user data\n\t *    telepat.user.data.points++;\n\t *  }\n\t * });\n\t */\n\tvar User = function () {\n\t  function User(db, event, monitor, setAdmin) {\n\t    var _this = this;\n\t\n\t    var callback = arguments.length <= 4 || arguments[4] === undefined ? function () {} : arguments[4];\n\t\n\t    _classCallCheck(this, User);\n\t\n\t    this._event = event;\n\t    this._monitor = monitor;\n\t    this._setAdmin = setAdmin;\n\t    this._db = db;\n\t    this._customProperties = [];\n\t    this._userChannel = null;\n\t\n\t    /**\n\t     * Indicates if the currently logged in user is an admin\n\t     * @type {boolean}\n\t     * @memberof User\n\t     * @instance\n\t     */\n\t    this.isAdmin = false;\n\t    /**\n\t     * Indicates if there's a saved authentication token that can be used to re-login\n\t     * @type {boolean}\n\t     * @memberof User\n\t     * @instance\n\t     */\n\t    this.canReauth = null;\n\t    /**\n\t     * Object that holds all key-value data about the currently logged in user\n\t     * @type {Object}\n\t     * @memberof User\n\t     * @instance\n\t     */\n\t    this.data = {};\n\t    _api2.default.tokenUpdateCallback = function (newToken) {\n\t      _this._saveToken(newToken);\n\t    };\n\t\n\t    this._db.get(':userToken').then(function (doc) {\n\t      _this.canReauth = true;\n\t      callback();\n\t    }).catch(function () {\n\t      _this.canReauth = false;\n\t      callback();\n\t    });\n\t  }\n\t\n\t  _createClass(User, [{\n\t    key: '_saveToken',\n\t    value: function _saveToken(token) {\n\t      var _this2 = this;\n\t\n\t      var newObject = {\n\t        _id: ':userToken',\n\t        value: {\n\t          token: token,\n\t          admin: this.isAdmin\n\t        }\n\t      };\n\t\n\t      this._db.get(':userToken').then(function (doc) {\n\t        newObject._rev = doc._rev;\n\t        _logger2.default.info('Replacing existing authentication token');\n\t        _this2._db.put(newObject).then(function (doc) {\n\t          _this2.canReauth = true;\n\t        }).catch(function (err) {\n\t          _this2.canReauth = false;\n\t          _logger2.default.warn('Could not persist authentication token. Error: ' + err);\n\t        });\n\t      }).catch(function () {\n\t        _this2._db.put(newObject).then(function (doc) {\n\t          _this2.canReauth = true;\n\t        }).catch(function (err) {\n\t          _this2.canReauth = false;\n\t          _logger2.default.warn('Could not persist authentication token. Error: ' + err);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: '_login',\n\t    value: function _login(endpoint, options, isAdmin) {\n\t      var callback = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\t\n\t      var self = this;\n\t\n\t      function success(res) {\n\t        var userContainer = {};\n\t\n\t        for (var k in res.body.content.user) {\n\t          self.data[k] = res.body.content.user[k];\n\t          self._customProperties.push(k);\n\t        }\n\t        if (isAdmin) {\n\t          self.isAdmin = true;\n\t          self._setAdmin(new _admin2.default(self));\n\t        }\n\t\n\t        userContainer[self.data.id] = self.data;\n\t        self._monitor.add({ channel: { model: self.isAdmin ? 'admin' : 'user' } }, userContainer, null, function () {}, function () {}, self.update.bind(self));\n\t\n\t        _api2.default.authenticationToken = res.body.content.token;\n\t        self._saveToken(_api2.default.authenticationToken);\n\t        self._event.emit('login');\n\t        callback(null, self);\n\t      }\n\t\n\t      _api2.default.call(endpoint, options, function (err, res) {\n\t        if (err) {\n\t          if (err.status === 404 && options.hasOwnProperty('access_token')) {\n\t            _logger2.default.info('Got 404 on Facebook login, registering user first');\n\t            _api2.default.call('user/register-facebook', options, function (err, res) {\n\t              if (err) {\n\t                _logger2.default.error('Failed to login with Facebook. Could not register or login user.');\n\t                self._event.emit('login_error', (0, _error2.default)('Login failed with error: ' + err));\n\t              } else {\n\t                _api2.default.call(endpoint, options, function (err, res) {\n\t                  if (err) {\n\t                    _logger2.default.error('Failed to login with Facebook. User registration was successful, but login failed.');\n\t                    self._event.emit('login_error', (0, _error2.default)('Login failed with error: ' + err));\n\t                  } else {\n\t                    success(res);\n\t                  }\n\t                });\n\t              }\n\t            });\n\t          } else {\n\t            self._event.emit('login_error', (0, _error2.default)('Login failed with error: ' + err));\n\t            callback(err, null);\n\t          }\n\t        } else {\n\t          success(res);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * If there is a saved authentication token from previous connections, try to use it to login again.\n\t     * You can call this method if the {@link #UsercanReauth canReauth} property is true.\n\t     *\n\t     * @param  {TelepatCallback} callback Callback invoked after reauth operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'reauth',\n\t    value: function reauth() {\n\t      var _this3 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      this._db.get(':userToken').then(function (doc) {\n\t        _logger2.default.info('Retrieved saved authentication token');\n\t        _api2.default.authenticationToken = doc.value.token;\n\t        _api2.default.get(doc.value.admin ? 'admin/me' : 'user/me', '', function (err, res) {\n\t          if (err) {\n\t            _api2.default.authenticationToken = null;\n\t            this._setAdmin(null);\n\t            this._db.remove(doc._id, doc._rev);\n\t            this.canReauth = false;\n\t            callback((0, _error2.default)('Saved authentication token expired'), null);\n\t            this._customProperties = [];\n\t            this.data = {};\n\t            this._event.emit('logout');\n\t          } else {\n\t            var userContainer = {};\n\t\n\t            for (var k in res.body.content) {\n\t              this.data[k] = res.body.content[k];\n\t              this._customProperties.push(k);\n\t            }\n\t            if (res.body.content.type === 'admin') {\n\t              this.isAdmin = true;\n\t              this._saveToken(_api2.default.authenticationToken);\n\t              this._setAdmin(new _admin2.default(this));\n\t            }\n\t\n\t            userContainer[this.data.id] = this.data;\n\t            this._monitor.add({ channel: { model: this.isAdmin ? 'admin' : 'user' } }, userContainer, null, function () {}, function () {}, this.update.bind(this));\n\t            callback(null, res);\n\t            this._event.emit('login');\n\t          }\n\t        }.bind(_this3));\n\t      }).catch(function (err) {\n\t        callback((0, _error2.default)('Error retrieving authentication token: ' + err), null);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to update your profile.\n\t     *\n\t     * To call this method, you need to create an  array containing 'patch' objects, representing the\n\t     * modifications that need to be persisted. The structure of a patch object is:\n\t     *\n\t     * `{'op': 'replace', 'path': user or admin + '/' + user_id + '/' + property, 'value': modified_value}`\n\t     *\n\t     * Instead of using this function, you can also update the user directly from {@link #Userdata User.data}.\n\t     *\n\t     * @param {string} id The user id of the updated user profile\n\t     * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'update',\n\t    value: function update(id, patches) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      _api2.default.call(this.isAdmin ? 'admin/update' : 'user/update', { patches: patches }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Failed updating user: ' + res.body.message));\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to request a password reset for the logged in user.\n\t     * The process involves a confirmation email, with a link that needs to be clicked on in order to get a unique pass reset token.\n\t     * You then use that token to call the {@link #User#resetPassword resetPassword} method that finishes the process by setting a new password.\n\t     *\n\t     * @param  {string} email The email/username of the user to reset the pass for\n\t     * @param  {string} callbackURL The URL the user will be pointed to after verifying the request by clicking the link in the sent email\n\t     * @param  {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'requestPasswordReset',\n\t    value: function requestPasswordReset(email) {\n\t      var callbackURL = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      if (!email) {\n\t        if (this.email) {\n\t          email = this.email;\n\t        } else {\n\t          callback((0, _error2.default)('You must provide a valid email address for the account that needs the password reset'), null);\n\t          return;\n\t        }\n\t      }\n\t\n\t      _api2.default.call('user/request_password_reset', {\n\t        'type': 'app',\n\t        'username': email,\n\t        'callbackUrl': callbackURL\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Password reset request failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'resetPassword',\n\t\n\t\n\t    /**\n\t     * @param  {string} userId The id of the user that needs the password reset\n\t     * @param  {string} token The token obtained from the redirect generated by calling {@link #User#requestPasswordReset requestPasswordReset}.\n\t     * @param  {string} newPassword The new password\n\t     * @param  {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function resetPassword(id, token, newPassword) {\n\t      var callback = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\t\n\t      if (!id || !token || !newPassword) {\n\t        callback((0, _error2.default)('You must provide a valid user-id, pass reset token and new password for the account that needs the password reset'), null);\n\t        return;\n\t      }\n\t\n\t      _api2.default.call('user/request_password_reset', {\n\t        'token': token,\n\t        'user_id': id,\n\t        'password': newPassword\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Password reset request failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'register',\n\t\n\t\n\t    /**\n\t     * This function creates a new user profile.\n\t     *\n\t     * @param {Object} user The object representing the new user profile\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function register(user) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.call('user/register-username', user, callback);\n\t    }\n\t  }, {\n\t    key: 'registerAdmin',\n\t\n\t\n\t    /**\n\t     * This function creates a new admin profile.\n\t     *\n\t     * @param {Object} admin The object representing the new admin profile\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function registerAdmin(admin) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.call('admin/add', admin, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Register failed with error: ' + res.body.message || ''), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loginWithFacebook',\n\t\n\t\n\t    /**\n\t     * This function associates the current anonymous device to a Telepat user profile, using a Facebook\n\t      account for authentication.\n\t     *\n\t     * @param {string} facebookToken The user token obtained from Facebook after login\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function loginWithFacebook(facebookToken) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      return this._login('user/login-facebook', { 'access_token': facebookToken }, false, callback);\n\t    }\n\t  }, {\n\t    key: 'login',\n\t\n\t\n\t    /**\n\t     * This function associates the current anonymous device to a Telepat user profile, using a password for authentication.\n\t     *\n\t     * @param {string} email The user's email address\n\t     * @param {string} password The user's password\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     * @example\n\t     * telepat.user.login('email', 'password', (err) => {\n\t     *  if (err) {\n\t     *    // Treat login error\n\t     *  } else {\n\t     *    // Treat successful login\n\t     *    console.log(telepat.user.data);\n\t     *  }\n\t     * });\n\t     */\n\t    value: function login(email, password) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      return this._login('user/login_password', { username: email, password: password }, false, callback);\n\t    }\n\t  }, {\n\t    key: 'loginAdmin',\n\t\n\t\n\t    /**\n\t     * This function associates the current anonymous device to a Telepat administrator profile, using a password for authentication.\n\t     *\n\t     * @param {string} email The admin email address\n\t     * @param {string} password The admin password\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     * @example\n\t     * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n\t     *  if (err) {\n\t     *    // Treat login error\n\t     *  } else {\n\t     *    telepat.admin.getAppUsers((err) => {\n\t     *      if (err) {\n\t     *        // Treat error\n\t     *      } else {\n\t     *        // Treat success\n\t     *        console.log(telepat.admin.users);\n\t     *      }\n\t     *    })\n\t     *  }\n\t     * });\n\t     */\n\t    value: function loginAdmin(email, password) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      return this._login('admin/login', { email: email, password: password }, true, callback);\n\t    }\n\t  }, {\n\t    key: 'get',\n\t\n\t\n\t    /**\n\t     * Call this to retrieve a specific application user object.\n\t     * Results will be sent as a callback argument.\n\t     *\n\t     * @param {string} userId The id of the requested user\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t    value: function get(userId) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.get('user/get', 'user_id=' + encodeURIComponent(userId), function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Retrieving user failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'me',\n\t\n\t\n\t    /**\n\t     * This function retrieves the currently logged in user's information.\n\t     *\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function me() {\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.get(this.isAdmin ? 'admin/me' : 'user/me', '', function (err, res) {\n\t        if (err) {\n\t          callback(console.error('Request failed with error: ' + err), null);\n\t        } else {\n\t          callback(null, JSON.parse(res.text).content);\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'logout',\n\t\n\t\n\t    /**\n\t     * Logs the current user out.\n\t     *\n\t     * @param {TelepatCallback} callback Callback invoked after the operation is finished\n\t     */\n\t    value: function logout() {\n\t      var _this4 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      this._db.get(':userToken').then(function (doc) {\n\t        _this4._db.remove(doc._id, doc._rev);\n\t      }).catch(function () {});\n\t      this._setAdmin(null);\n\t      this.isAdmin = false;\n\t      this.canReauth = false;\n\t      this._customProperties = [];\n\t      this.data = {};\n\t\n\t      _api2.default.get('user/logout', '', function (err) {\n\t        _api2.default.authenticationToken = null;\n\t        if (err) {\n\t          _this4._event.emit('logout_error', (0, _error2.default)('Logout failed with error: ' + err));\n\t          callback(err);\n\t        } else {\n\t          _this4._event.emit('logout');\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return User;\n\t}();\n\t\n\texports.default = User;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _api = __webpack_require__(17);\n\t\n\tvar _api2 = _interopRequireDefault(_api);\n\t\n\tvar _error = __webpack_require__(27);\n\t\n\tvar _error2 = _interopRequireDefault(_error);\n\t\n\tvar _event = __webpack_require__(28);\n\t\n\tvar _event2 = _interopRequireDefault(_event);\n\t\n\tvar _logger = __webpack_require__(25);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * You can access an instance of this class using the {@link #Telepatadmin admin} property of the Telepat object.\n\t * This instance becomes available after successfully logging in as an administrator.\n\t *\n\t * @class Admin\n\t *\n\t * @example\n\t * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n\t *  if (err) {\n\t *    // Treat login error\n\t *  } else {\n\t *    telepat.admin.getAppUsers((err) => {\n\t *      if (err) {\n\t *        // Treat error\n\t *      } else {\n\t *        // Treat success\n\t *        console.log(telepat.admin.users);\n\t *\n\t *        // Update users\n\t *        telepat.admin.users[goodUserId].isAwesome = true;\n\t *        delete telepat.admin.users[badUserId];\n\t *\n\t *        // Update collection metadata\n\t *        telepat.collections[currentCollectionId].topic = 'Cats';\n\t *      }\n\t *    })\n\t *  }\n\t * });\n\t */\n\tvar Admin = function () {\n\t  function Admin(user) {\n\t    _classCallCheck(this, Admin);\n\t\n\t    this._user = user;\n\t    this._monitor = user._monitor;\n\t    this._event = user._event;\n\t\n\t    /**\n\t     * This {@link Channel} instance allows registering callbacks for 'update' events on user data.\n\t     * @type {Object}\n\t     * @memberof Admin\n\t     * @instance\n\t     */\n\t    this.userChannel = null;\n\t    /**\n\t     * This object contains data about all of the applications the current administrator can access.\n\t     * Each app data is stored using a key equal to the application unique identifier.\n\t     * You can access this after calling {@link #Admin#getApps getApps}.\n\t     * Modifications to app objects stored within will be automatically synchronized with the Telepat backend.\n\t     * @type {Object}\n\t     * @memberof Admin\n\t     * @instance\n\t     */\n\t    this.apps = null;\n\t    /**\n\t     * This object contains data about the currently connected app.\n\t     * You can access this after calling {@link #Admin#getApps getApps}.\n\t     * Modifications to this object will be automatically synchronized with the Telepat backend.\n\t     * @type {Object}\n\t     * @memberof Admin\n\t     * @instance\n\t     */\n\t    this.app = null;\n\t    /**\n\t     * This object contains data about all of the users of the current app.\n\t     * Each user data is stored using a key equal to the user unique identifier.\n\t     * You can access this after calling {@link #Admin#getAppUsers getAppUsers}.\n\t     * Modifications to user objects stored within will be automatically synchronized with the Telepat backend.\n\t     * @type {Object}\n\t     * @memberof Admin\n\t     * @instance\n\t     */\n\t    this.users = null;\n\t  }\n\t\n\t  /**\n\t   * Call this to retrieve all the application objects the current administrator can access.\n\t   * Results will be sent as a callback argument, and persisted on the {@link #Adminapps apps} property.\n\t   * The object belonging to the currently connected app will also be made available, on the {@link #Adminapp app} property.\n\t   *\n\t   * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t   */\n\t\n\t\n\t  _createClass(Admin, [{\n\t    key: 'getApps',\n\t    value: function getApps() {\n\t      var _this = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.call('admin/apps', '', function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Retrieving apps failed with error: ' + err), null);\n\t        } else {\n\t          _this.apps = {};\n\t          for (var index in res.body.content) {\n\t            var app = res.body.content[index];\n\t\n\t            _this.apps[app.id] = app;\n\t          }\n\t          _this.app = _this.apps[_api2.default.appId];\n\t          _this._monitor.add({ channel: { model: 'application' } }, _this.apps, new _event2.default(_logger2.default), function () {}, function () {}, _this.updateApp);\n\t          callback(null, res.body.content);\n\t        }\n\t      }, 'get');\n\t    }\n\t\n\t    /**\n\t     * Call this to create a new application.\n\t     *\n\t     * @param {Object} properties Data about the new application. Can hold any key-value data.\n\t     * Must contain at least a 'keys' key, with an array of string values that will be used as valid API keys for the app.\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'addApp',\n\t    value: function addApp(properties) {\n\t      var _this2 = this;\n\t\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.call('admin/app/add', properties, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Adding application failed with error: ' + err), null);\n\t        } else {\n\t          _this2._monitor.processMessage({\n\t            'data': {\n\t              'new': [{\n\t                'op': 'create',\n\t                'object': res.body.content,\n\t                'subscriptions': ['blg:null:application']\n\t              }],\n\t              'updated': [],\n\t              'deleted': []\n\t            }\n\t          });\n\t          callback(null, res.body.content);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Updates key-value data within an application object.\n\t     *\n\t     * To call this method, you need to create an  array containing 'patch' objects, representing the\n\t     * modifications that need to be persisted. The structure of a patch object is:\n\t     *\n\t     * `{'op': 'replace', 'path': application + '/' + app_id + '/' + property, 'value': modified_value}`\n\t     *\n\t     * Instead of using this function, you can also update the app directly from {@link #Adminapps Admin.apps}.\n\t     *\n\t     * @param  {string} id The application id\n\t     * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n\t     * @param  {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'updateApp',\n\t    value: function updateApp(id, patches) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      if (id !== _api2.default.appId) {\n\t        callback((0, _error2.default)('Cannot update an app that is not active. Please reconnect to that specific app id to make updates.'));\n\t      }\n\t      _api2.default.call('admin/app/update', { id: id, patches: patches }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Updating application failed with error: ' + err));\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to delete an application.\n\t     * Instead of using this function, you can also delete the app directly from {@link #Adminapps Admin.apps}.\n\t     *\n\t     * @param {string} id The application id\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteApp',\n\t    value: function deleteApp(id) {\n\t      var _this3 = this;\n\t\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.del('admin/app/remove', { id: id }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Removing application failed with error: ' + err), null);\n\t        } else {\n\t          _this3._monitor.processMessage({\n\t            'data': {\n\t              'deleted': [{\n\t                'op': 'delete',\n\t                'object': {\n\t                  id: id\n\t                },\n\t                'subscriptions': ['blg:null:application']\n\t              }],\n\t              'updated': [],\n\t              'new': []\n\t            }\n\t          });\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to create a new collection.\n\t     *\n\t     * @param {Object} collection Data about the new application. Can hold any key-value data. May be empty object.\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'addCollection',\n\t    value: function addCollection(collection) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.call('admin/context/add', collection, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Creating collection failed with error: ' + err));\n\t        } else {\n\t          callback(null, res);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Updates key-value data within a collection object.\n\t     *\n\t     * To call this method, you need to create an  array containing 'patch' objects, representing the\n\t     * modifications that need to be persisted. The structure of a patch object is:\n\t     *\n\t     * `{'op': 'replace', 'path': context + '/' + collection_id + '/' + property, 'value': modified_value}`\n\t     *\n\t     * Instead of using this function, you can also update the collection directly from {@link #Telepatcollections Telepat.collections}.\n\t     *\n\t     * @param  {string} id The collection id\n\t     * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n\t     * @param  {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'updateCollection',\n\t    value: function updateCollection(id, patches) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      _api2.default.call('admin/context/update', { id: id, patches: patches }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Updating collection failed with error: ' + err));\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to delete a collection.\n\t     * Instead of using this function, you can also delete the collection directly from {@link #Telepatcollections Telepat.collections}.\n\t     *\n\t     * @param {string} id The collection id\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteCollection',\n\t    value: function deleteCollection(id) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.del('admin/context/remove', { id: id }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Deleting collection failed with error: ' + err));\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to remove a model from the schema, together with all objects of that specific type.\n\t     *\n\t     * @param {string} type The model name\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'deleteModel',\n\t    value: function deleteModel(type, callback) {\n\t      _api2.default.del('admin/schema/remove_model', {\n\t        'model_name': type\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Deleting model failed with error: ' + err));\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Call this to retrieve all the current application user objects.\n\t     * Results will be sent as a callback argument, and persisted on the {@link #Adminusers users} property.\n\t     *\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'getAppUsers',\n\t    value: function getAppUsers() {\n\t      var _this4 = this;\n\t\n\t      var callback = arguments.length <= 0 || arguments[0] === undefined ? function () {} : arguments[0];\n\t\n\t      _api2.default.call('admin/users', {}, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Retrieving users failed with error: ' + err), null);\n\t        } else {\n\t          _this4.users = {};\n\t          for (var index in res.body.content) {\n\t            _this4.users[res.body.content[index].id] = res.body.content[index];\n\t          }\n\t          _this4.userChannel = new _event2.default(_logger2.default);\n\t          _this4._monitor.add({ channel: { model: 'user' } }, _this4.users, _this4.userChannel, _this4.addUser.bind(_this4), _this4.deleteUser, _this4.updateUser);\n\t          callback(null, _this4.users);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is an alias for {@link #User#register}.\n\t     *\n\t     *  @param {Object} user The object representing the new user profile\n\t     *  @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t\n\t  }, {\n\t    key: 'addUser',\n\t    value: function addUser(user) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      this._user.register(user, callback);\n\t    }\n\t  }, {\n\t    key: 'deleteUser',\n\t\n\t\n\t    /**\n\t     * Call this to delete a user profile.\n\t     * Instead of using this function, you can also delete the user directly from {@link #Adminusers Admin.users}.\n\t     *\n\t     *  @param {string} username The email address of the user profile to delete\n\t     *  @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t    value: function deleteUser(id) {\n\t      var callback = arguments.length <= 1 || arguments[1] === undefined ? function () {} : arguments[1];\n\t\n\t      _api2.default.del('admin/user/delete', { id: id }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Removing user failed with error: ' + err), null);\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'updateUser',\n\t\n\t\n\t    /**\n\t     * Call this to update a user profile.\n\t     *\n\t     * To call this method, you need to create an  array containing 'patch' objects, representing the\n\t     * modifications that need to be persisted. The structure of a patch object is:\n\t     *\n\t     * `{'op': 'replace', 'path': user + '/' + user_id + '/' + property, 'value': modified_value}`\n\t     *\n\t     * Instead of using this function, you can also update the user directly from {@link #Adminusers Admin.users}.\n\t     *\n\t     * @param {string} id The id of the user to be updated\n\t     * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t    value: function updateUser(id, patches) {\n\t      var callback = arguments.length <= 2 || arguments[2] === undefined ? function () {} : arguments[2];\n\t\n\t      _api2.default.call('admin/user/update', {\n\t        patches: patches\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Updating user failed with error: ' + err), null);\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'authorize',\n\t\n\t\n\t    /**\n\t     * Call this to authorize access to the current app for another administrator account\n\t     * within the same Telepat instance.\n\t     *\n\t     * @param {string} user The email associated with the account of the new administrator\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t    value: function authorize(user, callback) {\n\t      _api2.default.call('/admin/app/authorize', {\n\t        email: user\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Authorizing admin failed with error: ' + err), null);\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'deauthorize',\n\t\n\t\n\t    /**\n\t     * Call this to deauthorize access to the current app for another administrator account\n\t     * within the same Telepat instance.\n\t     *\n\t     * @param {string} user The email associated with the account of the administrator to be removed\n\t     * @param {TelepatCallback} callback Callback invoked after operation is finished\n\t     */\n\t    value: function deauthorize(user, callback) {\n\t      _api2.default.call('/admin/app/deauthorize', {\n\t        email: user\n\t      }, function (err, res) {\n\t        if (err) {\n\t          callback((0, _error2.default)('Deauthorizing admin failed with error: ' + err), null);\n\t        } else {\n\t          callback();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'unhook',\n\t    value: function unhook() {\n\t      this._monitor.remove({ channel: { model: 'application' } });\n\t      this._monitor.remove({ channel: { model: 'user' } });\n\t    }\n\t  }]);\n\t\n\t  return Admin;\n\t}();\n\t\n\texports.default = Admin;\n\t;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(70);\n\tvar parser = __webpack_require__(75);\n\tvar Manager = __webpack_require__(83);\n\tvar debug = __webpack_require__(72)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if (typeof uri == 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] ||\n\t                      false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t    debug('ignoring socket cache for %s', source);\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t      debug('new io instance for %s', source);\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t\n\t  return io.socket(parsed.path);\n\t}\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(83);\n\texports.Socket = __webpack_require__(111);\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(71);\n\tvar debug = __webpack_require__(72)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url(uri, loc){\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  var loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' == typeof uri) {\n\t    if ('/' == uri.charAt(0)) {\n\t      if ('/' == uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t      debug('protocol-less url %s', uri);\n\t      if ('undefined' != typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t    debug('parse %s', uri);\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    }\n\t    else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\t\n\t  return obj;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Parses an URI\n\t *\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\n\t * @api private\n\t */\n\t\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tvar parts = [\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n\t];\n\t\n\tmodule.exports = function parseuri(str) {\n\t    var src = str,\n\t        b = str.indexOf('['),\n\t        e = str.indexOf(']');\n\t\n\t    if (b != -1 && e != -1) {\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n\t    }\n\t\n\t    var m = re.exec(str || ''),\n\t        uri = {},\n\t        i = 14;\n\t\n\t    while (i--) {\n\t        uri[parts[i]] = m[i] || '';\n\t    }\n\t\n\t    if (b != -1 && e != -1) {\n\t        uri.source = src;\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n\t        uri.ipv6uri = true;\n\t    }\n\t\n\t    return uri;\n\t};\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(73);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(74);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(72)('socket.io-parser');\n\tvar json = __webpack_require__(76);\n\tvar isArray = __webpack_require__(79);\n\tvar Emitter = __webpack_require__(80);\n\tvar binary = __webpack_require__(81);\n\tvar isBuf = __webpack_require__(82);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t  debug('encoding packet %j', obj);\n\t\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  }\n\t  else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t  var str = '';\n\t  var nsp = false;\n\t\n\t  // first is type\n\t  str += obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    str += obj.attachments;\n\t    str += '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' != obj.nsp) {\n\t    nsp = true;\n\t    str += obj.nsp;\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    if (nsp) {\n\t      str += ',';\n\t      nsp = false;\n\t    }\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    if (nsp) str += ',';\n\t    str += json.stringify(obj.data);\n\t  }\n\t\n\t  debug('encoded %j as %s', obj, str);\n\t  return str;\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if ('string' == typeof obj) {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var p = {};\n\t  var i = 0;\n\t\n\t  // look up type\n\t  p.type = Number(str.charAt(0));\n\t  if (null == exports.types[p.type]) return error();\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) != '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) != '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' == str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' == c) break;\n\t      p.nsp += c;\n\t      if (i == str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    try {\n\t      p.data = json.parse(str.substr(i));\n\t    } catch(e){\n\t      return error();\n\t    }\n\t  }\n\t\n\t  debug('decoded %s as %j', str, p);\n\t  return p;\n\t}\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(data){\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error'\n\t  };\n\t}\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(78);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(77)(module), (function() { return this; }())))\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(79);\n\tvar isBuf = __webpack_require__(82);\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet){\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t\n\t  function _deconstructPacket(data) {\n\t    if (!data) return data;\n\t\n\t    if (isBuf(data)) {\n\t      var placeholder = { _placeholder: true, num: buffers.length };\n\t      buffers.push(data);\n\t      return placeholder;\n\t    } else if (isArray(data)) {\n\t      var newData = new Array(data.length);\n\t      for (var i = 0; i < data.length; i++) {\n\t        newData[i] = _deconstructPacket(data[i]);\n\t      }\n\t      return newData;\n\t    } else if ('object' == typeof data && !(data instanceof Date)) {\n\t      var newData = {};\n\t      for (var key in data) {\n\t        newData[key] = _deconstructPacket(data[key]);\n\t      }\n\t      return newData;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  var curPlaceHolder = 0;\n\t\n\t  function _reconstructPacket(data) {\n\t    if (data && data._placeholder) {\n\t      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t      return buf;\n\t    } else if (isArray(data)) {\n\t      for (var i = 0; i < data.length; i++) {\n\t        data[i] = _reconstructPacket(data[i]);\n\t      }\n\t      return data;\n\t    } else if (data && 'object' == typeof data) {\n\t      for (var key in data) {\n\t        data[key] = _reconstructPacket(data[key]);\n\t      }\n\t      return data;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  packet.data = _reconstructPacket(packet.data);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((global.Blob && obj instanceof Blob) ||\n\t        (global.File && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(84);\n\tvar Socket = __webpack_require__(111);\n\tvar Emitter = __webpack_require__(112);\n\tvar parser = __webpack_require__(75);\n\tvar on = __webpack_require__(114);\n\tvar bind = __webpack_require__(115);\n\tvar debug = __webpack_require__(72)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(109);\n\tvar Backoff = __webpack_require__(118);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager(uri, opts){\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && ('object' == typeof uri)) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  this.encoder = new parser.Encoder();\n\t  this.decoder = new parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function() {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function(){\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.engine.id;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function(v){\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function(v){\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function(v){\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function(v){\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function(v){\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function(v){\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function() {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open =\n\tManager.prototype.connect = function(fn){\n\t  debug('readyState %s', this.readyState);\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  debug('opening %s', this.uri);\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function() {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function(data){\n\t    debug('connect_error');\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t    debug('connect attempt will timeout after %d', timeout);\n\t\n\t    // set timer\n\t    var timer = setTimeout(function(){\n\t      debug('connect attempt timed out after %d', timeout);\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function(){\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function(){\n\t  debug('open');\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function(){\n\t  this.lastPing = new Date;\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function(){\n\t  this.emitAll('pong', new Date - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function(data){\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function(packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function(err){\n\t  debug('error', err);\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function(nsp){\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function(){\n\t      socket.id = self.engine.id;\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting evnet is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function(socket){\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function(packet){\n\t  debug('writing packet %j', packet);\n\t  var self = this;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function(encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else { // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function() {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function(){\n\t  debug('cleanup');\n\t\n\t  var sub;\n\t  while (sub = this.subs.shift()) sub.destroy();\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close =\n\tManager.prototype.disconnect = function(){\n\t  debug('disconnect');\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' == this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function(reason){\n\t  debug('onclose');\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function(){\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    debug('reconnect failed');\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t    debug('will wait %dms before reconnect attempt', delay);\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function(){\n\t      if (self.skipReconnect) return;\n\t\n\t      debug('attempting reconnect');\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function(err){\n\t        if (err) {\n\t          debug('reconnect attempt error');\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          debug('reconnect success');\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function(){\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function(){\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports =  __webpack_require__(85);\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(86);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(93);\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(87);\n\tvar Emitter = __webpack_require__(102);\n\tvar debug = __webpack_require__(72)('engine.io-client:socket');\n\tvar index = __webpack_require__(109);\n\tvar parser = __webpack_require__(93);\n\tvar parseuri = __webpack_require__(71);\n\tvar parsejson = __webpack_require__(110);\n\tvar parseqs = __webpack_require__(103);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Noop function.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction noop(){}\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket(uri, opts){\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' == typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure :\n\t    (global.location && 'https:' == location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port ?\n\t       location.port :\n\t       (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global == 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t  }\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(92);\n\tSocket.transports = __webpack_require__(87);\n\tSocket.parser = __webpack_require__(93);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  debug('creating transport \"%s\"', name);\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    agent: this.agent,\n\t    hostname: this.hostname,\n\t    port: this.port,\n\t    secure: this.secure,\n\t    path: this.path,\n\t    query: query,\n\t    forceJSONP: this.forceJSONP,\n\t    jsonp: this.jsonp,\n\t    forceBase64: this.forceBase64,\n\t    enablesXDR: this.enablesXDR,\n\t    timestampRequests: this.timestampRequests,\n\t    timestampParam: this.timestampParam,\n\t    policyPort: this.policyPort,\n\t    socket: this,\n\t    pfx: this.pfx,\n\t    key: this.key,\n\t    passphrase: this.passphrase,\n\t    cert: this.cert,\n\t    ca: this.ca,\n\t    ciphers: this.ciphers,\n\t    rejectUnauthorized: this.rejectUnauthorized,\n\t    perMessageDeflate: this.perMessageDeflate,\n\t    extraHeaders: this.extraHeaders\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function() {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function(transport){\n\t  debug('setting transport %s', transport.name);\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    debug('clearing existing transport %s', this.transport.name);\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function(){\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function(packet){\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function(e){\n\t    self.onError(e);\n\t  })\n\t  .on('close', function(){\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  debug('probing transport \"%s\"', name);\n\t  var transport = this.createTransport(name, { probe: 1 })\n\t    , failed = false\n\t    , self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen(){\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    debug('probe transport \"%s\" opened', name);\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' == msg.type && 'probe' == msg.data) {\n\t        debug('probe transport \"%s\" pong', name);\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\t\n\t        debug('pausing current transport \"%s\"', self.transport.name);\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' == self.readyState) return;\n\t          debug('changing transport and sending upgrade packet');\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        debug('probe transport \"%s\" failed', name);\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport() {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  //Handle any error that happens while probing\n\t  function onerror(err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose(){\n\t    onerror(\"transport closed\");\n\t  }\n\t\n\t  //When the socket is closed while we're probing\n\t  function onclose(){\n\t    onerror(\"socket closed\");\n\t  }\n\t\n\t  //When the socket is upgraded while we're probing\n\t  function onupgrade(to){\n\t    if (transport && to.name != transport.name) {\n\t      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  //Remove all listeners on the transport and on self\n\t  function cleanup(){\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  debug('socket open');\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n\t    debug('starting upgrade probes');\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(parsejson(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t    debug('packet received with socket readyState \"%s\"', this.readyState);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if  ('closed' == this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' == self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function(){\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function() {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' != this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t    debug('flushing %d packets in socket', this.writeBuffer.length);\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if('function' == typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' == typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' == this.readyState || 'closed' == this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function() {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close() {\n\t    self.onClose('forced close');\n\t    debug('socket closing - telling transport to close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose() {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade() {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  debug('socket error %j', err);\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n\t    debug('socket close with reason: \"%s\"', reason);\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i<j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(88);\n\tvar XHR = __webpack_require__(90);\n\tvar JSONP = __webpack_require__(106);\n\tvar websocket = __webpack_require__(107);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling(opts){\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' == location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname != location.hostname || port != opts.port;\n\t    xs = opts.secure != isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// browser shim for xmlhttprequest module\n\tvar hasCORS = __webpack_require__(89);\n\t\n\tmodule.exports = function(opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    } catch(e) { }\n\t  }\n\t}\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(88);\n\tvar Polling = __webpack_require__(91);\n\tvar Emitter = __webpack_require__(102);\n\tvar inherit = __webpack_require__(104);\n\tvar debug = __webpack_require__(72)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty(){}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR(opts){\n\t  Polling.call(this, opts);\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' == location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname != global.location.hostname ||\n\t      port != opts.port;\n\t    this.xs = opts.secure != isSSL;\n\t  } else {\n\t    this.extraHeaders = opts.extraHeaders;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function(opts){\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function(data, fn){\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function(err){\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function(){\n\t  debug('xhr poll');\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function(data){\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function(err){\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request(opts){\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined != opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function(){\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t    debug('xhr open %s: %s', this.method, this.uri);\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t    if (this.supportsBinary) {\n\t      // This has to be done after open because Firefox is stupid\n\t      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n\t      xhr.responseType = 'arraybuffer';\n\t    }\n\t\n\t    if ('POST' == this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function(){\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function(){\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function(){\n\t        if (4 != xhr.readyState) return;\n\t        if (200 == xhr.status || 1223 == xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function(){\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t    debug('xhr data %s', this.data);\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function() {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function(){\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function(data){\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function(err){\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function(fromError){\n\t  if ('undefined' == typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch(e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function(){\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response;\n\t    } else {\n\t      if (!this.supportsBinary) {\n\t        data = this.xhr.responseText;\n\t      } else {\n\t        try {\n\t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n\t        } catch (e) {\n\t          var ui8Arr = new Uint8Array(this.xhr.response);\n\t          var dataArray = [];\n\t          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n\t            dataArray.push(ui8Arr[idx]);\n\t          }\n\t\n\t          data = String.fromCharCode.apply(null, dataArray);\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function(){\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tif (global.document) {\n\t  Request.requestsCount = 0;\n\t  Request.requests = {};\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler() {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(92);\n\tvar parseqs = __webpack_require__(103);\n\tvar parser = __webpack_require__(93);\n\tvar inherit = __webpack_require__(104);\n\tvar yeast = __webpack_require__(105);\n\tvar debug = __webpack_require__(72)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function() {\n\t  var XMLHttpRequest = __webpack_require__(88);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling(opts){\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function(){\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function(onPause){\n\t  var pending = 0;\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause(){\n\t    debug('paused');\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t      debug('we are currently polling - waiting to pause');\n\t      total++;\n\t      this.once('pollComplete', function(){\n\t        debug('pre-pause polling complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t      debug('we are currently writing - waiting to pause');\n\t      total++;\n\t      this.once('drain', function(){\n\t        debug('pre-pause writing complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function(){\n\t  debug('polling');\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function(data){\n\t  var self = this;\n\t  debug('polling got data %s', data);\n\t  var callback = function(packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' == self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' == packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' != this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' == this.readyState) {\n\t      this.poll();\n\t    } else {\n\t      debug('ignoring poll - transport state \"%s\"', this.readyState);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function(){\n\t  var self = this;\n\t\n\t  function close(){\n\t    debug('writing close packet');\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' == this.readyState) {\n\t    debug('transport open - closing');\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t    debug('transport not open - deferring close');\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function(packets){\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function() {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  var self = this;\n\t  parser.encodePayload(packets, this.supportsBinary, function(data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function(){\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' == schema && this.port != 443) ||\n\t     ('http' == schema && this.port != 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(93);\n\tvar Emitter = __webpack_require__(102);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' == this.readyState || '' == this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' == this.readyState || 'open' == this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function(packets){\n\t  if ('open' == this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function(data){\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(94);\n\tvar hasBinary = __webpack_require__(95);\n\tvar sliceBuffer = __webpack_require__(97);\n\tvar base64encoder = __webpack_require__(98);\n\tvar after = __webpack_require__(99);\n\tvar utf8 = __webpack_require__(100);\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = navigator.userAgent.match(/Android/i);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(101);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if ('function' == typeof supportsBinary) {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if ('function' == typeof utf8encode) {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (Blob && data instanceof global.Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    packet.data = fr.result;\n\t    exports.encodePacket(packet, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (Blob && packet.data instanceof global.Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += global.btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  // String data\n\t  if (typeof data == 'string' || data === undefined) {\n\t    if (data.charAt(0) == 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      try {\n\t        data = utf8.decode(data);\n\t      } catch (e) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!global.ArrayBuffer) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary == 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data != 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data == '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = ''\n\t    , n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (':' != chr) {\n\t      length += chr;\n\t    } else {\n\t      if ('' == length || (length != (n = Number(length)))) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msg = data.substr(i + 1, n);\n\t\n\t      if (length != msg.length) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      if (msg.length) {\n\t        packet = exports.decodePacket(msg, binaryType, true);\n\t\n\t        if (err.type == packet.type && err.data == packet.data) {\n\t          // parser error in individual packet - ignoring payload\n\t          return callback(err, 0, 1);\n\t        }\n\t\n\t        var ret = callback(packet, i + n, l);\n\t        if (false === ret) return;\n\t      }\n\t\n\t      // advance cursor\n\t      i += n;\n\t      length = '';\n\t    }\n\t  }\n\t\n\t  if (length != '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  var numberTooLong = false;\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] == 255) break;\n\t\n\t      if (msgLength.length > 310) {\n\t        numberTooLong = true;\n\t        break;\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    if(numberTooLong) return callback(err, 0, 1);\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 94 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(96);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      if (obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 96 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 97 */\n/***/ function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(chars){\n\t  \"use strict\";\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = chars.indexOf(base64[i]);\n\t      encoded2 = chars.indexOf(base64[i+1]);\n\t      encoded3 = chars.indexOf(base64[i+2]);\n\t      encoded4 = chars.indexOf(base64[i+3]);\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.0.0 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\tfunction checkScalarValue(codePoint) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction utf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read first byte\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tvar byte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid UTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction utf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar utf8 = {\n\t\t\t'version': '2.0.0',\n\t\t\t'encode': utf8encode,\n\t\t\t'decode': utf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn utf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = utf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in utf8) {\n\t\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.utf8 = utf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(77)(module), (function() { return this; }())))\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Create a blob builder even when vendor prefixes exist\n\t */\n\t\n\tvar BlobBuilder = global.BlobBuilder\n\t  || global.WebKitBlobBuilder\n\t  || global.MSBlobBuilder\n\t  || global.MozBlobBuilder;\n\t\n\t/**\n\t * Check if Blob constructor is supported\n\t */\n\t\n\tvar blobSupported = (function() {\n\t  try {\n\t    var a = new Blob(['hi']);\n\t    return a.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if Blob constructor supports ArrayBufferViews\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\n\t */\n\t\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\n\t  try {\n\t    var b = new Blob([new Uint8Array([1,2])]);\n\t    return b.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if BlobBuilder is supported\n\t */\n\t\n\tvar blobBuilderSupported = BlobBuilder\n\t  && BlobBuilder.prototype.append\n\t  && BlobBuilder.prototype.getBlob;\n\t\n\t/**\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\n\t * Used by BlobBuilder constructor and old browsers that didn't\n\t * support it in the Blob constructor.\n\t */\n\t\n\tfunction mapArrayBufferViews(ary) {\n\t  for (var i = 0; i < ary.length; i++) {\n\t    var chunk = ary[i];\n\t    if (chunk.buffer instanceof ArrayBuffer) {\n\t      var buf = chunk.buffer;\n\t\n\t      // if this is a subarray, make a copy so we only\n\t      // include the subarray region from the underlying buffer\n\t      if (chunk.byteLength !== buf.byteLength) {\n\t        var copy = new Uint8Array(chunk.byteLength);\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n\t        buf = copy.buffer;\n\t      }\n\t\n\t      ary[i] = buf;\n\t    }\n\t  }\n\t}\n\t\n\tfunction BlobBuilderConstructor(ary, options) {\n\t  options = options || {};\n\t\n\t  var bb = new BlobBuilder();\n\t  mapArrayBufferViews(ary);\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    bb.append(ary[i]);\n\t  }\n\t\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n\t};\n\t\n\tfunction BlobConstructor(ary, options) {\n\t  mapArrayBufferViews(ary);\n\t  return new Blob(ary, options || {});\n\t};\n\t\n\tmodule.exports = (function() {\n\t  if (blobSupported) {\n\t    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n\t  } else if (blobBuilderSupported) {\n\t    return BlobBuilderConstructor;\n\t  } else {\n\t    return undefined;\n\t  }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 102 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Compiles a querystring\n\t * Returns string representation of the object\n\t *\n\t * @param {Object}\n\t * @api private\n\t */\n\t\n\texports.encode = function (obj) {\n\t  var str = '';\n\t\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      if (str.length) str += '&';\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n\t    }\n\t  }\n\t\n\t  return str;\n\t};\n\t\n\t/**\n\t * Parses a simple querystring into an object\n\t *\n\t * @param {String} qs\n\t * @api private\n\t */\n\t\n\texports.decode = function(qs){\n\t  var qry = {};\n\t  var pairs = qs.split('&');\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\n\t    var pair = pairs[i].split('=');\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n\t  }\n\t  return qry;\n\t};\n\n\n/***/ },\n/* 104 */\n/***/ function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ },\n/* 105 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(91);\n\tvar inherit = __webpack_require__(104);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Callbacks count.\n\t */\n\t\n\tvar index = 0;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function(e){\n\t    self.onError('jsonp poll error',e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  }\n\t  else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\t  \n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch(e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function(){\n\t      if (self.iframe.readyState == 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(92);\n\tvar parser = __webpack_require__(93);\n\tvar parseqs = __webpack_require__(103);\n\tvar inherit = __webpack_require__(104);\n\tvar yeast = __webpack_require__(105);\n\tvar debug = __webpack_require__(72)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  try {\n\t    WebSocket = __webpack_require__(108);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS(opts){\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function(){\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var self = this;\n\t  var uri = this.uri();\n\t  var protocols = void(0);\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t\n\t  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'buffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function(){\n\t  var self = this;\n\t\n\t  this.ws.onopen = function(){\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function(){\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function(ev){\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function(e){\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Override `onData` to use a timer on iOS.\n\t * See: https://gist.github.com/mloughran/2052006\n\t *\n\t * @api private\n\t */\n\t\n\tif ('undefined' != typeof navigator\n\t  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n\t  WS.prototype.onData = function(data){\n\t    var self = this;\n\t    setTimeout(function(){\n\t      Transport.prototype.onData.call(self, data);\n\t    }, 0);\n\t  };\n\t}\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function(packets){\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function(packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function(data) {\n\t        if (!BrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        //Sometimes the websocket has already been closed but the browser didn't\n\t        //have a chance of informing us about it yet, in that case send will\n\t        //throw an error\n\t        try {\n\t          if (BrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e){\n\t          debug('websocket closed before onclose event');\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done(){\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function(){\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function(){\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function(){\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function(){\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' == schema && this.port != 443)\n\t    || ('ws' == schema && this.port != 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function(){\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 108 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 109 */\n/***/ function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ },\n/* 110 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * JSON parse.\n\t *\n\t * @see Based on jQuery#parseJSON (MIT) and JSON2\n\t * @api private\n\t */\n\t\n\tvar rvalidchars = /^[\\],:{}\\s]*$/;\n\tvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\tvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\tvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n\tvar rtrimLeft = /^\\s+/;\n\tvar rtrimRight = /\\s+$/;\n\t\n\tmodule.exports = function parsejson(data) {\n\t  if ('string' != typeof data || !data) {\n\t    return null;\n\t  }\n\t\n\t  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\t\n\t  // Attempt to parse using the native JSON parser first\n\t  if (global.JSON && JSON.parse) {\n\t    return JSON.parse(data);\n\t  }\n\t\n\t  if (rvalidchars.test(data.replace(rvalidescape, '@')\n\t      .replace(rvalidtokens, ']')\n\t      .replace(rvalidbraces, ''))) {\n\t    return (new Function('return ' + data))();\n\t  }\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(75);\n\tvar Emitter = __webpack_require__(112);\n\tvar toArray = __webpack_require__(113);\n\tvar on = __webpack_require__(114);\n\tvar bind = __webpack_require__(115);\n\tvar debug = __webpack_require__(72)('socket.io-client:socket');\n\tvar hasBin = __webpack_require__(116);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket(io, nsp){\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function() {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [\n\t    on(io, 'open', bind(this, 'onopen')),\n\t    on(io, 'packet', bind(this, 'onpacket')),\n\t    on(io, 'close', bind(this, 'onclose'))\n\t  ];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open =\n\tSocket.prototype.connect = function(){\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' == this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function(){\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function(ev){\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var parserType = parser.EVENT; // default\n\t  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\t  var packet = { type: parserType, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' == typeof args[args.length - 1]) {\n\t    debug('emitting packet with ack id %d', this.ids);\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function(packet){\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function(){\n\t  debug('transport is open - connecting');\n\t\n\t  // write connect packet if necessary\n\t  if ('/' != this.nsp) {\n\t    this.packet({ type: parser.CONNECT });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function(reason){\n\t  debug('close (%s)', reason);\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function(packet){\n\t  if (packet.nsp != this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function(packet){\n\t  var args = packet.data || [];\n\t  debug('emitting event %j', args);\n\t\n\t  if (null != packet.id) {\n\t    debug('attaching ack callback to event');\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function(id){\n\t  var self = this;\n\t  var sent = false;\n\t  return function(){\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t    debug('sending ack %j', args);\n\t\n\t    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n\t    self.packet({\n\t      type: type,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function(packet){\n\t  var ack = this.acks[packet.id];\n\t  if ('function' == typeof ack) {\n\t    debug('calling ack %s with %j', packet.id, packet.data);\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {\n\t    debug('bad ack %s', packet.id);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function(){\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function(){\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function(){\n\t  debug('server disconnect (%s)', this.nsp);\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function(){\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close =\n\tSocket.prototype.disconnect = function(){\n\t  if (this.connected) {\n\t    debug('performing disconnect (%s)', this.nsp);\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function(compress){\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n\n/***/ },\n/* 112 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  function on() {\n\t    this.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks['$' + event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks['$' + event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks['$' + event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks['$' + event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ },\n/* 114 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function(){\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n\n/***/ },\n/* 115 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(117);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      // see: https://github.com/Automattic/has-binary/pull/4\n\t      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 117 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 118 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** telepat0.3.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ea191d777fed5801e6b8\n **/","import fs from 'fs';\nimport PouchDB from 'pouchdb';\nimport API from './api';\nimport log from './logger';\nimport error from './error';\nimport EventObject from './event';\nimport Monitor from './monitor';\nimport Channel from './channel';\nimport User from './user';\n\n/**\n * The `Telepat` object is the first object you want to instantiate while working with the Telepat SDK.\n * It exposes methods and properties that enable you to register, login, subscribe to objects and to users.\n *\n * @class Telepat\n *\n * @example\n * let telepat = new Telepat();\n * telepat.connect({\n *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n *  apiKey: 'APP-API-KEY',\n *  appId: 'APP-ID'\n * }, (err, res) => {\n *  if (err) {\n *    // Treat connection error\n *    console.log(err);\n *    return;\n *  }\n *\n *  // Display all collections\n *  console.log(telepat.collections);\n *\n *  // Login, display and update user data\n *  telepat.on('login', () => {\n *    console.log(telepat.user.data);\n *    telepat.user.data.change = true;\n *  });\n *  telepat.user.login('user', 'pass');\n *\n *  // Subscribe to data\n *  let articleChannel = telepat.subscribe({\n *    channel: {\n *      context: 'collection-identifier',\n *      model: 'article'\n *    }\n *  }, () => {\n *    console.log(articleChannel.objectsArray);\n *    articleChannel.objects['object-identifier'].title = 'new title';\n *\n *    articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n *      // Update interface on data updates\n *    });\n *  });\n * });\n */\nexport default class Telepat {\n  constructor() {\n    function getUserHome() {\n      return process.env[(process.platform === 'win32') ? 'USERPROFILE' : 'HOME'];\n    }\n\n    function getTelepatDir() {\n      var dir = getUserHome() + '/.telepat-cli';\n\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, 744);\n      }\n      return dir;\n    }\n\n    this._db = new PouchDB((typeof window !== 'undefined') ? '/_telepat' : getTelepatDir());\n    this._event = new EventObject(log);\n    this._monitor = new Monitor();\n    this._socketEndpoint = null;\n    this._socket = null;\n    this._persistentConnectionOptions = null;\n    this._sessionId = null;\n\n    /**\n     * Indicates whether the current instance is connected to the backend\n     * @type {boolean}\n     * @memberof Telepat\n     * @instance\n     */\n    this.connected = false;\n    /**\n     * Indicates whether the current instance is in the process of connecting to the backend.\n     * If true, the `connect` event will be fired as soon as connection is established.\n     * @type {boolean}\n     * @memberof Telepat\n     * @instance\n     */\n    this.connecting = false;\n    /**\n     * Indicates whether the current instance is properly configured and ready for connection.\n     * @type {boolean}\n     * @memberof Telepat\n     * @instance\n     */\n    this.configured = false;\n    /**\n     * If connected, this property reflects the current app id.\n     * @type {string}\n     * @memberof Telepat\n     * @instance\n     */\n    this.currentAppId = null;\n    /**\n     * This object contains details about all the collections available for the currently connected application.\n     * You can read this after the `connect` event is emitted, or if the `connected` property is true.\n     * Each available collection is stored as an Object, using a key whose name is equal to the collection's id.\n     * Modifications to collection objects stored within will be automatically synchronized with the Telepat backend.\n     * @type {Object}\n     * @memberof Telepat\n     * @instance\n     */\n    this.collections = {};\n    /**\n     * This object contains references to all of the {@link Channel}s that are actively subscribed.\n     * Each channel is stored using a key equal to the channel's unique identifier.\n     * @type {Object}\n     * @memberof Telepat\n     * @instance\n     */\n    this.subscriptions = {};\n    /**\n     * This property becomes available after successfully logging in as an administrator.\n     * It gives you access to a instance of the {@link Admin} class, allowing you access to administrator functionality.\n     * @type {Admin}\n     * @memberof Telepat\n     * @instance\n     *\n     * @example\n     * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n     *  if (err) {\n     *    // Treat login error\n     *  } else {\n     *    telepat.admin.getAppUsers((err) => {\n     *      if (err) {\n     *        // Treat error\n     *      } else {\n     *        // Treat success\n     *        console.log(telepat.admin.users);\n     *      }\n     *    })\n     *  }\n     * });\n     */\n    this.admin = null;\n    /**\n     * An instance of the {@link User} class, this allows you to access user functionality like logging in,\n     * accessing and modifying current user data or registering new user accounts.\n     * @type {User}\n     * @memberof Telepat\n     * @instance\n     *\n     * @example\n     * telepat.user.login('email', 'password', (err) => {\n     *  if (err) {\n     *    // Treat login error\n     *  } else {\n     *    // Treat successful login\n     *    console.log(telepat.user.data);\n     *  }\n     * });\n     */\n    this.user = null;\n    this.collectionEvent = new EventObject(log);\n  }\n\n  getCollections(callback = () => {}) {\n    API.get('context/all', '', (err, res) => {\n      if (err) {\n        let resultingError = error('Error retrieving collections ' + err);\n\n        this.callback(resultingError, null);\n        this._event.emit('error', resultingError);\n      } else {\n        this._monitor.remove({channel: {model: 'context'}});\n        this.collections = {};\n        for (let index in res.body.content) {\n          this.collections[res.body.content[index].id] = res.body.content[index];\n        }\n\n        this._monitor.add({channel: {model: 'context'}}, this.collections, this.collectionEvent, this._addCollection.bind(this), this._deleteCollection.bind(this), this._updateCollection.bind(this));\n        this.collectionEvent.on('update', (operation, parentId, parentObject, delta) => {\n          this._event.emit('collections-update');\n        });\n        callback(null, this.collections);\n        this._event.emit('collections-update');\n      }\n    });\n  }\n\n  _addCollection(collection, callback = () => {}) {\n    if (this.admin) {\n      this.admin.addCollection(collection, callback);\n    } else {\n      log.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n    }\n  }\n\n  _updateCollection(id, patches, callback = () => {}) {\n    if (this.admin) {\n      this.admin.updateCollection(id, patches, callback);\n    } else {\n      log.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n    }\n  }\n\n  _deleteCollection(id, callback = () => {}) {\n    if (this.admin) {\n      this.admin.deleteCollection(id, callback);\n    } else {\n      log.warn('Editing collection data as non-admin user. Changes will not be remotely persisted.');\n    }\n  }\n\n  _updateUser(reauth = false, callback = () => {}) {\n    if (!this.user) {\n      this.user = new User(this._db, this._event, this._monitor, newAdmin => { this.admin = newAdmin; }, () => {\n        if (reauth) {\n          this.user.reauth(callback);\n        } else {\n          callback(null);\n        }\n      });\n    } else {\n      callback(null);\n    }\n  }\n\n  /**\n   * Call this to configure Telepat server endpoints without connecting to a specific app.\n   *\n   * @param {Object} options Object containing all configuration options for connection\n   * @param {string} options.apiEndpoint The Telepat API endpoint URL\n   * @param {string} options.socketEndpoint The Telepat socket endpoint URL\n   * @param {boolean} [options.reauth=false] Should reauth previously logged in user on connection\n   * @param {TelepatCallback} callback Callback invoked after configuration is finished\n   * @fires Telepat.event:configure\n   *\n   * @example\n   * let telepat = new Telepat();\n   * telepat.configure({\n   *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n   *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT'\n   * }, (err, res) => {\n   *  // Handle configuration\n   * });\n   */\n  configure(options = {}, callback = () => {}) {\n    if (typeof options.apiEndpoint !== 'undefined') {\n      API.apiEndpoint = options.apiEndpoint + '/';\n    } else {\n      callback(error('Configure options must provide an apiEndpoint property'));\n    }\n    // - `socketEndpoint`: the host and port number for the socket service\n    if (typeof options.socketEndpoint !== 'undefined') {\n      this._socketEndpoint = options.socketEndpoint;\n    } else {\n      callback(error('Configure options must provide an socketEndpoint property'));\n    }\n\n    this._updateUser(options.reauth, () => {\n      this._event.emit('configure');\n      this.configured = true;\n      callback(null, this);\n    });\n  }\n\n  /**\n   * Call this to connect to a specific Telepat app.\n   * This is usually the first thing you need to do after instantiating the Telepat object.\n   *\n   * @param {Object} options Object containing all configuration options for connection\n   * @param {string} options.apiKey Your app API key\n   * @param {string} options.appId Your app id\n   * @param {string} [options.apiEndpoint] The Telepat API endpoint URL. If this is absent from the connect options, it must have been previously set by calling {@link #Telepat#configure configure}.\n   * @param {string} [options.socketEndpoint] The Telepat socket endpoint URL.\n   *  If this is absent from the connect options, it must have been previously set by calling {@link #Telepat#configure configure}.\n   * @param {boolean} [options.reauth=false] Should reauth previously logged in user on connection\n   * @param {Object} [options.persistentConnection=null] Set this to configure receiving updates via persistent channels, like push notifications.\n   * @param {Object} [options.ioOptions={}] Configuration options for socket.io\n   * @param {boolean} [options.updateUDID=false] Set this to true to force the client to update the saved device identifier.\n   * @param {number} [options.timerInterval=150] Frequency of running diff (in miliseconds) to check for object updates.\n   * @param {TelepatCallback} callback Callback invoked after configuration is finished\n   * @fires Telepat.event:connect\n   * @fires Telepat.event:disconnect\n   *\n   * @example\n   * // Simple connection to backend\n   *\n   * let telepat = new Telepat();\n   * telepat.connect({\n   *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n   *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n   *  apiKey: 'APP-API-KEY',\n   *  appId: 'APP-ID'\n   * }, (err, res) => {\n   *  // Handle connection\n   * });\n   *\n   * @example\n   * // Using connection event\n   *\n   * let telepat = new Telepat();\n   * telepat.connect({\n   *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n   *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n   *  apiKey: 'APP-API-KEY',\n   *  appId: 'APP-ID'\n   * });\n   * let connectCallbackId = telepat.on('connect', {\n   *  telepat.removeCallback(connectCallbackId);\n   *  // Handle connection\n   * });\n   *\n   * @example\n   * // Activating the push notifications transport.\n   * // Do this when running inside a mobile OS, for example.\n   * telepat.connect({\n   *  apiEndpoint: 'TELEPAT-API-ENDPOINT',\n   *  socketEndpoint: 'TELEPAT-SOCKET-ENDPOINT',\n   *  apiKey: 'APP-API-KEY',\n   *  appId: 'APP-ID',\n   *  persistentConnection: {\n   *    type: 'ios',\n   *    token: 'DEVICE-NOTIFICATION-TOKEN',\n   *    active: 1\n   *  }\n   * });\n   */\n  connect(options = {}, callback = () => {}) {\n    var self = this;\n\n    function completeRegistration(res) {\n      if (res.body.content.identifier !== undefined) {\n        API.UDID = res.body.content.identifier;\n        log.info('Received new UDID: ' + API.UDID);\n\n        self._db.get(':deviceId').then(doc => {\n          doc[API.appId] = API.UDID;\n          log.warn('Replacing existing UDID');\n          self._db.put(doc).catch(err => {\n            log.warn('Could not persist UDID. Error: ' + err);\n          });\n        }).catch(() => {\n          let newObject = {\n            _id: ':deviceId'\n          };\n\n          newObject[API.appId] = API.UDID;\n          self._db.put(newObject).catch(err => {\n            log.warn('Could not persist UDID. Error: ' + err);\n          });\n        });\n      }\n      self._socket.emit('bind_device', {\n        'device_id': API.UDID,\n        'application_id': API.appId\n      });\n\n      log.info('Connection established');\n\n      self.getCollections(() => {\n        self._updateUser(options.reauth, () => {\n          self.currentAppId = API.appId;\n          self.connected = true;\n          self.connecting = false;\n          self._event.emit('connect');\n          callback(null, self);\n        });\n      });\n      return true;\n    }\n\n    function registerDevice() {\n      var request = {\n        'info': {\n          'os': 'web',\n          'userAgent': ((typeof navigator !== 'undefined') ? navigator.userAgent : 'node')\n        },\n        'volatile': {\n          'type': 'sockets',\n          'active': 1,\n          'token': self._sessionId\n        }\n      };\n\n      if (self._persistentConnectionOptions) {\n        request.persistent = self._persistentConnectionOptions;\n        if (request.persistent.active === 1) {\n          request.volatile.active = 0;\n        }\n      }\n      API.call('device/register', request, function (err, res) {\n        if (err) {\n          API.UDID = null;\n          API.call('device/register', request, function (err, res) {\n            if (err) {\n              self._socket.disconnect();\n              self._event.emit('disconnect', err);\n              self.currentAppId = null;\n              self.connected = false;\n              self.connecting = false;\n              callback(error('Device registration failed with error: ' + err));\n            } else {\n              completeRegistration(res);\n            }\n          });\n        } else {\n          completeRegistration(res);\n        }\n      });\n    }\n\n    if (typeof options !== 'undefined') {\n      if (typeof options.apiKey === 'undefined') {\n        return callback(error('Connect options must provide an apiKey property'));\n      }\n      if (typeof options.appId === 'undefined') {\n        return callback(error('Connect options must provide an appId property'));\n      }\n      if (typeof options.apiEndpoint !== 'undefined') {\n        API.apiEndpoint = options.apiEndpoint + '/';\n      } else if (!API.apiEndpoint) {\n        return callback(error('Connect options must provide an apiEndpoint property, or you must run `configure` first'));\n      }\n      if (typeof options.socketEndpoint !== 'undefined') {\n        this._socketEndpoint = options.socketEndpoint;\n      } else if (!this._socketEndpoint) {\n        return callback(error('Connect options must provide an socketEndpoint property, or you must run `configure` first'));\n      }\n      if (typeof options.timerInterval !== 'undefined') {\n        this._monitor.timerInterval = options.timerInterval;\n      }\n    } else {\n      return callback(error('Options object not provided to the connect function'));\n    }\n\n    this.connecting = true;\n\n    if (this.connected) {\n      this.disconnect();\n    }\n\n    API.apiKey = options.apiKey;\n    API.appId = options.appId;\n\n    if (this.admin && this.admin.apps) {\n      this.admin.app = this.admin.apps[API.appId];\n    }\n\n    this._persistentConnectionOptions = options.persistentConnection || this._persistentConnectionOptions;\n\n    this._socket = require('socket.io-client')(this._socketEndpoint, options.ioOptions || {});\n    log.info('Connecting to socket service ' + this._socketEndpoint);\n\n    if (__0_3__) { // eslint-disable-line no-undef\n      this._socket.on('welcome', data => {\n        this._sessionId = data.sessionId;\n\n        if (options.updateUDID) {\n          registerDevice();\n        } else {\n          this._db.get(':deviceId').then(doc => {\n            if (doc[API.appId]) {\n              API.UDID = doc[API.appId];\n              log.info('Retrieved saved UDID: ' + API.UDID);\n            }\n            registerDevice();\n          }).catch(function () {\n            registerDevice();\n          });\n        }\n      });\n    } else {\n      if (options.updateUDID) {\n        registerDevice();\n      } else {\n        this._db.get(':deviceId').then(doc => {\n          if (doc[API.appId]) {\n            API.UDID = doc[API.appId];\n            log.info('Retrieved saved UDID: ' + API.UDID);\n          }\n          registerDevice();\n        }).catch(function () {\n          registerDevice();\n        });\n      }\n    }\n\n    this._socket.on('message', message => {\n      this._monitor.processMessage(message);\n    });\n\n    this._socket.on('context-update', () => {\n      this.getCollections();\n    });\n\n    this._socket.on('disconnect', () => {\n    });\n\n    this._socket.on('reconnect', () => {\n      self._socket.emit('bind_device', {\n        'device_id': API.UDID,\n        'application_id': API.appId\n      });\n    });\n\n    return this;\n  }\n\n  /**\n   * Call this function to disconnect the client from the Telepat backend.\n   * @fires Telepat.event:disconnect\n   */\n  disconnect() {\n    this._socket.close();\n    this._socket = null;\n    this._sessionId = null;\n    this.collections = null;\n    this._monitor.remove({channel: {model: 'context'}});\n\n    for (var key in this.subscriptions) {\n      this.subscriptions[key].unsubscribe();\n    }\n    this.subscriptions = {};\n\n    if (!this.user.isAdmin) {\n      this.user.logout(() => {\n        this.admin.unhook();\n        this.admin = null;\n        this.user = null;\n      });\n    }\n\n    API.apiKey = null;\n    API.appId = null;\n    API.UDID = null;\n\n    this._event.emit('disconnect');\n    this.currentAppId = null;\n    this.connected = false;\n  };\n\n  /**\n   * Forwards messages reveived via external channels to the processing unit.\n   * Use this if you've configured external transports (like push notifications), and you need to pass received payloads\n   * to the processing engine.\n   *\n   * @param {string} message The delta update notification received from Telepat\n   */\n  processMessage(message) {\n    this._monitor.processMessage(message);\n  }\n\n  /**\n   * You can tweak the logger verbosity using this function.\n   *\n   * @param {string} level One of `'debug'`, `'info'`, `'warn'` or `'error'`\n   */\n  setLogLevel(level) {\n    log.setLevel(level);\n    return this;\n  }\n\n  /**\n   * Invoked when client has connected to the backend.\n   *\n   * @event connect\n   */\n  /**\n   * Invoked when client has disconnected from the backend.\n   *\n   * @event disconnect\n   * @type {Error}\n   */\n  /**\n   * Invoked when client configuration has completed.\n   *\n   * @event configure\n   */\n  /**\n   * Invoked on any operation error.\n   *\n   * @event error\n   * @type {Error}\n   */\n  /**\n   * Invoked when the available collections have updated.\n   *\n   * @event collections-update\n   */\n  /**\n   * Invoked when client has successfully logged in.\n   *\n   * @event login\n   */\n  /**\n   * Invoked when there was an error with logging in.\n   *\n   * @event login-error\n   * @type {Error}\n   */\n  /**\n   * Invoked when client has successfully logged out.\n   *\n   * @event logout\n   */\n  /**\n   * Invoked when there was an error with logging out.\n   *\n   * @event logout-error\n   * @type {Error}\n   */\n\n  /**\n   * Call this function to add callbacks to be invoked on event triggers.\n   * Available callbacks:\n   *\n   * | Name                                                         | Description           |\n   * | ------------------------------------------------------------ | --------------------- |\n   * | {@link #Telepat.event:connect connect}                       | Invoked when client has connected to the backend |\n   * | {@link #Telepat.event:disconnect disconnect}                 | Invoked when client has disconnected from the backend |\n   * | {@link #Telepat.event:configure configure}                   | Invoked when client configuration has completed |\n   * | {@link #Telepat.event:error error}                           | Invoked on any operation error |\n   * | {@link #Telepat.event:collections-update collections-update} | Invoked when the available collections have updated |\n   * | {@link #Telepat.event:login login}                           | Invoked when client has successfully logged in |\n   * | {@link #Telepat.event:login-error login-error}               | Invoked when there was an error with logging in |\n   * | {@link #Telepat.event:logout logout}                         | Invoked when client has successfully logged out |\n   * | {@link #Telepat.event:logout-error logout-error}             | Invoked when there was an error with logging out |\n   *\n   * @param {string} name The name of the event to associate the callback with\n   * @param {function} callback The callback to be executed\n   * @return {number} A callback id. Save this in order to later remove the callback from the event (using {@link #Telepat#removeCallback removeCallback})\n   *\n   * @example\n   * telepat.on('connect', () => {\n   *  console.log('connected');\n   * });\n   */\n  on(name, callback) {\n    return this._event.on(name, callback);\n  };\n\n  /**\n   * Call this function to remove callbacks that have been set using {@link #Telepat#on on}.\n   *\n   * @param {string} name The name of the event the callback was associated with\n   * @param {number} callbackId The callback id returned by calling {@link #Telepat#on on}\n   *\n   * @example\n   * let connectCallbackId = telepat.on('connect', () => {\n   *  // Remove the callback after the first connection event\n   *  telepat.removeCallback(connectCallbackId);\n   * });\n   */\n  removeCallback(name, index) {\n    return this._event.removeCallback(name, index);\n  };\n\n  /**\n   * Use this function to create a new {@link Channel} object and retrieve its objects.\n   *\n   * @param {Object} options The object describing the required subscription\n   * @param {function} onSubscribe Callback invoked when subscription is ready\n   * @param {Object} [options.channel] Describes the basic properties of the objects requested\n   * @param {string} [options.channel.context] The id of the collection in which you're searching for objects\n   * @param {string} [options.channel.model] The model of the objects you're searching for (needs to be defined in the schema first)\n   * @param {string} [options.channel.id] If set, specifies the id of the unique object that you're querying for\n   * @param {Object} [options.channel.parent] If set, specifies the parent id and parent model of the objects you're querying for.\n   * @param {string} [options.channel.parent.model] The model of the parent object\n   * @param {string} [options.channel.parent.id] The id of the parent object\n   * @param {string} [options.channel.user] If set, specifies the user id of the creator of the objects you're querying for.\n   * @param {Object} [options.sort] An object that defines how returned objects should be sorted. Each object key is a property name, and each value can be either `asc` or `desc`.\n   * @param {Object} [options.filters] An object describing how returned objects should be filtered.\n   * @param {number} [options.offset] The offset that should be applied for the returned objects (for pagination)\n   * @param {number} [options.limit] The maximum number of objects to be returned in this batch (for pagination)\n   * @return {Channel} The new {@link Channel} object\n   *\n   * @example\n   * // A simple subscription to all objects of type `article`\n   * // in a specific collection\n   *\n   * let articleChannel = telepat.subscribe({\n   *  channel: {\n   *    context: 'context-unique-identifier',\n   *    model: 'article'\n   *  }\n   * }, () => {\n   *  console.log(articleChannel.objectsArray);\n   * });\n   *\n   * @example\n   * // A filtered subscription to all objects of type `article`\n   * // in a specific collection, that have one of two specific tag values\n   *\n   * let articleChannel = telepat.subscribe({\n   *  channel: {\n   *    context: 'context-unique-identifier',\n   *    model: 'article'\n   *  },\n   *  filters: {\n   *    or: [\n   *      {\n   *        is: {\n   *          tag: 'specific-tag-value'\n   *        }\n   *      },\n   *      {\n   *        is: {\n   *          tag: 'another-tag-value'\n   *        }\n   *      }\n   *    ]\n   *  }\n   * }, () => {\n   *  console.log(articleChannel.objectsArray);\n   * });\n   *\n   * @example\n   * // A simple subscription to all objects of type `article`\n   * // in a specific collection, sorted by created date descending\n   *\n   * let articleChannel = telepat.subscribe({\n   *  channel: {\n   *    context: 'context-unique-identifier',\n   *    model: 'article'\n   *  },\n   *  sort: {\n   *    created: 'desc'\n   *  }\n   * }, () => {\n   *  console.log(articleChannel.objectsArray);\n   * });\n   *\n   * @example\n   * // A simple subscription to all objects of type `comment`\n   * // in a specific collection, that belong to a specific article parent\n   *\n   * let articleChannel = telepat.subscribe({\n   *  channel: {\n   *    context: 'context-unique-identifier',\n   *    model: 'comment',\n   *    parent: {\n   *      model: 'article',\n   *      id: 'article-parent-unique-identifier'\n   *    }\n   *  }\n   * }, () => {\n   *  console.log(articleChannel.objectsArray);\n   * });\n   */\n  subscribe(options, onSubscribe) {\n    let channel = new Channel(this._monitor, options);\n    let key = Monitor.subscriptionKeyForOptions(options);\n\n    this.subscriptions[key] = channel;\n    channel.subscribe();\n    if (onSubscribe !== undefined) {\n      channel.on('subscribe', onSubscribe);\n    }\n    channel.on('_unsubscribe', () => {\n      delete this.subscriptions[key];\n    });\n    return channel;\n  };\n\n  /**\n   * Same as {@link #Telepat#subscribe subscribe} method, but returns the new {@link Channel} object without calling subscribe on it.\n   *\n   * @param  {Object} options Same as {@link #Telepat#subscribe subscribe} Options\n   * @return {Channel} The new {@link Channel} object\n   */\n  getChannel(options) {\n    let key = Monitor.subscriptionKeyForOptions(options);\n\n    if (this.subscriptions[key]) {\n      return this.subscriptions[key];\n    }\n    return new Channel(this._monitor, options);\n  }\n\n  sendEmail(from, fromName, to, subject, body, callback) {\n    API.call('/email', {\n      'recipients': to,\n      'from': from,\n      'from_name': fromName,\n      'subject': subject,\n      'body': body\n    }, (err, res) => {\n      if (err) {\n        callback(error('Send email failed with error: ' + err), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  };\n\n  get(options, callback) {\n    options['no_subscribe'] = true;\n    API.call('object/subscribe',\n    options,\n    (err, res) => {\n      if (err) {\n        this._event.emit('error', error('Get objects failed with error: ' + err));\n        callback(error('Get objects failed with error: ' + err), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  }\n};\n\n/**\n * This callback is displayed as part of the Requester class.\n * @callback TelepatCallback\n * @param {Error} err If there was an error processing the requested operation, this will reference the error object resulted\n * @param {*} res The operation response\n */\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/telepat.js\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 1\n ** module chunks = 0\n **/","console.log(\"I'm `fs` modules\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fs/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar jsExtend = require('js-extend');\nvar debug = _interopDefault(require('debug'));\nvar inherits = _interopDefault(require('inherits'));\nvar lie = _interopDefault(require('lie'));\nvar events = require('events');\nvar getArguments = _interopDefault(require('argsarray'));\nvar scopedEval = _interopDefault(require('scope-eval'));\nvar Md5 = _interopDefault(require('spark-md5'));\nvar vuvuzela = _interopDefault(require('vuvuzela'));\nvar PromisePool = _interopDefault(require('es6-promise-pool'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\n// based on https://github.com/montagejs/collections\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction _Map() {\n  this.store = {};\n}\n_Map.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this.store[mangled];\n};\n_Map.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this.store[mangled] = value;\n  return true;\n};\n_Map.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this.store;\n};\n_Map.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this.store;\n  delete this.store[mangled];\n  return res;\n};\n_Map.prototype.forEach = function (cb) {\n  var keys = Object.keys(this.store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this.store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\n\nfunction _Set(array) {\n  this.store = new _Map();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\n_Set.prototype.add = function (key) {\n  return this.store.set(key, true);\n};\n_Set.prototype.has = function (key) {\n  return this.store.has(key);\n};\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    var tempCB =\n      (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    // if the last argument is a function, assume its a callback\n    var usedCB;\n    if (tempCB) {\n      // if it was a callback, create a new callback which calls it,\n      // but do so async so we don't trap any errors\n      usedCB = function (err, resp) {\n        process.nextTick(function () {\n          tempCB(err, resp);\n        });\n      };\n    }\n    var promise = new PouchPromise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nvar log = debug('pouchdb:api');\n\nfunction adapterFun(name, callback) {\n  function logApiCall(self, name, args) {\n    /* istanbul ignore if */\n    if (log.enabled) {\n      var logArgs = [self.name, name];\n      for (var i = 0; i < args.length - 1; i++) {\n        logArgs.push(args[i]);\n      }\n      log.apply(null, logArgs);\n\n      // override the callback itself to log the response\n      var origCallback = args[args.length - 1];\n      args[args.length - 1] = function (err, res) {\n        var responseArgs = [self.name, name];\n        responseArgs = responseArgs.concat(\n          err ? ['error', err] : ['success', res]\n        );\n        log.apply(null, responseArgs);\n        origCallback(err, res);\n      };\n    }\n  }\n\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = {};\n  requests.forEach(function (request) {\n    if (request.id in requestsById) {\n      requestsById[request.id].push(request);\n    } else {\n      requestsById[request.id] = [request];\n    }\n  });\n\n  var numDocs = Object.keys(requestsById).length;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = Object.keys(requestsById);\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById[docId];\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\ninherits(Changes$1, events.EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes$1() {\n  events.EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges$1.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        setTimeout(function (){\n          eventFunction();\n        },0);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges$1.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  events.EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges$1.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges$1.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if(max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\ninherits(PouchError, Error);\n\nfunction PouchError(opts) {\n  Error.call(this, opts.reason);\n  this.status = opts.status;\n  this.name = opts.error;\n  this.message = opts.reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError({\n  status: 401,\n  error: 'unauthorized',\n  reason: \"Name or password is incorrect.\"\n});\n\nvar MISSING_BULK_DOCS = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: \"Missing JSON list of 'docs'\"\n});\n\nvar MISSING_DOC = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'missing'\n});\n\nvar REV_CONFLICT = new PouchError({\n  status: 409,\n  error: 'conflict',\n  reason: 'Document update conflict'\n});\n\nvar INVALID_ID = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: '_id field must contain a string'\n});\n\nvar MISSING_ID = new PouchError({\n  status: 412,\n  error: 'missing_id',\n  reason: '_id is required for puts'\n});\n\nvar RESERVED_ID = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Only reserved document ids may start with underscore.'\n});\n\nvar NOT_OPEN = new PouchError({\n  status: 412,\n  error: 'precondition_failed',\n  reason: 'Database not open'\n});\n\nvar UNKNOWN_ERROR = new PouchError({\n  status: 500,\n  error: 'unknown_error',\n  reason: 'Database encountered an unknown error'\n});\n\nvar BAD_ARG = new PouchError({\n  status: 500,\n  error: 'badarg',\n  reason: 'Some query argument is invalid'\n});\n\nvar INVALID_REQUEST = new PouchError({\n  status: 400,\n  error: 'invalid_request',\n  reason: 'Request was invalid'\n});\n\nvar QUERY_PARSE_ERROR = new PouchError({\n  status: 400,\n  error: 'query_parse_error',\n  reason: 'Some query parameter is invalid'\n});\n\nvar DOC_VALIDATION = new PouchError({\n  status: 500,\n  error: 'doc_validation',\n  reason: 'Bad special document member'\n});\n\nvar BAD_REQUEST = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Something wrong with the request'\n});\n\nvar NOT_AN_OBJECT = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Document must be a JSON object'\n});\n\nvar DB_MISSING = new PouchError({\n  status: 404,\n  error: 'not_found',\n  reason: 'Database not found'\n});\n\nvar IDB_ERROR = new PouchError({\n  status: 500,\n  error: 'indexed_db_went_bad',\n  reason: 'unknown'\n});\n\nvar WSQ_ERROR = new PouchError({\n  status: 500,\n  error: 'web_sql_went_bad',\n  reason: 'unknown'\n});\n\nvar LDB_ERROR = new PouchError({\n  status: 500,\n  error: 'levelDB_went_went_bad',\n  reason: 'unknown'\n});\n\nvar FORBIDDEN = new PouchError({\n  status: 403,\n  error: 'forbidden',\n  reason: 'Forbidden by design doc validate_doc_update function'\n});\n\nvar INVALID_REV = new PouchError({\n  status: 400,\n  error: 'bad_request',\n  reason: 'Invalid rev format'\n});\n\nvar FILE_EXISTS = new PouchError({\n  status: 412,\n  error: 'file_exists',\n  reason: 'The database could not be created, the file already exists.'\n});\n\nvar MISSING_STUB = new PouchError({\n  status: 412,\n  error: 'missing_stub'\n});\n\nvar INVALID_URL = new PouchError({\n  status: 413,\n  error: 'invalid_url',\n  reason: 'Provided URL is invalid'\n});\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 events.EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* jshint maxlen: false */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\n// BEGIN Math.uuid.js\n\n/*!\nMath.uuid.js (v1.4)\nhttp://www.broofa.com\nmailto:robert@broofa.com\n\nCopyright (c) 2010 Robert Kieffer\nDual licensed under the MIT and GPL licenses.\n*/\n\n/*\n * Generate a random uuid.\n *\n * USAGE: Math.uuid(length, radix)\n *   length - the desired number of characters\n *   radix  - the number of allowable values for each character.\n *\n * EXAMPLES:\n *   // No arguments  - returns RFC4122, version 4 ID\n *   >>> Math.uuid()\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n *\n *   // One argument - returns ID of the specified length\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n *   \"VcydxgltxrVZSTV\"\n *\n *   // Two arguments - returns ID of the specified length, and radix. \n *   // (Radix must be <= 62)\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n *   \"01001010\"\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n *   \"47473046\"\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n *   \"098F4D35\"\n */\nvar chars = (\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  'abcdefghijklmnopqrstuvwxyz'\n).split('');\nfunction getValue(radix) {\n  return 0 | Math.random() * radix;\n}\nfunction uuid(len, radix) {\n  radix = radix || chars.length;\n  var out = '';\n  var i = -1;\n\n  if (len) {\n    // Compact form\n    while (++i < len) {\n      out += chars[getValue(radix)];\n    }\n    return out;\n  }\n    // rfc4122, version 4 form\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n  while (++i < 36) {\n    switch (i) {\n      case 8:\n      case 13:\n      case 18:\n      case 23:\n        out += '-';\n        break;\n      case 19:\n        out += chars[(getValue(16) & 0x3) | 0x8];\n        break;\n      default:\n        out += chars[getValue(16)];\n    }\n  }\n\n  return out;\n}\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var maybeStem = {};\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var numStemmed = Math.max(0, stemmed.length - depth);\n    var stemmedNode = {\n      pos: path.pos + numStemmed,\n      ids: pathToTree(stemmed, numStemmed)\n    };\n\n    for (var s = 0; s < numStemmed; s++) {\n      var rev = (path.pos + s) + '-' + stemmed[s].id;\n      maybeStem[rev] = true;\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, stemmedNode, true).tree;\n    } else {\n      result = [stemmedNode];\n    }\n  }\n\n  traverseRevTree(result, function (isLeaf, pos, revHash) {\n    // some revisions may have been removed in a branch but not in another\n    delete maybeStem[pos + '-' + revHash];\n  });\n\n  return {\n    tree: result,\n    revs: Object.keys(maybeStem)\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\nfunction evalFilter(input) {\n  return scopedEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopedEval(code, {});\n}\n\ninherits(Changes, events.EventEmitter);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes(db, opts, callback) {\n  events.EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (opts.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.doChanges(opts);\n      }\n    });\n  } else {\n    self.doChanges(opts);\n  }\n}\nChanges.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n\n    if (this.db.type() !== 'http' && !opts.doc_ids) {\n      return this.filterChanges(opts);\n    }\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\nChanges.prototype.filterChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    this.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      self.doChanges(opts);\n    });\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    if (!filterName) {\n      return self.doChanges(opts);\n    }\n    this.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      self.doChanges(opts);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// returns first element of arr satisfying callback predicate\nfunction arrayFirst(arr, callback) {\n  for (var i = 0; i < arr.length; i++) {\n    if (callback(arr[i], i) === true) {\n      return arr[i];\n    }\n  }\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      callback(err || results[0]);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise.all(keys.map(function (key) {\n    var subOpts = jsExtend.extend({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      process.nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + 'is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, events.EventEmitter);\n\nfunction AbstractPouchDB() {\n  events.EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  if (typeof this._put === 'function' && opts.new_edits !== false) {\n    this._put(doc, opts, cb);\n  } else {\n    this.bulkDocs({docs: [doc]}, opts, yankError(cb));\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new _Map();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          result.push({ok: doc});\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = arrayFirst(paths, function (arr) {\n        return arr.ids.map(function (x) { return x.id; })\n          .indexOf(doc._rev.split('-')[1]) !== -1;\n      });\n\n      var indexOfRev = path.ids.map(function (x) {return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (this.type() !== 'http') {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && self.type() !== 'http');\n    info.adapter = self.type();\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  if (!opts.new_edits && this.type() !== 'http') {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (self.type() === 'http') {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z\\-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    name = /http(s?)/.test(match[1]) ? match[1] + '://' + match[2] : match[2];\n    return {name: name, adapter: match[1]};\n  }\n\n  // check for browsers that have been upgraded from websql-only to websql+idb\n  var skipIdb = 'idb' in PouchDB.adapters && 'websql' in PouchDB.adapters &&\n    hasLocalStorage() &&\n    localStorage['_pouch__websqldb_' + PouchDB.prefix + name];\n\n  var adapterName;\n\n  if (opts.adapter) {\n    adapterName = opts.adapter;\n  } else if (typeof opts !== 'undefined' && opts.db) {\n    adapterName = 'leveldb';\n  } else { // automatically determine adapter\n    for (var i = 0; i < PouchDB.preferredAdapters.length; ++i) {\n      adapterName = PouchDB.preferredAdapters[i];\n      /* istanbul ignore if */\n      if (skipIdb && adapterName === 'idb') {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = PouchDB.adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (PouchDB.prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  var destructionListeners = self.constructor._destructionListeners;\n\n  function onDestroyed() {\n    self.constructor.emit('destroyed', self.name);\n  }\n\n  function onConstructorDestroyed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.emit('destroyed', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n\n  // in setup.js, the constructor is primed to listen for destroy events\n  if (!destructionListeners.has(self.name)) {\n    destructionListeners.set(self.name, []);\n  }\n  destructionListeners.get(self.name).push(onConstructorDestroyed);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  debug('pouchdb:adapter')('Picked adapter: ' + opts.adapter);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB.debug = debug;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new events.EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n    if (typeof events.EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new _Map();\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    destructListeners.get(name).forEach(function (callback) {\n      callback();\n    });\n    destructListeners.delete(name);\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0){\n    throw new Error('Invalid plugin: object passed in is empty or not an object');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = jsExtend.extend({}, defaultOpts, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.0.5\";\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+\\-./.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = uuid(32, 16).toLowerCase();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar atob$1 = function (str) {\n  return atob(str);\n};\n\nvar btoa$1 = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(atob$1(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(btoa$1(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return btoa$1(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return atob$1(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = btoa$1(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && (((previouslyDeleted && deleted) ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$ = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$ = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new _Map();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction slowJsonParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonParse(str) {\n  // try/catch is deoptimized in V8, leading to slower\n  // times than we'd like to have. Most documents are _not_\n  // huge, and do not require a slower code path just to parse them.\n  // We can be pretty sure that a document under 50000 characters\n  // will not be so deeply nested as to throw a stack overflow error\n  // (depends on the engine and available memory, though, so this is\n  // just a hunch). 50000 was chosen based on the average length\n  // of this string in our test suite, to try to find a number that covers\n  // most of our test cases (26 over this size, 26378 under it).\n  if (str.length < 50000) {\n    return JSON.parse(str);\n  }\n  return slowJsonParse(str);\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction tryCode(fun, that, args, PouchDB) {\n  try {\n    fun.apply(that, args);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nvar taskQueue = {\n  running: false,\n  queue: []\n};\n\nfunction applyNext(PouchDB) {\n  if (taskQueue.running || !taskQueue.queue.length) {\n    return;\n  }\n  taskQueue.running = true;\n  var item = taskQueue.queue.shift();\n  item.action(function (err, res) {\n    tryCode(item.callback, this, [err, res], PouchDB);\n    taskQueue.running = false;\n    process.nextTick(function () {\n      applyNext(PouchDB);\n    });\n  });\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(btoa$1(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = jsExtend.extend(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, idbChanges, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var docInfoError;\n  var docCountDelta = 0;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new _Map();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    idbChanges.notify(api._meta.name);\n    api._meta.docCount += docCountDelta;\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docCountDelta += delta;\n\n    docInfo.metadata.winningRev = winningRev;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    finishDoc(docInfo, winningRev, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: winningRev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction handleKeyRangeError(api, opts, err, callback) {\n  if (err.name === \"DataError\" && err.code === 0) {\n    // data error, start is less than end\n    return callback(null, {\n      total_rows: api._meta.docCount,\n      offset: opts.skip,\n      rows: []\n    });\n  }\n  callback(createError(IDB_ERROR, err.name, err.message));\n}\n\nfunction idbAllDocs(opts, api, idb, callback) {\n\n  function allDocsQuery(opts, callback) {\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var skip = opts.skip || 0;\n    var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n    var inclusiveEnd = opts.inclusive_end !== false;\n    var descending = 'descending' in opts && opts.descending ? 'prev' : null;\n\n    var keyRange = createKeyRange(start, end, inclusiveEnd, key, descending);\n    if (keyRange && keyRange.error) {\n      return handleKeyRangeError(api, opts, keyRange.error, callback);\n    }\n\n    var stores = [DOC_STORE, BY_SEQ_STORE];\n\n    if (opts.attachments) {\n      stores.push(ATTACH_STORE);\n    }\n    var txnResult = openTransactionSafely(idb, stores, 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var cursor = descending ?\n      docStore.openCursor(keyRange, descending) :\n      docStore.openCursor(keyRange);\n    var docIdRevIndex = seqStore.index('_doc_id_rev');\n    var results = [];\n    var docCount = 0;\n\n    // if the user specifies include_docs=true, then we don't\n    // want to block the main cursor while we're fetching the doc\n    function fetchDocAsynchronously(metadata, row, winningRev) {\n      var key = metadata.id + \"::\" + winningRev;\n      docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n        row.doc = decodeDoc(e.target.result);\n        if (opts.conflicts) {\n          row.doc._conflicts = collectConflicts(metadata);\n        }\n        fetchAttachmentsIfNecessary(row.doc, opts, txn);\n      };\n    }\n\n    function allDocsInner(cursor, winningRev, metadata) {\n      var row = {\n        id: metadata.id,\n        key: metadata.id,\n        value: {\n          rev: winningRev\n        }\n      };\n      var deleted = metadata.deleted;\n      if (opts.deleted === 'ok') {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        if (deleted) {\n          row.value.deleted = true;\n          row.doc = null;\n        } else if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n      } else if (!deleted && skip-- <= 0) {\n        results.push(row);\n        if (opts.include_docs) {\n          fetchDocAsynchronously(metadata, row, winningRev);\n        }\n        if (--limit === 0) {\n          return;\n        }\n      }\n      cursor.continue();\n    }\n\n    function onGetCursor(e) {\n      docCount = api._meta.docCount; // do this within the txn for consistency\n      var cursor = e.target.result;\n      if (!cursor) {\n        return;\n      }\n      var metadata = decodeMetadata(cursor.value);\n      var winningRev = metadata.winningRev;\n\n      allDocsInner(cursor, winningRev, metadata);\n    }\n\n    function onResultsReady() {\n      callback(null, {\n        total_rows: docCount,\n        offset: opts.skip,\n        rows: results\n      });\n    }\n\n    function onTxnComplete() {\n      if (opts.attachments) {\n        postProcessAttachments(results, opts.binary).then(onResultsReady);\n      } else {\n        onResultsReady();\n      }\n    }\n\n    txn.oncomplete = onTxnComplete;\n    cursor.onsuccess = onGetCursor;\n  }\n\n  function allDocs(opts, callback) {\n\n    if (opts.limit === 0) {\n      return callback(null, {\n        total_rows: api._meta.docCount,\n        offset: opts.skip,\n        rows: []\n      });\n    }\n    allDocsQuery(opts, callback);\n  }\n\n  allDocs(opts, callback);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise(function (resolve) {\n    var blob = createBlob(['']);\n    txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n\n    txn.oncomplete = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nvar cachedDBs = new _Map();\nvar blobSupportPromise;\nvar idbChanges = new Changes$1();\nvar openReqList = new _Map();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  taskQueue.queue.push({\n    action: function (thisCallback) {\n      init(api, opts, thisCallback);\n    },\n    callback: callback\n  });\n  applyNext(api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, idbChanges, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n      if (isDeleted(metadata) && !opts.rev) {\n        err = createError(MISSING_DOC, \"deleted\");\n        return finish();\n      }\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\n      var rev = opts.rev || metadata.winningRev;\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n\n    if (idb === null || !cachedDBs.has(dbName)) {\n      var error = new Error('db isn\\'t open');\n      error.id = 'idbNull';\n      return callback(error);\n    }\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var cursor = txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev');\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n      // count within the same txn for consistency\n      docCount = api._meta.docCount;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, api, idb, callback);\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = dbName + ':' + uuid();\n      idbChanges.addListener(dbName, id, api, opts);\n      idbChanges.notify(dbName);\n      return {\n        cancel: function () {\n          idbChanges.removeListener(dbName, id);\n        }\n      };\n    }\n\n    var docIds = opts.doc_ids && new _Set(opts.doc_ids);\n\n    opts.since = opts.since || 0;\n    var lastSeq = opts.since;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n\n    var results = [];\n    var numResults = 0;\n    var filter = filterChange(opts);\n    var docIdsToMetadata = new _Map();\n\n    var txn;\n    var bySeqStore;\n    var docStore;\n    var docIdRevIndex;\n\n    function onGetCursor(cursor) {\n\n      var doc = decodeDoc(cursor.value);\n      var seq = cursor.key;\n\n      if (docIds && !docIds.has(doc._id)) {\n        return cursor.continue();\n      }\n\n      var metadata;\n\n      function onGetMetadata() {\n        if (metadata.seq !== seq) {\n          // some other seq is later\n          return cursor.continue();\n        }\n\n        lastSeq = seq;\n\n        if (metadata.winningRev === doc._rev) {\n          return onGetWinningDoc(doc);\n        }\n\n        fetchWinningDoc();\n      }\n\n      function fetchWinningDoc() {\n        var docIdRev = doc._id + '::' + metadata.winningRev;\n        var req = docIdRevIndex.get(docIdRev);\n        req.onsuccess = function (e) {\n          onGetWinningDoc(decodeDoc(e.target.result));\n        };\n      }\n\n      function onGetWinningDoc(winningDoc) {\n\n        var change = opts.processChange(winningDoc, metadata, opts);\n        change.seq = metadata.seq;\n\n        var filtered = filter(change);\n        if (typeof filtered === 'object') {\n          return opts.complete(filtered);\n        }\n\n        if (filtered) {\n          numResults++;\n          if (returnDocs) {\n            results.push(change);\n          }\n          // process the attachment immediately\n          // for the benefit of live listeners\n          if (opts.attachments && opts.include_docs) {\n            fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n              postProcessAttachments([change], opts.binary).then(function () {\n                opts.onChange(change);\n              });\n            });\n          } else {\n            opts.onChange(change);\n          }\n        }\n        if (numResults !== limit) {\n          cursor.continue();\n        }\n      }\n\n      metadata = docIdsToMetadata.get(doc._id);\n      if (metadata) { // cached\n        return onGetMetadata();\n      }\n      // metadata not cached, have to go fetch it\n      docStore.get(doc._id).onsuccess = function (event) {\n        metadata = decodeMetadata(event.target.result);\n        docIdsToMetadata.set(doc._id, metadata);\n        onGetMetadata();\n      };\n    }\n\n    function onsuccess(event) {\n      var cursor = event.target.result;\n\n      if (!cursor) {\n        return;\n      }\n      onGetCursor(cursor);\n    }\n\n    function fetchChanges() {\n      var objectStores = [DOC_STORE, BY_SEQ_STORE];\n      if (opts.attachments) {\n        objectStores.push(ATTACH_STORE);\n      }\n      var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n      if (txnResult.error) {\n        return opts.complete(txnResult.error);\n      }\n      txn = txnResult.txn;\n      txn.onabort = idbError(opts.complete);\n      txn.oncomplete = onTxnComplete;\n\n      bySeqStore = txn.objectStore(BY_SEQ_STORE);\n      docStore = txn.objectStore(DOC_STORE);\n      docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n      var req;\n\n      if (opts.descending) {\n        req = bySeqStore.openCursor(null, 'prev');\n      } else {\n        req = bySeqStore.openCursor(IDBKeyRange.lowerBound(opts.since, true));\n      }\n\n      req.onsuccess = onsuccess;\n    }\n\n    fetchChanges();\n\n    function onTxnComplete() {\n\n      function finish() {\n        opts.complete(null, {\n          results: results,\n          last_seq: lastSeq\n        });\n      }\n\n      if (!opts.continuous && opts.attachments) {\n        // cannot guarantee that postProcessing was already done,\n        // so do it again\n        postProcessAttachments(results).then(finish);\n      } else {\n        finish();\n      }\n    }\n  };\n\n  api._close = function (callback) {\n    if (idb === null) {\n      return callback(createError(NOT_OPEN));\n    }\n\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    idb = null;\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    idbChanges.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    process.nextTick(function () {\n      callback(null, api);\n    });\n    return;\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var req = txn.objectStore(META_STORE).get(META_STORE);\n\n    var blobSupport = null;\n    var docCount = null;\n    var instanceId = null;\n\n    req.onsuccess = function (e) {\n\n      var checkSetupComplete = function () {\n        if (blobSupport === null || docCount === null ||\n            instanceId === null) {\n          return;\n        } else {\n          api._meta = {\n            name: dbName,\n            instanceId: instanceId,\n            blobSupport: blobSupport,\n            docCount: docCount\n          };\n\n          cachedDBs.set(dbName, {\n            idb: idb,\n            global: api._meta\n          });\n          callback(null, api);\n        }\n      };\n\n      //\n      // fetch/store the id\n      //\n\n      var meta = e.target.result || {id: META_STORE};\n      if (dbName  + '_id' in meta) {\n        instanceId = meta[dbName + '_id'];\n        checkSetupComplete();\n      } else {\n        instanceId = uuid();\n        meta[dbName + '_id'] = instanceId;\n        txn.objectStore(META_STORE).put(meta).onsuccess = function () {\n          checkSetupComplete();\n        };\n      }\n\n      //\n      // check blob support\n      //\n\n      if (!blobSupportPromise) {\n        // make sure blob support is only checked once\n        blobSupportPromise = checkBlobSupport(txn);\n      }\n\n      blobSupportPromise.then(function (val) {\n        blobSupport = val;\n        checkSetupComplete();\n      });\n\n      //\n      // count docs\n      //\n\n      var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n      index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n        docCount = e.target.result;\n        checkSetupComplete();\n      };\n\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch(err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new _Set();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^\\(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new _Map();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    api._docCount = -1; // invalidate\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: winningRev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new _Map();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes$1();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = jsExtend.extend(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._docCount = -1; // cache sqlite count(*) for performance\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = jsExtend.extend({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    db.readTransaction(function (tx) {\n      countDocs(tx, function (docCount) {\n        var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n        tx.executeSql(sql, [], function (tx, res) {\n          var updateSeq = res.rows.item(0).seq || 0;\n          callback(null, {\n            doc_count: docCount,\n            update_seq: updateSeq,\n            websql_encoding: encoding\n          });\n        });\n      });\n    }, websqlError(callback));\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, jsExtend.extend({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n    if (opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    }\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        err = createError(MISSING_DOC, 'deleted');\n        return finish();\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  function countDocs(tx, callback) {\n\n    if (api._docCount !== -1) {\n      return callback(api._docCount);\n    }\n\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      api._docCount = result.rows.item(0).num;\n      callback(api._docCount);\n    });\n  }\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n\n      // first count up the total rows\n      countDocs(tx, function (count) {\n        totalRows = count;\n\n        if (limit === 0) {\n          return;\n        }\n\n        // then actually fetch the documents\n        var sql = select(\n          SELECT_DOCS,\n          [DOC_STORE$1, BY_SEQ_STORE$1],\n          DOC_STORE_AND_BY_SEQ_JOINER,\n          criteria,\n          DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n          );\n        sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            var id = metadata.id;\n            var data = unstringifyDoc(item.data, id, item.rev);\n            var winningRev = data._rev;\n            var doc = {\n              id: id,\n              key: id,\n              value: {rev: winningRev}\n            };\n            if (opts.include_docs) {\n              doc.doc = data;\n              doc.doc._rev = winningRev;\n              if (opts.conflicts) {\n                doc.doc._conflicts = collectConflicts(metadata);\n              }\n              fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n            }\n            if (item.deleted) {\n              if (opts.deleted === 'ok') {\n                doc.value.deleted = true;\n                doc.doc = null;\n              } else {\n                continue;\n              }\n            }\n            results.push(doc);\n          }\n        });\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = btoa$1(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev = pos + '-' + revHash;\n          if (revs.indexOf(rev) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = jsExtend.extend({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nfunction WebSqlPouch (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n}\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      fetchOptions.body = arrayBuffer;\n    });\n  } else if (options.body &&\n             options.processData &&\n             typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      callback(result, response);\n    }\n  }).catch(function (error) {\n    callback(error, response);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if(xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch(e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (hasXhr || options.xhr) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = jsExtend.extend(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore(opts, callback);\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\n\nvar supportsBulkGetMap = {};\n\nvar log$1 = debug('pouchdb:http');\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise.resolve();\n  }\n\n  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = btoa$1(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = jsExtend.extend(clone(ajaxOpts), reqAjax, options);\n    log$1(reqOpts.method + ' ' + reqOpts.url);\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      ajax$$(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  setTimeout(function () {\n    callback(null, api);\n  });\n\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$('id', function (callback) {\n    ajax$$({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid);\n    });\n  });\n\n  api.request = adapterFun$$('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      ajax$$({}, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        /* istanbul ignore else */\n        if (err) {\n          var status = Math.floor(err.status / 100);\n          /* istanbul ignore else */\n          if (status === 4 || status === 5) { // 40x or 50x\n            supportsBulkGetMap[dbUrl] = false;\n            explainError(\n              err.status,\n              'PouchDB is just detecting if the remote ' +\n              'supports the _bulk_get API.'\n            );\n            doBulkGetShim();\n          } else {\n            callback(err);\n          }\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      /* istanbul ignore next */\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch() {\n\n        if (!filenames.length) {\n          return null;\n        }\n\n        var filename = filenames.pop();\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return new PromisePool(fetch, 5, {promise: PouchPromise}).start();\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(callback);\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$('removeAttachment', function (docId, attachmentId, rev,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n\n    ajax$$({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$('putAttachment', function (docId, attachmentId, rev, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = atob$1(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n    opts.timeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // We give a 5 second buffer for CouchDB changes to respond with\n    // an ok timeout (if a timeout it set)\n    var params = opts.timeout ? {timeout: opts.timeout - (5 * 1000)} : {};\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    } else {\n      // Default heartbeat to 10 seconds\n      params.heartbeat = 10000;\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: opts.timeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        setTimeout(function () { fetch(lastFetchedSeq, fetched); }, 0);\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  if (a === null) {\n    return 0;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a === b ? 0 : (a < b ? -1 : 1);\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\nfunction TaskQueue$1() {\n  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction createView(opts) {\n  var sourceDB = opts.db;\n  var viewName = opts.viewName;\n  var mapFun = opts.map;\n  var reduceFun = opts.reduce;\n  var temporary = opts.temporary;\n\n  // the \"undefined\" part is for backwards compatibility\n  var viewSignature = mapFun.toString() + (reduceFun && reduceFun.toString()) +\n    'undefined';\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/mrviews', diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log$2 = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopedEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log$2,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\nvar promisedCallback = function (promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      process.nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      process.nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n};\n\nvar callbackify = function (fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n};\n\n// Promise finally util similar to Q.finally\nvar fin = function (promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n};\n\nvar sequentialize = function (queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n};\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nvar uniq = function (arr) {\n  var map = {};\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    map['$' + arr[i]] = true;\n  }\n\n  var keys = Object.keys(map);\n  var output = new Array(keys.length);\n\n  for (i = 0, len = keys.length; i < len; i++) {\n    output[i] = keys[i].substring(1);\n  }\n  return output;\n};\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\nfunction tryCode$1(db, fun, args) {\n  // emit an event if there was an error thrown by a map/reduce function.\n  // putting try/catches in a single function also avoids deoptimizations.\n  try {\n    return {\n      output : fun.apply(null, args)\n    };\n  } catch (e) {\n    emitError(db, e);\n    return {error: e};\n  }\n}\n\nfunction sortByKeyThenValue(x, y) {\n  var keyCompare = collate(x.key, y.key);\n  return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n}\n\nfunction sliceResults(results, limit, skip) {\n  skip = skip || 0;\n  if (typeof limit === 'number') {\n    return results.slice(skip, limit + skip);\n  } else if (skip > 0) {\n    return results.slice(skip);\n  }\n  return results;\n}\n\nfunction rowToDocId(row) {\n  var val = row.value;\n  // Users can explicitly specify a joined doc _id, or it\n  // defaults to the doc _id that emitted the key/value.\n  var docId = (val && typeof val === 'object' && val._id) || row.id;\n  return docId;\n}\n\nfunction readAttachmentsAsBlobOrBuffer$1(res) {\n  res.rows.forEach(function (row) {\n    var atts = row.doc && row.doc._attachments;\n    if (!atts) {\n      return;\n    }\n    Object.keys(atts).forEach(function (filename) {\n      var att = atts[filename];\n      atts[filename].data = b64ToBluffer(att.data, att.content_type);\n    });\n  });\n}\n\nfunction postprocessAttachments(opts) {\n  return function (res) {\n    if (opts.include_docs && opts.attachments && opts.binary) {\n      readAttachmentsAsBlobOrBuffer$1(res);\n    }\n    return res;\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction addHttpParam(paramName, opts, params, asJson) {\n  // add an http param from opts to params, optionally json-encoded\n  var val = opts[paramName];\n  if (typeof val !== 'undefined') {\n    if (asJson) {\n      val = encodeURIComponent(JSON.stringify(val));\n    }\n    params.push(paramName + '=' + val);\n  }\n}\n\nfunction coerceInteger(integerCandidate) {\n  if (typeof integerCandidate !== 'undefined') {\n    var asNumber = Number(integerCandidate);\n    // prevents e.g. '1foo' or '1.1' being coerced to 1\n    if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n      return asNumber;\n    } else {\n      return integerCandidate;\n    }\n  }\n}\n\nfunction coerceOptions(opts) {\n  opts.group_level = coerceInteger(opts.group_level);\n  opts.limit = coerceInteger(opts.limit);\n  opts.skip = coerceInteger(opts.skip);\n  return opts;\n}\n\nfunction checkPositiveInteger(number) {\n  if (number) {\n    if (typeof number !== 'number') {\n      return  new QueryParseError('Invalid value for integer: \"' +\n      number + '\"');\n    }\n    if (number < 0) {\n      return new QueryParseError('Invalid value for positive integer: ' +\n        '\"' + number + '\"');\n    }\n  }\n}\n\nfunction checkQueryParseError(options, fun) {\n  var startkeyName = options.descending ? 'endkey' : 'startkey';\n  var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n  if (typeof options[startkeyName] !== 'undefined' &&\n    typeof options[endkeyName] !== 'undefined' &&\n    collate(options[startkeyName], options[endkeyName]) > 0) {\n    throw new QueryParseError('No rows can match your key range, ' +\n    'reverse your start_key and end_key or set {descending : true}');\n  } else if (fun.reduce && options.reduce !== false) {\n    if (options.include_docs) {\n      throw new QueryParseError('{include_docs:true} is invalid for reduce');\n    } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n      throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n      '{group: true}');\n    }\n  }\n  ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n    var error = checkPositiveInteger(options[optionName]);\n    if (error) {\n      throw error;\n    }\n  });\n}\n\nfunction httpQuery(db, fun, opts) {\n  // List of parameters to add to the PUT request\n  var params = [];\n  var body;\n  var method = 'GET';\n\n  // If opts.reduce exists and is defined, then add it to the list\n  // of parameters.\n  // If reduce=false then the results are that of only the map function\n  // not the final result of map and reduce.\n  addHttpParam('reduce', opts, params);\n  addHttpParam('include_docs', opts, params);\n  addHttpParam('attachments', opts, params);\n  addHttpParam('limit', opts, params);\n  addHttpParam('descending', opts, params);\n  addHttpParam('group', opts, params);\n  addHttpParam('group_level', opts, params);\n  addHttpParam('skip', opts, params);\n  addHttpParam('stale', opts, params);\n  addHttpParam('conflicts', opts, params);\n  addHttpParam('startkey', opts, params, true);\n  addHttpParam('start_key', opts, params, true);\n  addHttpParam('endkey', opts, params, true);\n  addHttpParam('end_key', opts, params, true);\n  addHttpParam('inclusive_end', opts, params);\n  addHttpParam('key', opts, params, true);\n\n  // Format the list of parameters into a valid URI query string\n  params = params.join('&');\n  params = params === '' ? '' : '?' + params;\n\n  // If keys are supplied, issue a POST to circumvent GET query string limits\n  // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n  if (typeof opts.keys !== 'undefined') {\n    var MAX_URL_LENGTH = 2000;\n    // according to http://stackoverflow.com/a/417184/680742,\n    // the de facto URL length limit is 2000 characters\n\n    var keysAsString =\n      'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n    if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n      // If the keys are short enough, do a GET. we do this to work around\n      // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n      params += (params[0] === '?' ? '&' : '?') + keysAsString;\n    } else {\n      method = 'POST';\n      if (typeof fun === 'string') {\n        body = {keys: opts.keys};\n      } else { // fun is {map : mapfun}, so append to this\n        fun.keys = opts.keys;\n      }\n    }\n  }\n\n  // We are referencing a query defined in the design doc\n  if (typeof fun === 'string') {\n    var parts = parseViewName(fun);\n    return db.request({\n      method: method,\n      url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // We are using a temporary view, terrible for performance, good for testing\n  body = body || {};\n  Object.keys(fun).forEach(function (key) {\n    if (Array.isArray(fun[key])) {\n      body[key] = fun[key];\n    } else {\n      body[key] = fun[key].toString();\n    }\n  });\n  return db.request({\n    method: 'POST',\n    url: '_temp_view' + params,\n    body: body\n  }).then(postprocessAttachments(opts));\n}\n\n// custom adapters can define their own api._query\n// and override the default behavior\n/* istanbul ignore next */\nfunction customQuery(db, fun, opts) {\n  return new PouchPromise(function (resolve, reject) {\n    db._query(fun, opts, function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\n// custom adapters can define their own api._viewCleanup\n// and override the default behavior\n/* istanbul ignore next */\nfunction customViewCleanup(db) {\n  return new PouchPromise(function (resolve, reject) {\n    db._viewCleanup(function (err, res) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(res);\n    });\n  });\n}\n\nfunction defaultsTo(value) {\n  return function (reason) {\n    /* istanbul ignore else */\n    if (reason.status === 404) {\n      return value;\n    } else {\n      throw reason;\n    }\n  };\n}\n\n// returns a promise for a list of docs to update, based on the input docId.\n// the order doesn't matter, because post-3.2.0, bulkDocs\n// is an atomic operation in all three adapters.\nfunction getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n  var metaDocId = '_local/doc_' + docId;\n  var defaultMetaDoc = {_id: metaDocId, keys: []};\n  var docData = docIdsToChangesAndEmits[docId];\n  var indexableKeysToKeyValues = docData.indexableKeysToKeyValues;\n  var changes = docData.changes;\n\n  function getMetaDoc() {\n    if (isGenOne(changes)) {\n      // generation 1, so we can safely assume initial state\n      // for performance reasons (avoids unnecessary GETs)\n      return PouchPromise.resolve(defaultMetaDoc);\n    }\n    return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n  }\n\n  function getKeyValueDocs(metaDoc) {\n    if (!metaDoc.keys.length) {\n      // no keys, no need for a lookup\n      return PouchPromise.resolve({rows: []});\n    }\n    return view.db.allDocs({\n      keys: metaDoc.keys,\n      include_docs: true\n    });\n  }\n\n  function processKvDocs(metaDoc, kvDocsRes) {\n    var kvDocs = [];\n    var oldKeysMap = {};\n\n    for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n      var row = kvDocsRes.rows[i];\n      var doc = row.doc;\n      if (!doc) { // deleted\n        continue;\n      }\n      kvDocs.push(doc);\n      oldKeysMap[doc._id] = true;\n      doc._deleted = !indexableKeysToKeyValues[doc._id];\n      if (!doc._deleted) {\n        var keyValue = indexableKeysToKeyValues[doc._id];\n        if ('value' in keyValue) {\n          doc.value = keyValue.value;\n        }\n      }\n    }\n\n    var newKeys = Object.keys(indexableKeysToKeyValues);\n    newKeys.forEach(function (key) {\n      if (!oldKeysMap[key]) {\n        // new doc\n        var kvDoc = {\n          _id: key\n        };\n        var keyValue = indexableKeysToKeyValues[key];\n        if ('value' in keyValue) {\n          kvDoc.value = keyValue.value;\n        }\n        kvDocs.push(kvDoc);\n      }\n    });\n    metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n    kvDocs.push(metaDoc);\n\n    return kvDocs;\n  }\n\n  return getMetaDoc().then(function (metaDoc) {\n    return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n      return processKvDocs(metaDoc, kvDocsRes);\n    });\n  });\n}\n\n// updates all emitted key/value docs and metaDocs in the mrview database\n// for the given batch of documents from the source database\nfunction saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n  var seqDocId = '_local/lastSeq';\n  return view.db.get(seqDocId)\n  .catch(defaultsTo({_id: seqDocId, seq: 0}))\n  .then(function (lastSeqDoc) {\n    var docIds = Object.keys(docIdsToChangesAndEmits);\n    return PouchPromise.all(docIds.map(function (docId) {\n      return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n    })).then(function (listOfDocsToPersist) {\n      var docsToPersist = flatten(listOfDocsToPersist);\n      lastSeqDoc.seq = seq;\n      docsToPersist.push(lastSeqDoc);\n      // write all docs in a single operation, update the seq once\n      return view.db.bulkDocs({docs : docsToPersist});\n    });\n  });\n}\n\nfunction getQueue(view) {\n  var viewName = typeof view === 'string' ? view : view.name;\n  var queue = persistentQueues[viewName];\n  if (!queue) {\n    queue = persistentQueues[viewName] = new TaskQueue$1();\n  }\n  return queue;\n}\n\nfunction updateView(view) {\n  return sequentialize(getQueue(view), function () {\n    return updateViewInQueue(view);\n  })();\n}\n\nfunction updateViewInQueue(view) {\n  // bind the emit function once\n  var mapResults;\n  var doc;\n\n  function emit(key, value) {\n    var output = {id: doc._id, key: normalizeKey(key)};\n    // Don't explicitly store the value unless it's defined and non-null.\n    // This saves on storage space, because often people don't use it.\n    if (typeof value !== 'undefined' && value !== null) {\n      output.value = normalizeKey(value);\n    }\n    mapResults.push(output);\n  }\n\n  var mapFun;\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof view.mapFun === \"function\" && view.mapFun.length === 2) {\n    var origMap = view.mapFun;\n    mapFun = function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    mapFun = evalFunctionWithEval(view.mapFun.toString(), emit);\n  }\n\n  var currentSeq = view.seq || 0;\n\n  function processChange(docIdsToChangesAndEmits, seq) {\n    return function () {\n      return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n    };\n  }\n\n  var queue = new TaskQueue$1();\n  // TODO(neojski): https://github.com/daleharvey/pouchdb/issues/1521\n\n  return new PouchPromise(function (resolve, reject) {\n\n    function complete() {\n      queue.finish().then(function () {\n        view.seq = currentSeq;\n        resolve();\n      });\n    }\n\n    function processNextBatch() {\n      view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).on('complete', function (response) {\n        var results = response.results;\n        if (!results.length) {\n          return complete();\n        }\n        var docIdsToChangesAndEmits = {};\n        for (var i = 0, l = results.length; i < l; i++) {\n          var change = results[i];\n          if (change.doc._id[0] !== '_') {\n            mapResults = [];\n            doc = change.doc;\n\n            if (!doc._deleted) {\n              tryCode$1(view.sourceDB, mapFun, [doc]);\n            }\n            mapResults.sort(sortByKeyThenValue);\n\n            var indexableKeysToKeyValues = {};\n            var lastKey;\n            for (var j = 0, jl = mapResults.length; j < jl; j++) {\n              var obj = mapResults[j];\n              var complexKey = [obj.key, obj.id];\n              if (collate(obj.key, lastKey) === 0) {\n                complexKey.push(j); // dup key+id, so make it unique\n              }\n              var indexableKey = toIndexableString(complexKey);\n              indexableKeysToKeyValues[indexableKey] = obj;\n              lastKey = obj.key;\n            }\n            docIdsToChangesAndEmits[change.doc._id] = {\n              indexableKeysToKeyValues: indexableKeysToKeyValues,\n              changes: change.changes\n            };\n          }\n          currentSeq = change.seq;\n        }\n        queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n        if (results.length < CHANGES_BATCH_SIZE$1) {\n          return complete();\n        }\n        return processNextBatch();\n      }).on('error', onError);\n      /* istanbul ignore next */\n      function onError(err) {\n        reject(err);\n      }\n    }\n\n    processNextBatch();\n  });\n}\n\nfunction reduceView(view, results, options) {\n  if (options.group_level === 0) {\n    delete options.group_level;\n  }\n\n  var shouldGroup = options.group || options.group_level;\n\n  var reduceFun;\n  if (builtInReduce[view.reduceFun]) {\n    reduceFun = builtInReduce[view.reduceFun];\n  } else {\n    reduceFun = evalFunctionWithEval(view.reduceFun.toString());\n  }\n\n  var groups = [];\n  var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n    options.group_level;\n  results.forEach(function (e) {\n    var last = groups[groups.length - 1];\n    var groupKey = shouldGroup ? e.key : null;\n\n    // only set group_level for array keys\n    if (shouldGroup && Array.isArray(groupKey)) {\n      groupKey = groupKey.slice(0, lvl);\n    }\n\n    if (last && collate(last.groupKey, groupKey) === 0) {\n      last.keys.push([e.key, e.id]);\n      last.values.push(e.value);\n      return;\n    }\n    groups.push({\n      keys: [[e.key, e.id]],\n      values: [e.value],\n      groupKey: groupKey\n    });\n  });\n  results = [];\n  for (var i = 0, len = groups.length; i < len; i++) {\n    var e = groups[i];\n    var reduceTry = tryCode$1(view.sourceDB, reduceFun,\n      [e.keys, e.values, false]);\n    if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n      // CouchDB returns an error if a built-in errors out\n      throw reduceTry.error;\n    }\n    results.push({\n      // CouchDB just sets the value to null if a non-built-in errors out\n      value: reduceTry.error ? null : reduceTry.output,\n      key: e.groupKey\n    });\n  }\n  // no total_rows/offset when reducing\n  return {rows: sliceResults(results, options.limit, options.skip)};\n}\n\nfunction queryView(view, opts) {\n  return sequentialize(getQueue(view), function () {\n    return queryViewInQueue(view, opts);\n  })();\n}\n\nfunction queryViewInQueue(view, opts) {\n  var totalRows;\n  var shouldReduce = view.reduceFun && opts.reduce !== false;\n  var skip = opts.skip || 0;\n  if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n    // equivalent query\n    opts.limit = 0;\n    delete opts.keys;\n  }\n\n  function fetchFromView(viewOpts) {\n    viewOpts.include_docs = true;\n    return view.db.allDocs(viewOpts).then(function (res) {\n      totalRows = res.total_rows;\n      return res.rows.map(function (result) {\n\n        // implicit migration - in older versions of PouchDB,\n        // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n        // this is tested in a migration test\n        /* istanbul ignore next */\n        if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n          var keys = Object.keys(result.doc.value).sort();\n          // this detection method is not perfect, but it's unlikely the user\n          // emitted a value which was an object with these 3 exact keys\n          var expectedKeys = ['id', 'key', 'value'];\n          if (!(keys < expectedKeys || keys > expectedKeys)) {\n            return result.doc.value;\n          }\n        }\n\n        var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n        return {\n          key: parsedKeyAndDocId[0],\n          id: parsedKeyAndDocId[1],\n          value: ('value' in result.doc ? result.doc.value : null)\n        };\n      });\n    });\n  }\n\n  function onMapResultsReady(rows) {\n    var finalResults;\n    if (shouldReduce) {\n      finalResults = reduceView(view, rows, opts);\n    } else {\n      finalResults = {\n        total_rows: totalRows,\n        offset: skip,\n        rows: rows\n      };\n    }\n    if (opts.include_docs) {\n      var docIds = uniq(rows.map(rowToDocId));\n\n      return view.sourceDB.allDocs({\n        keys: docIds,\n        include_docs: true,\n        conflicts: opts.conflicts,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }).then(function (allDocsRes) {\n        var docIdsToDocs = {};\n        allDocsRes.rows.forEach(function (row) {\n          if (row.doc) {\n            docIdsToDocs['$' + row.id] = row.doc;\n          }\n        });\n        rows.forEach(function (row) {\n          var docId = rowToDocId(row);\n          var doc = docIdsToDocs['$' + docId];\n          if (doc) {\n            row.doc = doc;\n          }\n        });\n        return finalResults;\n      });\n    } else {\n      return finalResults;\n    }\n  }\n\n  if (typeof opts.keys !== 'undefined') {\n    var keys = opts.keys;\n    var fetchPromises = keys.map(function (key) {\n      var viewOpts = {\n        startkey : toIndexableString([key]),\n        endkey   : toIndexableString([key, {}])\n      };\n      return fetchFromView(viewOpts);\n    });\n    return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n  } else { // normal query, no 'keys'\n    var viewOpts = {\n      descending : opts.descending\n    };\n    if (opts.start_key) {\n        opts.startkey = opts.start_key;\n    }\n    if (opts.end_key) {\n        opts.endkey = opts.end_key;\n    }\n    if (typeof opts.startkey !== 'undefined') {\n      viewOpts.startkey = opts.descending ?\n        toIndexableString([opts.startkey, {}]) :\n        toIndexableString([opts.startkey]);\n    }\n    if (typeof opts.endkey !== 'undefined') {\n      var inclusiveEnd = opts.inclusive_end !== false;\n      if (opts.descending) {\n        inclusiveEnd = !inclusiveEnd;\n      }\n\n      viewOpts.endkey = toIndexableString(\n        inclusiveEnd ? [opts.endkey, {}] : [opts.endkey]);\n    }\n    if (typeof opts.key !== 'undefined') {\n      var keyStart = toIndexableString([opts.key]);\n      var keyEnd = toIndexableString([opts.key, {}]);\n      if (viewOpts.descending) {\n        viewOpts.endkey = keyStart;\n        viewOpts.startkey = keyEnd;\n      } else {\n        viewOpts.startkey = keyStart;\n        viewOpts.endkey = keyEnd;\n      }\n    }\n    if (!shouldReduce) {\n      if (typeof opts.limit === 'number') {\n        viewOpts.limit = opts.limit;\n      }\n      viewOpts.skip = skip;\n    }\n    return fetchFromView(viewOpts).then(onMapResultsReady);\n  }\n}\n\nfunction httpViewCleanup(db) {\n  return db.request({\n    method: 'POST',\n    url: '_view_cleanup'\n  });\n}\n\nfunction localViewCleanup(db) {\n  return db.get('_local/mrviews').then(function (metaDoc) {\n    var docsToViews = {};\n    Object.keys(metaDoc.views).forEach(function (fullViewName) {\n      var parts = parseViewName(fullViewName);\n      var designDocName = '_design/' + parts[0];\n      var viewName = parts[1];\n      docsToViews[designDocName] = docsToViews[designDocName] || {};\n      docsToViews[designDocName][viewName] = true;\n    });\n    var opts = {\n      keys : Object.keys(docsToViews),\n      include_docs : true\n    };\n    return db.allDocs(opts).then(function (res) {\n      var viewsToStatus = {};\n      res.rows.forEach(function (row) {\n        var ddocName = row.key.substring(8);\n        Object.keys(docsToViews[row.key]).forEach(function (viewName) {\n          var fullViewName = ddocName + '/' + viewName;\n          /* istanbul ignore if */\n          if (!metaDoc.views[fullViewName]) {\n            // new format, without slashes, to support PouchDB 2.2.0\n            // migration test in pouchdb's browser.migration.js verifies this\n            fullViewName = viewName;\n          }\n          var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n          // design doc deleted, or view function nonexistent\n          var statusIsGood = row.doc && row.doc.views &&\n            row.doc.views[viewName];\n          viewDBNames.forEach(function (viewDBName) {\n            viewsToStatus[viewDBName] =\n              viewsToStatus[viewDBName] || statusIsGood;\n          });\n        });\n      });\n      var dbsToDelete = Object.keys(viewsToStatus).filter(\n        function (viewDBName) { return !viewsToStatus[viewDBName]; });\n      var destroyPromises = dbsToDelete.map(function (viewDBName) {\n        return sequentialize(getQueue(viewDBName), function () {\n          return new db.constructor(viewDBName, db.__opts).destroy();\n        })();\n      });\n      return PouchPromise.all(destroyPromises).then(function () {\n        return {ok: true};\n      });\n    });\n  }, defaultsTo({ok: true}));\n}\n\nvar viewCleanup = callbackify(function () {\n  var db = this;\n  if (db.type() === 'http') {\n    return httpViewCleanup(db);\n  }\n  /* istanbul ignore next */\n  if (typeof db._viewCleanup === 'function') {\n    return customViewCleanup(db);\n  }\n  return localViewCleanup(db);\n});\n\nfunction queryPromised(db, fun, opts) {\n  if (db.type() === 'http') {\n    return httpQuery(db, fun, opts);\n  }\n\n  /* istanbul ignore next */\n  if (typeof db._query === 'function') {\n    return customQuery(db, fun, opts);\n  }\n\n  if (typeof fun !== 'string') {\n    // temp_view\n    checkQueryParseError(opts, fun);\n\n    var createViewOpts = {\n      db : db,\n      viewName : 'temp_view/temp_view',\n      map : fun.map,\n      reduce : fun.reduce,\n      temporary : true\n    };\n    tempViewQueue.add(function () {\n      return createView(createViewOpts).then(function (view) {\n        function cleanup() {\n          return view.db.destroy();\n        }\n        return fin(updateView(view).then(function () {\n          return queryView(view, opts);\n        }), cleanup);\n      });\n    });\n    return tempViewQueue.finish();\n  } else {\n    // persistent view\n    var fullViewName = fun;\n    var parts = parseViewName(fullViewName);\n    var designDocName = parts[0];\n    var viewName = parts[1];\n    return db.get('_design/' + designDocName).then(function (doc) {\n      var fun = doc.views && doc.views[viewName];\n\n      if (!fun || typeof fun.map !== 'string') {\n        throw new NotFoundError('ddoc ' + designDocName +\n        ' has no view named ' + viewName);\n      }\n      checkQueryParseError(opts, fun);\n\n      var createViewOpts = {\n        db : db,\n        viewName : fullViewName,\n        map : fun.map,\n        reduce : fun.reduce\n      };\n      return createView(createViewOpts).then(function (view) {\n        if (opts.stale === 'ok' || opts.stale === 'update_after') {\n          if (opts.stale === 'update_after') {\n            process.nextTick(function () {\n              updateView(view);\n            });\n          }\n          return queryView(view, opts);\n        } else { // stale not ok\n          return updateView(view).then(function () {\n            return queryView(view, opts);\n          });\n        }\n      });\n    });\n  }\n}\n\nvar query = function (fun, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts ? coerceOptions(opts) : {};\n\n  if (typeof fun === 'function') {\n    fun = {map : fun};\n  }\n\n  var db = this;\n  var promise = PouchPromise.resolve().then(function () {\n    return queryPromised(db, fun, opts);\n  });\n  promisedCallback(promise, callback);\n  return promise;\n};\n\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = src.type() === 'http' && target.type() !== 'http';\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc).then(function (attachments) {\n            var filenames = Object.keys(remoteDoc._attachments);\n            attachments.forEach(function (attachment, i) {\n              var att = remoteDoc._attachments[filenames[i]];\n              delete att.stub;\n              delete att.length;\n              att.data = attachment;\n            });\n\n            return remoteDoc;\n          });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.type() === 'http') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  return updateCheckpoint(this.target, this.id, checkpoint,\n    session, this.returnValue);\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  var self = this;\n  if (this.readOnlySource) {\n    return PouchPromise.resolve(true);\n  }\n  return updateCheckpoint(this.src, this.id, checkpoint,\n    session, this.returnValue)\n    .catch(function (err) {\n      if (isForbiddenError(err)) {\n        self.readOnlySource = true;\n        return true;\n      }\n      throw err;\n    });\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds;\n    return new PouchPromise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate$1(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n      checkpointer = new Checkpointer(src, target, repId, returnValue);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate$1(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, events.EventEmitter);\nfunction Replication() {\n  events.EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicate(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate$1(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, events.EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? jsExtend.extend({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? jsExtend.extend({}, opts, opts.pull) : opts;\n\n  this.push = replicate(src, target, optsPush);\n  this.pull = replicate(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      self.pull.on('change', pullChange);\n      self.push.on('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.on('denied', pullDenied);\n      self.push.on('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.on('active', pullActive);\n      self.push.on('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.on('paused', pullPaused);\n      self.push.on('paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicate;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n// are aggressively optimized and jsnext:main would normally give us this\n// aggressive bundle.\n\nmodule.exports = PouchDB;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pouchdb/lib/index-browser.js\n ** module id = 3\n ** module chunks = 0\n **/","(function(factory) {\n  if(typeof exports === 'object') {\n    factory(exports);\n  } else {\n    factory(this);\n  }\n}).call(this, function(root) { \n\n  var slice   = Array.prototype.slice,\n      each    = Array.prototype.forEach;\n\n  var extend = function(obj) {\n    if(typeof obj !== 'object') throw obj + ' is not an object' ;\n\n    var sources = slice.call(arguments, 1); \n\n    each.call(sources, function(source) {\n      if(source) {\n        for(var prop in source) {\n          if(typeof source[prop] === 'object' && obj[prop]) {\n            extend.call(obj, obj[prop], source[prop]);\n          } else {\n            obj[prop] = source[prop];\n          }\n        } \n      }\n    });\n\n    return obj;\n  }\n\n  root.extend = extend;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-extend/extend.js\n ** module id = 4\n ** module chunks = 0\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/browser.js\n ** module id = 5\n ** module chunks = 0\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/debug/debug.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ms/index.js\n ** module id = 7\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lie/lib/browser.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/immediate/lib/browser.js\n ** module id = 10\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/events/events.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/argsarray/index.js\n ** module id = 12\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.9.2\n(function() {\n  var hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  module.exports = function(source, scope) {\n    var key, keys, value, values;\n    keys = [];\n    values = [];\n    for (key in scope) {\n      if (!hasProp.call(scope, key)) continue;\n      value = scope[key];\n      if (key === 'this') {\n        continue;\n      }\n      keys.push(key);\n      values.push(value);\n    }\n    return Function.apply(null, slice.call(keys).concat([source])).apply(scope[\"this\"], values);\n  };\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/scope-eval/scope_eval.js\n ** module id = 13\n ** module chunks = 0\n **/","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function ff(a, b, c, d, x, s, t) {\n        return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    function gg(a, b, c, d, x, s, t) {\n        return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    function hh(a, b, c, d, x, s, t) {\n        return cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    function ii(a, b, c, d, x, s, t) {\n        return cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a = ff(a, b, c, d, k[0], 7, -680876936);\n        d = ff(d, a, b, c, k[1], 12, -389564586);\n        c = ff(c, d, a, b, k[2], 17, 606105819);\n        b = ff(b, c, d, a, k[3], 22, -1044525330);\n        a = ff(a, b, c, d, k[4], 7, -176418897);\n        d = ff(d, a, b, c, k[5], 12, 1200080426);\n        c = ff(c, d, a, b, k[6], 17, -1473231341);\n        b = ff(b, c, d, a, k[7], 22, -45705983);\n        a = ff(a, b, c, d, k[8], 7, 1770035416);\n        d = ff(d, a, b, c, k[9], 12, -1958414417);\n        c = ff(c, d, a, b, k[10], 17, -42063);\n        b = ff(b, c, d, a, k[11], 22, -1990404162);\n        a = ff(a, b, c, d, k[12], 7, 1804603682);\n        d = ff(d, a, b, c, k[13], 12, -40341101);\n        c = ff(c, d, a, b, k[14], 17, -1502002290);\n        b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n        a = gg(a, b, c, d, k[1], 5, -165796510);\n        d = gg(d, a, b, c, k[6], 9, -1069501632);\n        c = gg(c, d, a, b, k[11], 14, 643717713);\n        b = gg(b, c, d, a, k[0], 20, -373897302);\n        a = gg(a, b, c, d, k[5], 5, -701558691);\n        d = gg(d, a, b, c, k[10], 9, 38016083);\n        c = gg(c, d, a, b, k[15], 14, -660478335);\n        b = gg(b, c, d, a, k[4], 20, -405537848);\n        a = gg(a, b, c, d, k[9], 5, 568446438);\n        d = gg(d, a, b, c, k[14], 9, -1019803690);\n        c = gg(c, d, a, b, k[3], 14, -187363961);\n        b = gg(b, c, d, a, k[8], 20, 1163531501);\n        a = gg(a, b, c, d, k[13], 5, -1444681467);\n        d = gg(d, a, b, c, k[2], 9, -51403784);\n        c = gg(c, d, a, b, k[7], 14, 1735328473);\n        b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n        a = hh(a, b, c, d, k[5], 4, -378558);\n        d = hh(d, a, b, c, k[8], 11, -2022574463);\n        c = hh(c, d, a, b, k[11], 16, 1839030562);\n        b = hh(b, c, d, a, k[14], 23, -35309556);\n        a = hh(a, b, c, d, k[1], 4, -1530992060);\n        d = hh(d, a, b, c, k[4], 11, 1272893353);\n        c = hh(c, d, a, b, k[7], 16, -155497632);\n        b = hh(b, c, d, a, k[10], 23, -1094730640);\n        a = hh(a, b, c, d, k[13], 4, 681279174);\n        d = hh(d, a, b, c, k[0], 11, -358537222);\n        c = hh(c, d, a, b, k[3], 16, -722521979);\n        b = hh(b, c, d, a, k[6], 23, 76029189);\n        a = hh(a, b, c, d, k[9], 4, -640364487);\n        d = hh(d, a, b, c, k[12], 11, -421815835);\n        c = hh(c, d, a, b, k[15], 16, 530742520);\n        b = hh(b, c, d, a, k[2], 23, -995338651);\n\n        a = ii(a, b, c, d, k[0], 6, -198630844);\n        d = ii(d, a, b, c, k[7], 10, 1126891415);\n        c = ii(c, d, a, b, k[14], 15, -1416354905);\n        b = ii(b, c, d, a, k[5], 21, -57434055);\n        a = ii(a, b, c, d, k[12], 6, 1700485571);\n        d = ii(d, a, b, c, k[3], 10, -1894986606);\n        c = ii(c, d, a, b, k[10], 15, -1051523);\n        b = ii(b, c, d, a, k[1], 21, -2054922799);\n        a = ii(a, b, c, d, k[8], 6, 1873313359);\n        d = ii(d, a, b, c, k[15], 10, -30611744);\n        c = ii(c, d, a, b, k[6], 15, -1560198380);\n        b = ii(b, c, d, a, k[13], 21, 1309151649);\n        a = ii(a, b, c, d, k[4], 6, -145523070);\n        d = ii(d, a, b, c, k[11], 10, -1120210379);\n        c = ii(c, d, a, b, k[2], 15, 718787259);\n        b = ii(b, c, d, a, k[9], 21, -343485551);\n\n        x[0] = add32(a, x[0]);\n        x[1] = add32(b, x[1]);\n        x[2] = add32(c, x[2]);\n        x[3] = add32(d, x[3]);\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/spark-md5/spark-md5.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuvuzela/index.js\n ** module id = 15\n ** module chunks = 0\n **/","(function (root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define([], factory)\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = factory()\r\n  } else {\r\n    root.PromisePool = factory()\r\n    // Legacy API\r\n    root.promisePool = root.PromisePool\r\n  }\r\n})(this, function () {\r\n  'use strict'\r\n\r\n  var EventTarget = function () {\r\n    this._listeners = {}\r\n  }\r\n\r\n  EventTarget.prototype.addEventListener = function (type, listener) {\r\n    this._listeners[type] = this._listeners[type] || []\r\n    if (this._listeners[type].indexOf(listener) < 0) {\r\n      this._listeners[type].push(listener)\r\n    }\r\n  }\r\n\r\n  EventTarget.prototype.removeEventListener = function (type, listener) {\r\n    if (this._listeners[type]) {\r\n      var p = this._listeners[type].indexOf(listener)\r\n      if (p >= 0) {\r\n        this._listeners[type].splice(p, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  EventTarget.prototype.dispatchEvent = function (evt) {\r\n    if (this._listeners[evt.type] && this._listeners[evt.type].length) {\r\n      var listeners = this._listeners[evt.type].slice()\r\n      for (var i = 0, l = listeners.length; i < l; ++i) {\r\n        listeners[i].call(this, evt)\r\n      }\r\n    }\r\n  }\r\n\r\n  var isGenerator = function (func) {\r\n    return (typeof func.constructor === 'function' &&\r\n      func.constructor.name === 'GeneratorFunction')\r\n  }\r\n\r\n  var functionToIterator = function (func) {\r\n    return {\r\n      next: function () {\r\n        var promise = func()\r\n        return promise ? {value: promise} : {done: true}\r\n      }\r\n    }\r\n  }\r\n\r\n  var promiseToIterator = function (promise) {\r\n    var called = false\r\n    return {\r\n      next: function () {\r\n        if (called) {\r\n          return {done: true}\r\n        }\r\n        called = true\r\n        return {value: promise}\r\n      }\r\n    }\r\n  }\r\n\r\n  var toIterator = function (obj, Promise) {\r\n    var type = typeof obj\r\n    if (type === 'object') {\r\n      if (typeof obj.next === 'function') {\r\n        return obj\r\n      }\r\n      /* istanbul ignore else */\r\n      if (typeof obj.then === 'function') {\r\n        return promiseToIterator(obj)\r\n      }\r\n    }\r\n    if (type === 'function') {\r\n      return isGenerator(obj) ? obj() : functionToIterator(obj)\r\n    }\r\n    return promiseToIterator(Promise.resolve(obj))\r\n  }\r\n\r\n  var PromisePoolEvent = function (target, type, data) {\r\n    this.target = target\r\n    this.type = type\r\n    this.data = data\r\n  }\r\n\r\n  var PromisePool = function (source, concurrency, options) {\r\n    EventTarget.call(this)\r\n    if (typeof concurrency !== 'number' ||\r\n        Math.floor(concurrency) !== concurrency ||\r\n        concurrency < 1) {\r\n      throw new Error('Invalid concurrency')\r\n    }\r\n    this._concurrency = concurrency\r\n    this._options = options || {}\r\n    this._options.promise = this._options.promise || Promise\r\n    this._iterator = toIterator(source, this._options.promise)\r\n    this._done = false\r\n    this._size = 0\r\n    this._promise = null\r\n    this._callbacks = null\r\n  }\r\n  PromisePool.prototype = new EventTarget()\r\n  PromisePool.prototype.constructor = PromisePool\r\n\r\n  PromisePool.prototype.concurrency = function (value) {\r\n    if (typeof value !== 'undefined') {\r\n      this._concurrency = value\r\n      if (this.active()) {\r\n        this._proceed()\r\n      }\r\n    }\r\n    return this._concurrency\r\n  }\r\n\r\n  PromisePool.prototype.size = function () {\r\n    return this._size\r\n  }\r\n\r\n  PromisePool.prototype.active = function () {\r\n    return !!this._promise\r\n  }\r\n\r\n  PromisePool.prototype.promise = function () {\r\n    return this._promise\r\n  }\r\n\r\n  PromisePool.prototype.start = function () {\r\n    var that = this\r\n    var Promise = this._options.promise\r\n    this._promise = new Promise(function (resolve, reject) {\r\n      that._callbacks = {\r\n        reject: reject,\r\n        resolve: resolve\r\n      }\r\n      that._proceed()\r\n    })\r\n    return this._promise\r\n  }\r\n\r\n  PromisePool.prototype._fireEvent = function (type, data) {\r\n    this.dispatchEvent(new PromisePoolEvent(this, type, data))\r\n  }\r\n\r\n  PromisePool.prototype._settle = function (error) {\r\n    if (error) {\r\n      this._callbacks.reject(error)\r\n    } else {\r\n      this._callbacks.resolve()\r\n    }\r\n    this._promise = null\r\n    this._callbacks = null\r\n  }\r\n\r\n  PromisePool.prototype._onPooledPromiseFulfilled = function (promise, result) {\r\n    this._size--\r\n    if (this.active()) {\r\n      this._fireEvent('fulfilled', {\r\n        promise: promise,\r\n        result: result\r\n      })\r\n      this._proceed()\r\n    }\r\n  }\r\n\r\n  PromisePool.prototype._onPooledPromiseRejected = function (promise, error) {\r\n    this._size--\r\n    if (this.active()) {\r\n      this._fireEvent('rejected', {\r\n        promise: promise,\r\n        error: error\r\n      })\r\n      this._settle(error || new Error('Unknown error'))\r\n    }\r\n  }\r\n\r\n  PromisePool.prototype._trackPromise = function (promise) {\r\n    var that = this\r\n    promise\r\n      .then(function (result) {\r\n        that._onPooledPromiseFulfilled(promise, result)\r\n      }, function (error) {\r\n        that._onPooledPromiseRejected(promise, error)\r\n      })['catch'](function (err) {\r\n        that._settle(new Error('Promise processing failed: ' + err))\r\n      })\r\n  }\r\n\r\n  PromisePool.prototype._proceed = function () {\r\n    if (!this._done) {\r\n      var result = null\r\n      while (this._size < this._concurrency &&\r\n          !(result = this._iterator.next()).done) {\r\n        this._size++\r\n        this._trackPromise(result.value)\r\n      }\r\n      this._done = (result === null || !!result.done)\r\n    }\r\n    if (this._done && this._size === 0) {\r\n      this._settle()\r\n    }\r\n  }\r\n\r\n  PromisePool.PromisePoolEvent = PromisePoolEvent\r\n  // Legacy API\r\n  PromisePool.PromisePool = PromisePool\r\n\r\n  return PromisePool\r\n})\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/es6-promise-pool/es6-promise-pool.js\n ** module id = 16\n ** module chunks = 0\n **/","import request from 'superagent';\nimport SHA256 from 'crypto-js/sha256';\n\nvar API = {\n  apiEndpoint: null,\n  apiKey: null,\n  appId: null,\n  UDID: null,\n  authenticationToken: null,\n  tokenUpdateCallback: (newToken) => {}\n};\n\nAPI.call = function (endpoint, data, callback = () => {}, method) {\n  if (!this.apiEndpoint) {\n    callback(new Error('No API endpoint set - run Telepat.configure or Telepat.connect first'), null);\n  }\n  var req;\n\n  if (method === 'get') {\n    req = request.get(this.apiEndpoint + endpoint + '?' + data);\n  } else if (method === 'delete') {\n    req = request.del(this.apiEndpoint + endpoint);\n  } else {\n    req = request.post(this.apiEndpoint + endpoint);\n  }\n\n  if (method !== 'get') {\n    req.send(data);\n  }\n\n  req.set('Content-Type', 'application/json')\n    .set('X-BLGREQ-SIGN', SHA256(this.apiKey))\n    .set('X-BLGREQ-APPID', this.appId)\n    .set('X-BLGREQ-UDID', this.UDID || 'TP_EMPTY_UDID');\n\n  if (this.authenticationToken) {\n    req.set('Authorization', 'Bearer ' + this.authenticationToken);\n  }\n\n  req.end((err, res) => {\n    if (this.needsTokenUpdate(res)) {\n      this.updateToken((error, result) => {\n        if (error) {\n          callback(error, null);\n        } else {\n          this.call(endpoint, data, callback, method);\n        }\n      });\n    } else {\n      callback(err, res);\n    }\n  });\n};\n\nAPI.needsTokenUpdate = function (response) {\n  return (this.authenticationToken && (response.status === 401));\n};\n\nAPI.updateToken = function (callback) {\n  this.get('user/refresh_token', '', (err, res) => {\n    if (err) {\n      callback(err, null);\n    } else {\n      this.authenticationToken = res.body.content.token;\n      this.tokenUpdateCallback(this.authenticationToken);\n      callback(null, res);\n    }\n  });\n};\n\nAPI.get = function (endpoint, data, callback) {\n  return this.call(endpoint, data, callback, 'get');\n};\n\nAPI.del = function (endpoint, data, callback) {\n  return this.call(endpoint, data, callback, 'delete');\n};\n\nexport default API;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api.js\n **/","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 18\n ** module chunks = 0\n **/","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request-base.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/is-object.js\n ** module id = 21\n ** module chunks = 0\n **/","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request.js\n ** module id = 22\n ** module chunks = 0\n **/",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crypto-js/sha256.js\n ** module id = 23\n ** module chunks = 0\n **/",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\t        function F() {}\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                F.prototype = this;\n\t                var subtype = new F();\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init')) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crypto-js/core.js\n ** module id = 24\n ** module chunks = 0\n **/","import olog from 'loglevel';\n\nvar originalFactory = olog.methodFactory;\n\nolog.methodFactory = function (methodName, logLevel) {\n  var rawMethod = originalFactory(methodName, logLevel);\n\n  return function (message) {\n    rawMethod('Telepat: ' + message);\n  };\n};\nolog.setLevel('warn');\n\nexport default olog;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/logger.js\n **/","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    function realMethod(methodName) {\n        if (typeof console === undefinedType) {\n            return false; // We can't build a real method without a console to log to\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // these private functions always need `this` to be set properly\n\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n    }\n\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public API\n       *\n       */\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Package-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    return defaultLogger;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/loglevel/lib/loglevel.js\n ** module id = 26\n ** module chunks = 0\n **/","import log from './logger';\n\nexport default function error(string) {\n  log.error(string);\n  return new Error(string);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/error.js\n **/","import log from './logger';\n\nexport default class Event {\n  constructor() {\n    this.eventFunctions = {};\n  }\n\n  on(name, callback) {\n    if (typeof this.eventFunctions[name] !== 'object') {\n      this.eventFunctions[name] = {};\n    }\n\n    let index = Date.now() + Object.keys(this.eventFunctions[name]).length;\n\n    this.eventFunctions[name][index] = callback;\n    return index;\n  }\n\n  removeCallback(name, index) {\n    delete this.eventFunctions[name][index];\n  }\n\n  emit(args) {\n    log.debug('Emitting ' + arguments[0] + ' event');\n    let params = Array.prototype.slice.call(arguments);\n\n    params.shift();\n    if (typeof this.eventFunctions[arguments[0]] !== 'undefined') {\n      let callbacks = this.eventFunctions[arguments[0]];\n\n      for (let index in callbacks) {\n        callbacks[index].apply(this, params);\n      }\n    }\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/event.js\n **/","import EventObject from './event';\nimport API from './api';\nimport log from './logger';\nimport error from './error';\nimport JDP from 'jsondiffpatch';\n\nvar jsondiffpatch = JDP.create({\n  objectHash: function (obj) {\n    if (obj.id) {\n      return obj.id;\n    }\n    return JSON.stringify(obj);\n  }, textDiff: {\n    minLength: 10000\n  }\n});\n\nexport default class Monitor {\n  constructor(interval = 150) {\n    function objectPropertyTrimFilter(context) {\n      function trimObject(obj) {\n        var trimmedObject = {};\n\n        for (var name in obj) {\n          if (name.slice(0, 2) !== '$$' && typeof obj[name] !== 'function') {\n            trimmedObject[name] = obj[name];\n          }\n        }\n        return trimmedObject;\n      }\n      if (!context.leftIsArray && context.leftType === 'object') {\n        context.left = trimObject(context.left);\n      }\n      if (!context.rightIsArray && context.rightType === 'object') {\n        context.right = trimObject(context.right);\n      }\n    }\n\n    jsondiffpatch.processor.pipes.diff.before('objects', objectPropertyTrimFilter);\n\n    this._updateRunning = false;\n    this._processingPatch = false;\n    this._timer = null;\n    this._lastObjects = {};\n    this._events = {};\n\n    this.objects = {};\n    this.options = {};\n    this.callbacks = {};\n    this.timerInterval = interval;\n  }\n\n  static subscriptionKeyForOptions(options) {\n    var key = 'blg:' + API.appId;\n\n    if (!options.channel.id && options.channel.context) {\n      key += ':context:' + options.channel.context;\n    }\n    if (options.channel.parent) {\n      key += ':' + options.channel.parent.model + ':' + options.channel.parent.id;\n    }\n    if (options.channel.user) {\n      key += ':users:' + options.channel.user;\n    }\n    key += ':' + options.channel.model;\n    if (options.channel.id) {\n      key += ':' + options.channel.id;\n    }\n    if (options.filters) {\n      key += ':filter:' + (btoa(JSON.stringify(options.filters)).toString('base64'));\n    }\n    return key;\n  };\n\n  remove(subscriptionOptions) {\n    var subscriptionKey = Monitor.subscriptionKeyForOptions(subscriptionOptions);\n\n    delete this.objects[subscriptionKey];\n    delete this._lastObjects[subscriptionKey];\n    delete this.options[subscriptionKey];\n    delete this.callbacks[subscriptionKey];\n    delete this._events[subscriptionKey];\n  };\n\n  add(subscriptionOptions, objects, event, addCallback, removeCallback, updateCallback) {\n    var self = this;\n\n    function processDeltaObject(object) {\n      if (Array.isArray(object) || object['_t'] === 'a') {\n        return true;\n      }\n      for (var key in object) {\n        if (typeof object[key] === 'object' && processDeltaObject(object[key])) {\n          delete object[key];\n        }\n      }\n      if (Object.keys(object).length === 0) {\n        return true;\n      }\n      return false;\n    }\n\n    function timerFunction() {\n      if (self._processingPatch || self._updateRunning) {\n        return;\n      }\n      var totalDiff = jsondiffpatch.diff(self._lastObjects, self.objects);\n\n      if (totalDiff !== undefined) {\n        log.debug('Found diff: ' + JSON.stringify(totalDiff));\n        for (var subKey in totalDiff) {\n          var root = self._lastObjects[subKey];\n          var diff = totalDiff[subKey];\n          var options = self.options[subKey];\n          var callbacks = self.callbacks[subKey];\n          var diffKeys = Object.keys(diff);\n\n          for (var i = 0; i < diffKeys.length; i++) {\n            var key = diffKeys[i];\n\n            if (key !== '_t') {\n              var obj = diff[key];\n\n              if (Array.isArray(obj)) {\n                if (obj.length === 1) {\n                  callbacks.add(self.objects[subKey][key]);\n                  delete root[key];\n                  delete self.objects[subKey][key];\n                  log.debug('Adding object to ' + subKey + ' channel');\n                } else if (obj.length === 3) {\n                  callbacks.remove(key);\n                  delete root[key];\n                  log.debug('Removing object from ' + subKey + ' channel');\n                }\n              } else {\n                var objKeys = Object.keys(obj);\n                var patch = [];\n                var publicKey = key;\n\n                if (Array.isArray(self.objects[subKey]) && self.objects[subKey][key].id) {\n                  publicKey = self.objects[subKey][key].id;\n                }\n\n                for (var j = 0; j < objKeys.length; j++) {\n                  var objKey = objKeys[j];\n                  var delta = obj[objKey];\n\n                  if (!processDeltaObject(delta)) {\n                    if (typeof delta === 'object') {\n                      patch.push({'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': self.objects[subKey][key][objKey]});\n                      log.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n                    } else if (delta.length === 1) {\n                      patch.push({'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': delta[0]});\n                      log.debug('Added ' + objKey + ' property to object ' + key + ', ' + options.channel.model + ' channel');\n                    } else if (delta.length === 2) {\n                      patch.push({'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': delta[1]});\n                      log.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n                    } else if (delta.length === 3) {\n                      log.info('Removing object properties is not supported in this version. Try setting to an empty value instead.');\n                    }\n                  } else {\n                    patch.push({'op': 'replace', 'path': options.channel.model + '/' + publicKey + '/' + objKey, 'value': self.objects[subKey][key][objKey]});\n                    log.debug('Modified ' + objKey + ' property on object ' + key + ', ' + options.channel.model + ' channel');\n                  }\n\n                  root[key][objKey] = JSON.parse(JSON.stringify(self.objects[subKey][key][objKey]));\n                }\n\n                if (patch.length) {\n                  callbacks.update(publicKey, patch);\n                }\n                log.debug('Sending patch to object ' + key + ' on ' + options.channel.model + ' channel: ' + JSON.stringify(patch));\n              }\n            }\n          }\n        }\n      }\n    }\n\n    var subscriptionKey = Monitor.subscriptionKeyForOptions(subscriptionOptions);\n\n    this.objects[subscriptionKey] = objects;\n    this.options[subscriptionKey] = subscriptionOptions;\n    this.callbacks[subscriptionKey] = {\n      add: addCallback,\n      remove: removeCallback,\n      update: updateCallback\n    };\n    this._events[subscriptionKey] = event;\n    this._lastObjects[subscriptionKey] = JSON.parse(JSON.stringify(this.objects[subscriptionKey]));\n\n    if (this._timer === null) {\n      this._timer = setInterval(timerFunction, this.timerInterval);\n    }\n  };\n\n  // ## Getting notified of object modifications\n  // Use the `Channel.on('update', ...)` function to subscribe to object updates.\n  //  This will only notify you of changes received from the 'outside' - you'll only see events when the backend\n  //  notifies the client that there are updates available, either made by you or by someone else.\n  //\n  //     Channel.on('update', function(operation, parentId, parentObject, delta) {\n  //       // operation can be one of 'replace', 'delete' or 'add'.\n  //       // parentId is the id of the Telepat object being modified.\n  //       // parentObject is the Telepat object being modified.\n  //       // delta is available just for the 'replace' operation, and is an object that contains two properties:\n  //  'path' (the name of the modified property on the object) and 'oldValue'.\n  //     });\n\n  processMessage(message) {\n    var self = this;\n\n    function process(operation) {\n      var oldValue, root, lastRoot, event, subscription, pathComponents, parent;\n\n      if (__0_3__) { // eslint-disable-line no-undef\n        if (self.objects.hasOwnProperty(operation.subscription)) {\n          root = self.objects[operation.subscription];\n          lastRoot = self._lastObjects[operation.subscription];\n          event = self._events[operation.subscription];\n\n          if (operation.hasOwnProperty('path')) {\n            pathComponents = operation.path.split('/');\n\n            if (operation.hasOwnProperty('op')) {\n              if (operation.op === 'replace') {\n                if (!root.hasOwnProperty(pathComponents[1])) {\n                  self._event.emit('error', error('Object id doesn\\'t exist ' + operation));\n                } else if (operation.hasOwnProperty('value')) {\n                  parent = root[pathComponents[1]];\n\n                  oldValue = parent[pathComponents[2]];\n                  parent[pathComponents[2]] = operation.value;\n                  lastRoot[pathComponents[1]][pathComponents[2]] = JSON.parse(JSON.stringify(operation.value));\n                  event.emit('update', 'replace', pathComponents[1], parent, { path: pathComponents[2], oldValue: oldValue });\n                  log.debug('Replaced property ' + pathComponents[2] + ' of object id ' + pathComponents[1] + ' with  value ' + operation.value);\n                } else {\n                  event.emit('error', error('Invalid operation ' + operation));\n                }\n              } else if (operation.op === 'delete') {\n                oldValue = root[pathComponents[1]];\n                delete root[pathComponents[1]];\n                delete lastRoot[pathComponents[1]];\n                event.emit('update', 'delete', pathComponents[1], oldValue);\n                log.debug('Removed object id ' + pathComponents[1]);\n              } else {\n                event.emit('error', error('Unsupported operation ' + operation));\n              }\n            } else {\n              event.emit('error', error('Invalid operation ' + operation));\n            }\n          } else {\n            if (operation.hasOwnProperty('value') && operation.value.hasOwnProperty('id')) {\n              if (!root.hasOwnProperty(operation.value.id)) {\n                operation.value.$$event = new EventObject(log);\n                root[operation.value.id] = operation.value;\n                lastRoot[operation.value.id] = JSON.parse(JSON.stringify(operation.value));\n                event.emit('update', 'add', operation.value.id, operation.value);\n                log.debug('Added object with id ' + operation.value.id);\n              } else {\n                event.emit('error', error('Object id already exists ' + operation));\n              }\n            } else {\n              event.emit('error', error('Invalid add operation ' + operation));\n            }\n          }\n        }\n      } else {\n        for (var i = 0; i < operation.subscriptions.length; i++) {\n          subscription = operation.subscriptions[i];\n\n          let subscriptionComponents = subscription.split(':');\n\n          if (subscriptionComponents[2] === 'context' && subscriptionComponents.length === 4) {\n            subscriptionComponents.pop();\n            subscription = subscriptionComponents.join(':');\n          }\n\n          root = self.objects[subscription];\n          lastRoot = self._lastObjects[subscription];\n          event = self._events[subscription];\n\n          if (root) {\n            if (operation.op === 'new') {\n              if (!root.hasOwnProperty(operation.object.id)) {\n                operation.object.$$event = new EventObject(log);\n                root[operation.object.id] = operation.object;\n                lastRoot[operation.object.id] = JSON.parse(JSON.stringify(operation.object));\n                event.emit('update', 'add', operation.object.id, operation.object);\n                log.debug('Added object with id ' + operation.object.id);\n              } else {\n                event.emit('error', error('Object id already exists ' + operation));\n              }\n            } else if (operation.op === 'update') {\n              pathComponents = operation.patch.path.split('/');\n\n              if (!root.hasOwnProperty(pathComponents[1])) {\n                event.emit('error', error('Object id doesn\\'t exist ' + operation));\n              } else if (operation.patch.hasOwnProperty('value')) {\n                parent = root[pathComponents[1]];\n\n                oldValue = parent[pathComponents[2]];\n                parent[pathComponents[2]] = operation.patch.value;\n                lastRoot[pathComponents[1]][pathComponents[2]] = JSON.parse(JSON.stringify(operation.patch.value));\n                event.emit('update', 'replace', pathComponents[1], parent, { path: pathComponents[2], oldValue: oldValue });\n                log.debug('Replaced property ' + pathComponents[2] + ' of object id ' + pathComponents[1] + ' with  value ' + operation.patch.value);\n              } else {\n                event.emit('error', error('Invalid operation ' + operation));\n              }\n            } else {\n              oldValue = root[operation.object.id];\n              delete root[operation.object.id];\n              delete lastRoot[operation.object.id];\n              event.emit('update', 'delete', operation.object.id, oldValue);\n              log.debug('Removed object id ' + operation.object.id);\n            }\n          } else {\n            log.warn('Subscription not found ' + subscription);\n          }\n        }\n      }\n    }\n\n    this._processingPatch = true;\n    log.debug('Received update: ' + JSON.stringify(message));\n    var i, operation;\n\n    for (i = 0; i < message.data.new.length; i++) {\n      operation = message.data.new[i];\n      if (!__0_3__) operation.op = 'new'; // eslint-disable-line no-undef\n      process(operation);\n    }\n    for (i = 0; i < message.data.updated.length; i++) {\n      operation = message.data.updated[i];\n      if (!__0_3__) operation.op = 'update'; // eslint-disable-line no-undef\n      process(operation);\n    }\n    for (i = 0; i < message.data.deleted.length; i++) {\n      operation = message.data.deleted[i];\n      if (!__0_3__) operation.op = 'remove'; // eslint-disable-line no-undef\n      process(operation);\n    }\n    this._processingPatch = false;\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/monitor.js\n **/","\nvar environment = require('./environment');\n\nvar DiffPatcher = require('./diffpatcher').DiffPatcher;\nexports.DiffPatcher = DiffPatcher;\n\nexports.create = function(options){\n  return new DiffPatcher(options);\n};\n\nexports.dateReviver = require('./date-reviver');\n\nvar defaultInstance;\n\nexports.diff = function() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.diff.apply(defaultInstance, arguments);\n};\n\nexports.patch = function() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.patch.apply(defaultInstance, arguments);\n};\n\nexports.unpatch = function() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.unpatch.apply(defaultInstance, arguments);\n};\n\nexports.reverse = function() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.reverse.apply(defaultInstance, arguments);\n};\n\nexports.clone = function() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.clone.apply(defaultInstance, arguments);\n};\n\n\nif (environment.isBrowser) {\n  exports.homepage = '{{package-homepage}}';\n  exports.version = '{{package-version}}';\n} else {\n  var packageInfoModuleName = '../package.json';\n  var packageInfo = require(packageInfoModuleName);\n  exports.homepage = packageInfo.homepage;\n  exports.version = packageInfo.version;\n\n  var formatterModuleName = './formatters';\n  var formatters = require(formatterModuleName);\n  exports.formatters = formatters;\n  // shortcut for console\n  exports.console = formatters.console;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/main.js\n ** module id = 30\n ** module chunks = 0\n **/","\nexports.isBrowser = typeof window !== 'undefined';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/environment.js\n ** module id = 31\n ** module chunks = 0\n **/","var Processor = require('./processor').Processor;\nvar Pipe = require('./pipe').Pipe;\nvar DiffContext = require('./contexts/diff').DiffContext;\nvar PatchContext = require('./contexts/patch').PatchContext;\nvar ReverseContext = require('./contexts/reverse').ReverseContext;\n\nvar clone = require('./clone');\n\nvar trivial = require('./filters/trivial');\nvar nested = require('./filters/nested');\nvar arrays = require('./filters/arrays');\nvar dates = require('./filters/dates');\nvar texts = require('./filters/texts');\n\nvar DiffPatcher = function DiffPatcher(options) {\n  this.processor = new Processor(options);\n  this.processor.pipe(new Pipe('diff').append(\n    nested.collectChildrenDiffFilter,\n    trivial.diffFilter,\n    dates.diffFilter,\n    texts.diffFilter,\n    nested.objectsDiffFilter,\n    arrays.diffFilter\n  ).shouldHaveResult());\n  this.processor.pipe(new Pipe('patch').append(\n    nested.collectChildrenPatchFilter,\n    arrays.collectChildrenPatchFilter,\n    trivial.patchFilter,\n    texts.patchFilter,\n    nested.patchFilter,\n    arrays.patchFilter\n  ).shouldHaveResult());\n  this.processor.pipe(new Pipe('reverse').append(\n    nested.collectChildrenReverseFilter,\n    arrays.collectChildrenReverseFilter,\n    trivial.reverseFilter,\n    texts.reverseFilter,\n    nested.reverseFilter,\n    arrays.reverseFilter\n  ).shouldHaveResult());\n};\n\nDiffPatcher.prototype.options = function() {\n  return this.processor.options.apply(this.processor, arguments);\n};\n\nDiffPatcher.prototype.diff = function(left, right) {\n  return this.processor.process(new DiffContext(left, right));\n};\n\nDiffPatcher.prototype.patch = function(left, delta) {\n  return this.processor.process(new PatchContext(left, delta));\n};\n\nDiffPatcher.prototype.reverse = function(delta) {\n  return this.processor.process(new ReverseContext(delta));\n};\n\nDiffPatcher.prototype.unpatch = function(right, delta) {\n  return this.patch(right, this.reverse(delta));\n};\n\nDiffPatcher.prototype.clone = function(value) {\n  return clone(value);\n};\n\nexports.DiffPatcher = DiffPatcher;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/diffpatcher.js\n ** module id = 32\n ** module chunks = 0\n **/","\nvar Processor = function Processor(options){\n  this.selfOptions = options || {};\n  this.pipes = {};\n};\n\nProcessor.prototype.options = function(options) {\n  if (options) {\n    this.selfOptions = options;\n  }\n  return this.selfOptions;\n};\n\nProcessor.prototype.pipe = function(name, pipe) {\n  if (typeof name === 'string') {\n    if (typeof pipe === 'undefined') {\n      return this.pipes[name];\n    } else {\n      this.pipes[name] = pipe;\n    }\n  }\n  if (name && name.name) {\n    pipe = name;\n    if (pipe.processor === this) { return pipe; }\n    this.pipes[pipe.name] = pipe;\n  }\n  pipe.processor = this;\n  return pipe;\n};\n\nProcessor.prototype.process = function(input, pipe) {\n  var context = input;\n  context.options = this.options();\n  var nextPipe = pipe || input.pipe || 'default';\n  var lastPipe, lastContext;\n  while (nextPipe) {\n    if (typeof context.nextAfterChildren !== 'undefined') {\n      // children processed and coming back to parent\n      context.next = context.nextAfterChildren;\n      context.nextAfterChildren = null;\n    }\n\n    if (typeof nextPipe === 'string') {\n      nextPipe = this.pipe(nextPipe);\n    }\n    nextPipe.process(context);\n    lastContext = context;\n    lastPipe = nextPipe;\n    nextPipe = null;\n    if (context) {\n      if (context.next) {\n        context = context.next;\n        nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n      }\n    }\n  }\n  return context.hasResult ? context.result : undefined;\n};\n\nexports.Processor = Processor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/processor.js\n ** module id = 33\n ** module chunks = 0\n **/","var Pipe = function Pipe(name) {\n  this.name = name;\n  this.filters = [];\n};\n\nPipe.prototype.process = function(input) {\n  if (!this.processor) {\n    throw new Error('add this pipe to a processor before using it');\n  }\n  var debug = this.debug;\n  var length = this.filters.length;\n  var context = input;\n  for (var index = 0; index < length; index++) {\n    var filter = this.filters[index];\n    if (debug) {\n      this.log('filter: ' + filter.filterName);\n    }\n    filter(context);\n    if (typeof context === 'object' && context.exiting) {\n      context.exiting = false;\n      break;\n    }\n  }\n  if (!context.next && this.resultCheck) {\n    this.resultCheck(context);\n  }\n};\n\nPipe.prototype.log = function(msg) {\n  console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n};\n\nPipe.prototype.append = function() {\n  this.filters.push.apply(this.filters, arguments);\n  return this;\n};\n\nPipe.prototype.prepend = function() {\n  this.filters.unshift.apply(this.filters, arguments);\n  return this;\n};\n\nPipe.prototype.indexOf = function(filterName) {\n  if (!filterName) {\n    throw new Error('a filter name is required');\n  }\n  for (var index = 0; index < this.filters.length; index++) {\n    var filter = this.filters[index];\n    if (filter.filterName === filterName) {\n      return index;\n    }\n  }\n  throw new Error('filter not found: ' + filterName);\n};\n\nPipe.prototype.list = function() {\n  var names = [];\n  for (var index = 0; index < this.filters.length; index++) {\n    var filter = this.filters[index];\n    names.push(filter.filterName);\n  }\n  return names;\n};\n\nPipe.prototype.after = function(filterName) {\n  var index = this.indexOf(filterName);\n  var params = Array.prototype.slice.call(arguments, 1);\n  if (!params.length) {\n    throw new Error('a filter is required');\n  }\n  params.unshift(index + 1, 0);\n  Array.prototype.splice.apply(this.filters, params);\n  return this;\n};\n\nPipe.prototype.before = function(filterName) {\n  var index = this.indexOf(filterName);\n  var params = Array.prototype.slice.call(arguments, 1);\n  if (!params.length) {\n    throw new Error('a filter is required');\n  }\n  params.unshift(index, 0);\n  Array.prototype.splice.apply(this.filters, params);\n  return this;\n};\n\nPipe.prototype.clear = function() {\n  this.filters.length = 0;\n  return this;\n};\n\nPipe.prototype.shouldHaveResult = function(should) {\n  if (should === false) {\n    this.resultCheck = null;\n    return;\n  }\n  if (this.resultCheck) {\n    return;\n  }\n  var pipe = this;\n  this.resultCheck = function(context) {\n    if (!context.hasResult) {\n      console.log(context);\n      var error = new Error(pipe.name + ' failed');\n      error.noResult = true;\n      throw error;\n    }\n  };\n  return this;\n};\n\nexports.Pipe = Pipe;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/pipe.js\n ** module id = 34\n ** module chunks = 0\n **/","var Context = require('./context').Context;\nvar defaultClone = require('../clone');\n\nvar DiffContext = function DiffContext(left, right) {\n  this.left = left;\n  this.right = right;\n  this.pipe = 'diff';\n};\n\nDiffContext.prototype = new Context();\n\nDiffContext.prototype.setResult = function(result) {\n  if (this.options.cloneDiffValues && typeof result === 'object') {\n    var clone = typeof this.options.cloneDiffValues === 'function' ?\n      this.options.cloneDiffValues : defaultClone;\n    if (typeof result[0] === 'object') {\n      result[0] = clone(result[0]);\n    }\n    if (typeof result[1] === 'object') {\n      result[1] = clone(result[1]);\n    }\n  }\n  return Context.prototype.setResult.apply(this, arguments);\n};\n\nexports.DiffContext = DiffContext;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/contexts/diff.js\n ** module id = 35\n ** module chunks = 0\n **/","\nvar Pipe = require('../pipe').Pipe;\n\nvar Context = function Context(){\n};\n\nContext.prototype.setResult = function(result) {\n\tthis.result = result;\n\tthis.hasResult = true;\n\treturn this;\n};\n\nContext.prototype.exit = function() {\n\tthis.exiting = true;\n\treturn this;\n};\n\nContext.prototype.switchTo = function(next, pipe) {\n\tif (typeof next === 'string' || next instanceof Pipe) {\n\t\tthis.nextPipe = next;\n\t} else {\n\t\tthis.next = next;\n\t\tif (pipe) {\n\t\t\tthis.nextPipe = pipe;\n\t\t}\n\t}\n\treturn this;\n};\n\nContext.prototype.push = function(child, name) {\n\tchild.parent = this;\n\tif (typeof name !== 'undefined') {\n\t\tchild.childName = name;\n\t}\n\tchild.root = this.root || this;\n\tchild.options = child.options || this.options;\n\tif (!this.children) {\n\t\tthis.children = [child];\n\t\tthis.nextAfterChildren = this.next || null;\n\t\tthis.next = child;\n\t} else {\n\t\tthis.children[this.children.length - 1].next = child;\n\t\tthis.children.push(child);\n\t}\n\tchild.next = this;\n\treturn this;\n};\n\nexports.Context = Context;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/contexts/context.js\n ** module id = 36\n ** module chunks = 0\n **/","\nvar isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nfunction cloneRegExp(re) {\n  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nfunction clone(arg) {\n  if (typeof arg !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  var cloned = {};\n  for (var name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n\nmodule.exports = clone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/clone.js\n ** module id = 37\n ** module chunks = 0\n **/","var Context = require('./context').Context;\n\nvar PatchContext = function PatchContext(left, delta) {\n  this.left = left;\n  this.delta = delta;\n  this.pipe = 'patch';\n};\n\nPatchContext.prototype = new Context();\n\nexports.PatchContext = PatchContext;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/contexts/patch.js\n ** module id = 38\n ** module chunks = 0\n **/","var Context = require('./context').Context;\n\nvar ReverseContext = function ReverseContext(delta) {\n  this.delta = delta;\n  this.pipe = 'reverse';\n};\n\nReverseContext.prototype = new Context();\n\nexports.ReverseContext = ReverseContext;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/contexts/reverse.js\n ** module id = 39\n ** module chunks = 0\n **/","var isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : typeof context.left;\n  context.rightType = context.right === null ? 'null' : typeof context.right;\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context.setResult([context.left.toString(), context.right.toString()]).exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n      return;\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n    return;\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.reverseFilter = reverseFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/trivial.js\n ** module id = 40\n ** module chunks = 0\n **/","var DiffContext = require('../contexts/diff').DiffContext;\nvar PatchContext = require('../contexts/patch').PatchContext;\nvar ReverseContext = require('../contexts/reverse').ReverseContext;\n\nvar collectChildrenDiffFilter = function collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n};\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nvar objectsDiffFilter = function objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name, child, propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n};\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'objects';\n\nvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\nexports.collectChildrenDiffFilter = collectChildrenDiffFilter;\nexports.objectsDiffFilter = objectsDiffFilter;\nexports.patchFilter = patchFilter;\nexports.collectChildrenPatchFilter = collectChildrenPatchFilter;\nexports.reverseFilter = reverseFilter;\nexports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/nested.js\n ** module id = 41\n ** module chunks = 0\n **/","var DiffContext = require('../contexts/diff').DiffContext;\nvar PatchContext = require('../contexts/patch').PatchContext;\nvar ReverseContext = require('../contexts/reverse').ReverseContext;\n\nvar lcs = require('./lcs');\n\nvar ARRAY_MOVE = 3;\n\nvar isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ?\n  function(array, item) {\n    return array.indexOf(item);\n  } : function(array, item) {\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n      if (array[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if (typeof value1 !== 'object' || typeof value2 !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1;\n  var hash2;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index;\n  var index1;\n  var index2;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash &&\n    typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 &&\n    matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 &&\n    matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(\n    trimmed1, trimmed2,\n    matchItems,\n    matchContext\n  );\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead,\n            index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n\n};\ndiffFilter.filterName = 'arrays';\n\nvar compare = {\n  numerically: function(a, b) {\n    return a - b;\n  },\n  numericallyBy: function(name) {\n    return function(a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index, index1;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices' +\n            ', invalid diff type: ' + delta[index][2]);\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter.filterName = 'arrays';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'arraysCollectChildren';\n\nvar reverseFilter = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name, child;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nvar collectChildrenReverseFilter = function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n};\ncollectChildrenReverseFilter.filterName = 'arraysCollectChildren';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.collectChildrenPatchFilter = collectChildrenPatchFilter;\nexports.reverseFilter = reverseFilter;\nexports.collectChildrenReverseFilter = collectChildrenReverseFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/arrays.js\n ** module id = 42\n ** module chunks = 0\n **/","/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x, y;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function(matrix, array1, array2, index1, index2, context) {\n  if (index1 === 0 || index2 === 0) {\n    return {\n      sequence: [],\n      indices1: [],\n      indices2: []\n    };\n  }\n\n  if (matrix.match(array1, array2, index1 - 1, index2 - 1, context)) {\n    var subsequence = backtrack(matrix, array1, array2, index1 - 1, index2 - 1, context);\n    subsequence.sequence.push(array1[index1 - 1]);\n    subsequence.indices1.push(index1 - 1);\n    subsequence.indices2.push(index2 - 1);\n    return subsequence;\n  }\n\n  if (matrix[index1][index2 - 1] > matrix[index1 - 1][index2]) {\n    return backtrack(matrix, array1, array2, index1, index2 - 1, context);\n  } else {\n    return backtrack(matrix, array1, array2, index1 - 1, index2, context);\n  }\n};\n\nvar get = function(array1, array2, match, context) {\n  context = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, context);\n  var result = backtrack(matrix, array1, array2, array1.length, array2.length, context);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nexports.get = get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/lcs.js\n ** module id = 43\n ** module chunks = 0\n **/","var diffFilter = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter.filterName = 'dates';\n\nexports.diffFilter = diffFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/dates.js\n ** module id = 44\n ** module chunks = 0\n **/","/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function(required) {\n  /*jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance;\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ?\n        new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (typeof require === 'function') {\n      try {\n        var dmpModuleName = 'diff_match_patch_uncompressed';\n        var dmp = require('../../public/external/' + dmpModuleName);\n        instance = new dmp.diff_match_patch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      var error = new Error('text diff_match_patch library not found');\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function(txt1, patch) {\n        var results = instance.patch_apply(instance.patch_fromText(patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var error = new Error('text patch failed');\n            error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = (context.options && context.options.textDiff &&\n    context.options.textDiff.minLength) || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength ||\n    context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  var diffMatchPatch = getDiffMatchPatch();\n  if (!diffMatchPatch) {\n    // diff-match-patch library not available, fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  var diff = diffMatchPatch.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter.filterName = 'texts';\n\nvar patchFilter = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter.filterName = 'texts';\n\nvar textDeltaReverse = function(delta) {\n  var i, l, lines, line, lineTmp, header = null,\n    headerRegex = /^@@ +\\-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/,\n    lineHeader, lineAdd, lineRemove;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n      lineAdd = null;\n      lineRemove = null;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lineAdd = i;\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lineRemove = i;\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter.filterName = 'texts';\n\nexports.diffFilter = diffFilter;\nexports.patchFilter = patchFilter;\nexports.reverseFilter = reverseFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/filters/texts.js\n ** module id = 45\n ** module chunks = 0\n **/","var map = {\n\t\"./diff_match_patch_uncompressed\": 47,\n\t\"./diff_match_patch_uncompressed.js\": 47\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/public/external ^\\.\\/.*$\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close does\n  // the contents have to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {!Array.<number|string>} */\ndiff_match_patch.Diff;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean=} opt_checklines Optional speedup flag. If present and false,\n *     then don't run a line-level diff first to identify the changed areas.\n *     Defaults to true, which does a faster, slightly less optimal diff.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n  longtext = shorttext = null;  // Garbage collect.\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = /** @type {string} */(a[0]);\n  text2 = /** @type {string} */(a[1]);\n  var linearray = /** @type {!Array.<string>} */(a[2]);\n\n  var diffs = this.diff_bisect_(text1, text2, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {!Array.<string|!Array.<string>>} Three element Array, containing the\n *     encoded text1, the encoded text2 and the array of unique strings.  The\n *     zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return [chars1, chars2, lineArray];\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;  // Always equal to equalities[equalitiesLength-1][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = /** @type {string} */(diffs[pointer][1]);\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality !== null && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = /** @type {string} */(diffs[pointer - 1][1]);\n      var insertion = /** @type {string} */(diffs[pointer][1]);\n      var overlap_length = this.diff_commonOverlap_(deletion, insertion);\n      if (overlap_length >= deletion.length / 2 ||\n          overlap_length >= insertion.length / 2) {\n        // Overlap found.  Insert an equality and trim the surrounding edits.\n        diffs.splice(pointer, 0,\n            [DIFF_EQUAL, insertion.substring(0, overlap_length)]);\n        diffs[pointer - 1][1] =\n            deletion.substring(0, deletion.length - overlap_length);\n        diffs[pointer + 1][1] = insertion.substring(overlap_length);\n        pointer++;\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  // Define some regex patterns for matching boundaries.\n  var punctuation = /[^a-zA-Z0-9]/;\n  var whitespace = /\\s/;\n  var linebreak = /[\\r\\n]/;\n  var blanklineEnd = /\\n\\r?\\n$/;\n  var blanklineStart = /^\\r?\\n\\r?\\n/;\n\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 5 (best) to 0 (worst).\n   * Closure, makes reference to regex patterns defined above.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 5;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var score = 0;\n    // One point for non-alphanumeric.\n    if (one.charAt(one.length - 1).match(punctuation) ||\n        two.charAt(0).match(punctuation)) {\n      score++;\n      // Two points for whitespace.\n      if (one.charAt(one.length - 1).match(whitespace) ||\n          two.charAt(0).match(whitespace)) {\n        score++;\n        // Three points for line breaks.\n        if (one.charAt(one.length - 1).match(linebreak) ||\n            two.charAt(0).match(linebreak)) {\n          score++;\n          // Four points for blank lines.\n          if (one.match(blanklineEnd) || two.match(blanklineStart)) {\n            score++;\n          }\n        }\n      }\n    }\n    return score;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = /** @type {string} */(diffs[pointer - 1][1]);\n      var edit = /** @type {string} */(diffs[pointer][1]);\n      var equality2 = /** @type {string} */(diffs[pointer + 1][1]);\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  var lastequality = '';  // Always equal to equalities[equalitiesLength-1][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = '';\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = '';\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var i = 0;\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n    if (op !== DIFF_DELETE) {\n      i += data.length;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 > patch_size) {\n      var bigpatch = patches[x];\n      // Remove the big old patch.\n      patches.splice(x--, 1);\n      var start1 = bigpatch.start1;\n      var start2 = bigpatch.start2;\n      var precontext = '';\n      while (bigpatch.diffs.length !== 0) {\n        // Create one of several smaller patches.\n        var patch = new diff_match_patch.patch_obj();\n        var empty = true;\n        patch.start1 = start1 - precontext.length;\n        patch.start2 = start2 - precontext.length;\n        if (precontext !== '') {\n          patch.length1 = patch.length2 = precontext.length;\n          patch.diffs.push([DIFF_EQUAL, precontext]);\n        }\n        while (bigpatch.diffs.length !== 0 &&\n               patch.length1 < patch_size - this.Patch_Margin) {\n          var diff_type = bigpatch.diffs[0][0];\n          var diff_text = bigpatch.diffs[0][1];\n          if (diff_type === DIFF_INSERT) {\n            // Insertions are harmless.\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n            patch.diffs.push(bigpatch.diffs.shift());\n            empty = false;\n          } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                     patch.diffs[0][0] == DIFF_EQUAL &&\n                     diff_text.length > 2 * patch_size) {\n            // This is a large deletion.  Let it pass in one chunk.\n            patch.length1 += diff_text.length;\n            start1 += diff_text.length;\n            empty = false;\n            patch.diffs.push([diff_type, diff_text]);\n            bigpatch.diffs.shift();\n          } else {\n            // Deletion or equality.  Only take as much as we can stomach.\n            diff_text = diff_text.substring(0,\n                patch_size - patch.length1 - this.Patch_Margin);\n            patch.length1 += diff_text.length;\n            start1 += diff_text.length;\n            if (diff_type === DIFF_EQUAL) {\n              patch.length2 += diff_text.length;\n              start2 += diff_text.length;\n            } else {\n              empty = false;\n            }\n            patch.diffs.push([diff_type, diff_text]);\n            if (diff_text == bigpatch.diffs[0][1]) {\n              bigpatch.diffs.shift();\n            } else {\n              bigpatch.diffs[0][1] =\n                  bigpatch.diffs[0][1].substring(diff_text.length);\n            }\n          }\n        }\n        // Compute the head context for the next patch.\n        precontext = this.diff_text2(patch.diffs);\n        precontext =\n            precontext.substring(precontext.length - this.Patch_Margin);\n        // Append the end context for this patch.\n        var postcontext = this.diff_text1(bigpatch.diffs)\n                              .substring(0, this.Patch_Margin);\n        if (postcontext !== '') {\n          patch.length1 += postcontext.length;\n          patch.length2 += postcontext.length;\n          if (patch.diffs.length !== 0 &&\n              patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n            patch.diffs[patch.diffs.length - 1][1] += postcontext;\n          } else {\n            patch.diffs.push([DIFF_EQUAL, postcontext]);\n          }\n        }\n        if (!empty) {\n          patches.splice(++x, 0, patch);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// Export these global variables so that they survive Google's JS compiler.\n// In a browser, 'this' will be 'window'.\n// In node.js 'this' will be a global object.\nthis['diff_match_patch'] = diff_match_patch;\nthis['DIFF_DELETE'] = DIFF_DELETE;\nthis['DIFF_INSERT'] = DIFF_INSERT;\nthis['DIFF_EQUAL'] = DIFF_EQUAL;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/public/external/diff_match_patch_uncompressed.js\n ** module id = 47\n ** module chunks = 0\n **/","// use as 2nd parameter for JSON.parse to revive Date instances\nmodule.exports = function dateReviver(key, value) {\n  var parts;\n  if (typeof value === 'string') {\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+\\-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/date-reviver.js\n ** module id = 48\n ** module chunks = 0\n **/","var map = {\n\t\"./clone\": 37,\n\t\"./clone.js\": 37,\n\t\"./contexts/context\": 36,\n\t\"./contexts/context.js\": 36,\n\t\"./contexts/diff\": 35,\n\t\"./contexts/diff.js\": 35,\n\t\"./contexts/patch\": 38,\n\t\"./contexts/patch.js\": 38,\n\t\"./contexts/reverse\": 39,\n\t\"./contexts/reverse.js\": 39,\n\t\"./date-reviver\": 48,\n\t\"./date-reviver.js\": 48,\n\t\"./diffpatcher\": 32,\n\t\"./diffpatcher.js\": 32,\n\t\"./environment\": 31,\n\t\"./environment.js\": 31,\n\t\"./filters/arrays\": 42,\n\t\"./filters/arrays.js\": 42,\n\t\"./filters/dates\": 44,\n\t\"./filters/dates.js\": 44,\n\t\"./filters/lcs\": 43,\n\t\"./filters/lcs.js\": 43,\n\t\"./filters/nested\": 41,\n\t\"./filters/nested.js\": 41,\n\t\"./filters/texts\": 45,\n\t\"./filters/texts.js\": 45,\n\t\"./filters/trivial\": 40,\n\t\"./filters/trivial.js\": 40,\n\t\"./formatters/annotated\": 50,\n\t\"./formatters/annotated.js\": 50,\n\t\"./formatters/base\": 51,\n\t\"./formatters/base.js\": 51,\n\t\"./formatters/console\": 52,\n\t\"./formatters/console.js\": 52,\n\t\"./formatters/html\": 60,\n\t\"./formatters/html.js\": 60,\n\t\"./formatters/index\": 61,\n\t\"./formatters/index.js\": 61,\n\t\"./formatters/jsonpatch\": 62,\n\t\"./formatters/jsonpatch.js\": 62,\n\t\"./main\": 30,\n\t\"./main-formatters\": 64,\n\t\"./main-formatters.js\": 64,\n\t\"./main-full\": 65,\n\t\"./main-full.js\": 65,\n\t\"./main.js\": 30,\n\t\"./pipe\": 34,\n\t\"./pipe.js\": 34,\n\t\"./processor\": 33,\n\t\"./processor.js\": 33\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src ^\\.\\/.*$\n ** module id = 49\n ** module chunks = 0\n **/","var base = require('./base');\nvar BaseFormatter = base.BaseFormatter;\n\nvar AnnotatedFormatter = function AnnotatedFormatter() {\n  this.includeMoveDestinations = false;\n};\n\nAnnotatedFormatter.prototype = new BaseFormatter();\n\nAnnotatedFormatter.prototype.prepareContext = function(context) {\n  BaseFormatter.prototype.prepareContext.call(this, context);\n  context.indent = function(levels) {\n    this.indentLevel = (this.indentLevel || 0) +\n      (typeof levels === 'undefined' ? 1 : levels);\n    this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n  };\n  context.row = function(json, htmlNote) {\n    context.out('<tr><td style=\"white-space: nowrap;\">' +\n      '<pre class=\"jsondiffpatch-annotated-indent\" style=\"display: inline-block\">');\n    context.out(context.indentPad);\n    context.out('</pre><pre style=\"display: inline-block\">');\n    context.out(json);\n    context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n    context.out(htmlNote);\n    context.out('</div></td></tr>');\n  };\n};\n\nAnnotatedFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n  context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n};\n\nAnnotatedFormatter.prototype.formatTextDiffString = function(context, value) {\n  var lines = this.parseTextDiff(value);\n  context.out('<ul class=\"jsondiffpatch-textdiff\">');\n  for (var i = 0, l = lines.length; i < l; i++) {\n    var line = lines[i];\n    context.out('<li>' +\n      '<div class=\"jsondiffpatch-textdiff-location\">' +\n      '<span class=\"jsondiffpatch-textdiff-line-number\">' +\n      line.location.line +\n      '</span>' +\n      '<span class=\"jsondiffpatch-textdiff-char\">' +\n      line.location.chr +\n      '</span>' +\n      '</div>' +\n      '<div class=\"jsondiffpatch-textdiff-line\">');\n    var pieces = line.pieces;\n    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n      var piece = pieces[pieceIndex];\n      context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' +\n        piece.text + '</span>');\n    }\n    context.out('</div></li>');\n  }\n  context.out('</ul>');\n};\n\nAnnotatedFormatter.prototype.rootBegin = function(context, type, nodeType) {\n  context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n  if (type === 'node') {\n    context.row('{');\n    context.indent();\n  }\n  if (nodeType === 'array') {\n    context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n  }\n};\n\nAnnotatedFormatter.prototype.rootEnd = function(context, type) {\n  if (type === 'node') {\n    context.indent(-1);\n    context.row('}');\n  }\n  context.out('</table>');\n};\n\nAnnotatedFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n  context.row('&quot;' + key + '&quot;: {');\n  if (type === 'node') {\n    context.indent();\n  }\n  if (nodeType === 'array') {\n    context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n  }\n};\n\nAnnotatedFormatter.prototype.nodeEnd = function(context, key, leftKey, type, nodeType, isLast) {\n  if (type === 'node') {\n    context.indent(-1);\n  }\n  context.row('}' + (isLast ? '' : ','));\n};\n\n/* jshint camelcase: false */\n\nAnnotatedFormatter.prototype.format_unchanged = function() {\n  return;\n};\n\nAnnotatedFormatter.prototype.format_movedestination = function() {\n  return;\n};\n\n\nAnnotatedFormatter.prototype.format_node = function(context, delta, left) {\n  // recurse\n  this.formatDeltaChildren(context, delta, left);\n};\n\nvar wrapPropertyName = function(name) {\n  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n};\n\nvar deltaAnnotations = {\n  added: function(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'new value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'insert at index ' + leftKey + formatLegend;\n    }\n    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  modified: function(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'modify value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'modify at index ' + leftKey + formatLegend;\n    }\n    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  deleted: function(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'delete value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'remove index ' + leftKey + formatLegend;\n    }\n    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  moved: function(delta, left, key, leftKey) {\n    return 'move from <span title=\"(position to remove at original state)\">index ' +\n      leftKey + '</span> to ' +\n      '<span title=\"(position to insert at final state)\">index ' +\n      delta[1] + '</span>';\n  },\n  textdiff: function(delta, left, key, leftKey) {\n    var location = (typeof leftKey === 'undefined') ?\n      '' : (\n        (typeof leftKey === 'number') ?\n        ' at index ' + leftKey :\n        ' at property ' + wrapPropertyName(leftKey)\n      );\n    return 'text diff' + location + ', format is ' +\n      '<a href=\"https://code.google.com/p/google-diff-match-patch/wiki/Unidiff\">' +\n      'a variation of Unidiff</a>';\n  }\n};\n\nvar formatAnyChange = function(context, delta) {\n  var deltaType = this.getDeltaType(delta);\n  var annotator = deltaAnnotations[deltaType];\n  var htmlNote = annotator && annotator.apply(annotator,\n    Array.prototype.slice.call(arguments, 1));\n  var json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\n\n/* jshint camelcase: true */\n\nexports.AnnotatedFormatter = AnnotatedFormatter;\n\nvar defaultInstance;\n\nexports.format = function(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new AnnotatedFormatter();\n  }\n  return defaultInstance.format(delta, left);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/annotated.js\n ** module id = 50\n ** module chunks = 0\n **/","var isArray = (typeof Array.isArray === 'function') ?\n  // use native function\n  Array.isArray :\n  // use instanceof operator\n  function(a) {\n    return a instanceof Array;\n  };\n\nvar getObjectKeys = typeof Object.keys === 'function' ?\n  function(obj) {\n    return Object.keys(obj);\n  } : function(obj) {\n    var names = [];\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        names.push(property);\n      }\n    }\n    return names;\n  };\n\nvar trimUnderscore = function(str) {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nvar arrayKeyToSortNumber = function(key) {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nvar arrayKeyComparer = function(key1, key2) {\n  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n};\n\nvar BaseFormatter = function BaseFormatter() {};\n\nBaseFormatter.prototype.format = function(delta, left) {\n  var context = {};\n  this.prepareContext(context);\n  this.recurse(context, delta, left);\n  return this.finalize(context);\n};\n\nBaseFormatter.prototype.prepareContext = function(context) {\n  context.buffer = [];\n  context.out = function() {\n    this.buffer.push.apply(this.buffer, arguments);\n  };\n};\n\nBaseFormatter.prototype.typeFormattterNotFound = function(context, deltaType) {\n  throw new Error('cannot format delta type: ' + deltaType);\n};\n\nBaseFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n  return err.toString();\n};\n\nBaseFormatter.prototype.finalize = function(context) {\n  if (isArray(context.buffer)) {\n    return context.buffer.join('');\n  }\n};\n\nBaseFormatter.prototype.recurse = function(context, delta, left, key, leftKey, movedFrom, isLast) {\n\n  var useMoveOriginHere = delta && movedFrom;\n  var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n  if (typeof delta === 'undefined' && typeof key === 'undefined') {\n    return undefined;\n  }\n\n  var type = this.getDeltaType(delta, movedFrom);\n  var nodeType = type === 'node' ? (delta._t === 'a' ? 'array' : 'object') : '';\n\n  if (typeof key !== 'undefined') {\n    this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n  } else {\n    this.rootBegin(context, type, nodeType);\n  }\n\n  var typeFormattter;\n  try {\n    typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n    typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n  } catch (err) {\n    this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n    if (typeof console !== 'undefined' && console.error) {\n      console.error(err.stack);\n    }\n  }\n\n  if (typeof key !== 'undefined') {\n    this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n  } else {\n    this.rootEnd(context, type, nodeType);\n  }\n};\n\nBaseFormatter.prototype.formatDeltaChildren = function(context, delta, left) {\n  var self = this;\n  this.forEachDeltaKey(delta, left, function(key, leftKey, movedFrom, isLast) {\n    self.recurse(context, delta[key], left ? left[leftKey] : undefined,\n      key, leftKey, movedFrom, isLast);\n  });\n};\n\nBaseFormatter.prototype.forEachDeltaKey = function(delta, left, fn) {\n  var keys = getObjectKeys(delta);\n  var arrayKeys = delta._t === 'a';\n  var moveDestinations = {};\n  var name;\n  if (typeof left !== 'undefined') {\n    for (name in left) {\n      if (Object.prototype.hasOwnProperty.call(left, name)) {\n        if (typeof delta[name] === 'undefined' &&\n          ((!arrayKeys) || typeof delta['_' + name] === 'undefined')) {\n          keys.push(name);\n        }\n      }\n    }\n  }\n  // look for move destinations\n  for (name in delta) {\n    if (Object.prototype.hasOwnProperty.call(delta, name)) {\n      var value = delta[name];\n      if (isArray(value) && value[2] === 3) {\n        moveDestinations[value[1].toString()] = {\n          key: name,\n          value: left && left[parseInt(name.substr(1))]\n        };\n        if (this.includeMoveDestinations !== false) {\n          if ((typeof left === 'undefined') &&\n            (typeof delta[value[1]] === 'undefined')) {\n            keys.push(value[1].toString());\n          }\n        }\n      }\n    }\n  }\n  if (arrayKeys) {\n    keys.sort(arrayKeyComparer);\n  } else {\n    keys.sort();\n  }\n  for (var index = 0, length = keys.length; index < length; index++) {\n    var key = keys[index];\n    if (arrayKeys && key === '_t') {\n      continue;\n    }\n    var leftKey = arrayKeys ?\n      (typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10)) :\n      key;\n    var isLast = (index === length - 1);\n    fn(key, leftKey, moveDestinations[leftKey], isLast);\n  }\n};\n\nBaseFormatter.prototype.getDeltaType = function(delta, movedFrom) {\n  if (typeof delta === 'undefined') {\n    if (typeof movedFrom !== 'undefined') {\n      return 'movedestination';\n    }\n    return 'unchanged';\n  }\n  if (isArray(delta)) {\n    if (delta.length === 1) {\n      return 'added';\n    }\n    if (delta.length === 2) {\n      return 'modified';\n    }\n    if (delta.length === 3 && delta[2] === 0) {\n      return 'deleted';\n    }\n    if (delta.length === 3 && delta[2] === 2) {\n      return 'textdiff';\n    }\n    if (delta.length === 3 && delta[2] === 3) {\n      return 'moved';\n    }\n  } else if (typeof delta === 'object') {\n    return 'node';\n  }\n  return 'unknown';\n};\n\nBaseFormatter.prototype.parseTextDiff = function(value) {\n  var output = [];\n  var lines = value.split('\\n@@ ');\n  for (var i = 0, l = lines.length; i < l; i++) {\n    var line = lines[i];\n    var lineOutput = {\n      pieces: []\n    };\n    var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n    lineOutput.location = {\n      line: location[0],\n      chr: location[1]\n    };\n    var pieces = line.split('\\n').slice(1);\n    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n      var piece = pieces[pieceIndex];\n      if (!piece.length) {\n        continue;\n      }\n      var pieceOutput = {\n        type: 'context'\n      };\n      if (piece.substr(0, 1) === '+') {\n        pieceOutput.type = 'added';\n      } else if (piece.substr(0, 1) === '-') {\n        pieceOutput.type = 'deleted';\n      }\n      pieceOutput.text = piece.slice(1);\n      lineOutput.pieces.push(pieceOutput);\n    }\n    output.push(lineOutput);\n  }\n  return output;\n};\n\nexports.BaseFormatter = BaseFormatter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/base.js\n ** module id = 51\n ** module chunks = 0\n **/","var chalk = require('chalk');\nvar base = require('./base');\nvar BaseFormatter = base.BaseFormatter;\n\nvar colors = {\n  added: chalk.green,\n  deleted: chalk.red,\n  movedestination: chalk.gray,\n  moved: chalk.yellow,\n  unchanged: chalk.gray,\n  error: chalk.white.bgRed,\n  textDiffLine: chalk.gray\n};\n\nvar ConsoleFormatter = function ConsoleFormatter() {\n  this.includeMoveDestinations = false;\n};\n\nConsoleFormatter.prototype = new BaseFormatter();\n\nConsoleFormatter.prototype.prepareContext = function(context) {\n  BaseFormatter.prototype.prepareContext.call(this, context);\n  context.indent = function(levels) {\n    this.indentLevel = (this.indentLevel || 0) +\n      (typeof levels === 'undefined' ? 1 : levels);\n    this.indentPad = new Array(this.indentLevel + 1).join('  ');\n    this.outLine();\n  };\n  context.outLine = function() {\n    this.buffer.push('\\n' + (this.indentPad || ''));\n  };\n  context.out = function() {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      var lines = arguments[i].split('\\n');\n      var text = lines.join('\\n' + (this.indentPad || ''));\n      if (this.color && this.color[0]) {\n        text = this.color[0](text);\n      }\n      this.buffer.push(text);\n    }\n  };\n  context.pushColor = function(color) {\n    this.color = this.color || [];\n    this.color.unshift(color);\n  };\n  context.popColor = function() {\n    this.color = this.color || [];\n    this.color.shift();\n  };\n};\n\nConsoleFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n  context.pushColor(colors.error);\n  context.out('[ERROR]' + err);\n  context.popColor();\n};\n\nConsoleFormatter.prototype.formatValue = function(context, value) {\n  context.out(JSON.stringify(value, null, 2));\n};\n\nConsoleFormatter.prototype.formatTextDiffString = function(context, value) {\n  var lines = this.parseTextDiff(value);\n  context.indent();\n  for (var i = 0, l = lines.length; i < l; i++) {\n    var line = lines[i];\n    context.pushColor(colors.textDiffLine);\n    context.out(line.location.line + ',' + line.location.chr + ' ');\n    context.popColor();\n    var pieces = line.pieces;\n    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n      var piece = pieces[pieceIndex];\n      context.pushColor(colors[piece.type]);\n      context.out(piece.text);\n      context.popColor();\n    }\n    if (i < l - 1) {\n      context.outLine();\n    }\n  }\n  context.indent(-1);\n};\n\nConsoleFormatter.prototype.rootBegin = function(context, type, nodeType) {\n  context.pushColor(colors[type]);\n  if (type === 'node') {\n    context.out(nodeType === 'array' ? '[' : '{');\n    context.indent();\n  }\n};\n\nConsoleFormatter.prototype.rootEnd = function(context, type, nodeType) {\n  if (type === 'node') {\n    context.indent(-1);\n    context.out(nodeType === 'array' ? ']' : '}');\n  }\n  context.popColor();\n};\n\nConsoleFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n  context.pushColor(colors[type]);\n  context.out(leftKey + ': ');\n  if (type === 'node') {\n    context.out(nodeType === 'array' ? '[' : '{');\n    context.indent();\n  }\n};\n\nConsoleFormatter.prototype.nodeEnd = function(context, key, leftKey, type, nodeType, isLast) {\n  if (type === 'node') {\n    context.indent(-1);\n    context.out(nodeType === 'array' ? ']' : '}' +\n      (isLast ? '' : ','));\n  }\n  if (!isLast) {\n    context.outLine();\n  }\n  context.popColor();\n};\n\n/* jshint camelcase: false */\n\nConsoleFormatter.prototype.format_unchanged = function(context, delta, left) {\n  if (typeof left === 'undefined') {\n    return;\n  }\n  this.formatValue(context, left);\n};\n\nConsoleFormatter.prototype.format_movedestination = function(context, delta, left) {\n  if (typeof left === 'undefined') {\n    return;\n  }\n  this.formatValue(context, left);\n};\n\nConsoleFormatter.prototype.format_node = function(context, delta, left) {\n  // recurse\n  this.formatDeltaChildren(context, delta, left);\n};\n\nConsoleFormatter.prototype.format_added = function(context, delta) {\n  this.formatValue(context, delta[0]);\n};\n\nConsoleFormatter.prototype.format_modified = function(context, delta) {\n  context.pushColor(colors.deleted);\n  this.formatValue(context, delta[0]);\n  context.popColor();\n  context.out(' => ');\n  context.pushColor(colors.added);\n  this.formatValue(context, delta[1]);\n  context.popColor();\n};\n\nConsoleFormatter.prototype.format_deleted = function(context, delta) {\n  this.formatValue(context, delta[0]);\n};\n\nConsoleFormatter.prototype.format_moved = function(context, delta) {\n  context.out('==> ' + delta[1]);\n};\n\nConsoleFormatter.prototype.format_textdiff = function(context, delta) {\n  this.formatTextDiffString(context, delta[0]);\n};\n\n/* jshint camelcase: true */\n\nexports.ConsoleFormatter = ConsoleFormatter;\n\nvar defaultInstance;\n\nvar format = function(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new ConsoleFormatter();\n  }\n  return defaultInstance.format(delta, left);\n};\n\nexports.log = function(delta, left) {\n  console.log(format(delta, left));\n};\n\nexports.format = format;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/console.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar chalk = module.exports;\n\nfunction build(_styles) {\n\tvar builder = function builder() {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\tbuilder._styles = _styles;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\tbuilder.__proto__ = proto;\n\treturn builder;\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tansiStyles.grey = ansiStyles.gray;\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build(this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!chalk.enabled || !str) {\n\t\treturn str;\n\t}\n\n\t/*jshint validthis: true*/\n\tvar nestedStyles = this._styles;\n\n\tfor (var i = 0; i < nestedStyles.length; i++) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build([name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(chalk, init());\n\nchalk.styles = ansiStyles;\nchalk.hasColor = hasAnsi;\nchalk.stripColor = stripAnsi;\nchalk.supportsColor = supportsColor;\n\n// detect mode if not set manually\nif (chalk.enabled === undefined) {\n\tchalk.enabled = chalk.supportsColor;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chalk/index.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/escape-string-regexp/index.js\n ** module id = 54\n ** module chunks = 0\n **/","'use strict';\nvar styles = module.exports;\n\nvar codes = {\n\treset: [0, 0],\n\n\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\tdim: [2, 22],\n\titalic: [3, 23],\n\tunderline: [4, 24],\n\tinverse: [7, 27],\n\thidden: [8, 28],\n\tstrikethrough: [9, 29],\n\n\tblack: [30, 39],\n\tred: [31, 39],\n\tgreen: [32, 39],\n\tyellow: [33, 39],\n\tblue: [34, 39],\n\tmagenta: [35, 39],\n\tcyan: [36, 39],\n\twhite: [37, 39],\n\tgray: [90, 39],\n\n\tbgBlack: [40, 49],\n\tbgRed: [41, 49],\n\tbgGreen: [42, 49],\n\tbgYellow: [43, 49],\n\tbgBlue: [44, 49],\n\tbgMagenta: [45, 49],\n\tbgCyan: [46, 49],\n\tbgWhite: [47, 49]\n};\n\nObject.keys(codes).forEach(function (key) {\n\tvar val = codes[key];\n\tvar style = styles[key] = {};\n\tstyle.open = '\\u001b[' + val[0] + 'm';\n\tstyle.close = '\\u001b[' + val[1] + 'm';\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-styles/index.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/strip-ansi/index.js\n ** module id = 56\n ** module chunks = 0\n **/","'use strict';\nmodule.exports = function () {\n\treturn /\\u001b\\[(?:[0-9]{1,3}(?:;[0-9]{1,3})*)?[m|K]/g;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ansi-regex/index.js\n ** module id = 57\n ** module chunks = 0\n **/","'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/has-ansi/index.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\nmodule.exports = (function () {\n\tif (process.argv.indexOf('--no-color') !== -1) {\n\t\treturn false;\n\t}\n\n\tif (process.argv.indexOf('--color') !== -1) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/supports-color/index.js\n ** module id = 59\n ** module chunks = 0\n **/","var base = require('./base');\nvar BaseFormatter = base.BaseFormatter;\n\nvar HtmlFormatter = function HtmlFormatter() {};\n\nHtmlFormatter.prototype = new BaseFormatter();\n\nfunction htmlEscape(text) {\n  var html = text;\n  var replacements = [\n    [/&/g, '&amp;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n    [/'/g, '&apos;'],\n    [/\"/g, '&quot;']\n  ];\n  for (var i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nHtmlFormatter.prototype.typeFormattterErrorFormatter = function(context, err) {\n  context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n};\n\nHtmlFormatter.prototype.formatValue = function(context, value) {\n  context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n};\n\nHtmlFormatter.prototype.formatTextDiffString = function(context, value) {\n  var lines = this.parseTextDiff(value);\n  context.out('<ul class=\"jsondiffpatch-textdiff\">');\n  for (var i = 0, l = lines.length; i < l; i++) {\n    var line = lines[i];\n    context.out('<li>' +\n      '<div class=\"jsondiffpatch-textdiff-location\">' +\n      '<span class=\"jsondiffpatch-textdiff-line-number\">' +\n      line.location.line +\n      '</span>' +\n      '<span class=\"jsondiffpatch-textdiff-char\">' +\n      line.location.chr +\n      '</span>' +\n      '</div>' +\n      '<div class=\"jsondiffpatch-textdiff-line\">');\n    var pieces = line.pieces;\n    for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n      /* global unescape */\n      var piece = pieces[pieceIndex];\n      context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' +\n        htmlEscape(unescape(piece.text)) + '</span>');\n    }\n    context.out('</div></li>');\n  }\n  context.out('</ul>');\n};\n\nvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(node) {\n  node = node || document;\n  var getElementText = function(el) {\n    return el.textContent || el.innerText;\n  };\n  var eachByQuery = function(el, query, fn) {\n    var elems = el.querySelectorAll(query);\n    for (var i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  var eachChildren = function(el, fn) {\n    for (var i = 0, l = el.children.length; i < l; i++) {\n      fn(el.children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', function(arrow) {\n    var arrowParent = arrow.parentNode;\n    var svg = arrow.children[0],\n      path = svg.children[1];\n    svg.style.display = 'none';\n    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    var container = arrowParent.parentNode;\n    var destinationElem;\n    eachChildren(container, function(child) {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', Math.abs(distance) + 6);\n      arrow.style.top = (-8 + (distance > 0 ? 0 : distance)) + 'px';\n      var curve = distance > 0 ?\n        'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) :\n        'M30,' + (-distance) + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {\n      return;\n    }\n  });\n};\n\nHtmlFormatter.prototype.rootBegin = function(context, type, nodeType) {\n  var nodeClass = 'jsondiffpatch-' + type +\n    (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n  context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n};\n\nHtmlFormatter.prototype.rootEnd = function(context) {\n  context.out('</div>' + (context.hasArrows ?\n    ('<script type=\"text/javascript\">setTimeout(' +\n      adjustArrows.toString() +\n      ',10);</script>') : ''));\n};\n\nHtmlFormatter.prototype.nodeBegin = function(context, key, leftKey, type, nodeType) {\n  var nodeClass = 'jsondiffpatch-' + type +\n    (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n  context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' +\n    '<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>');\n};\n\n\nHtmlFormatter.prototype.nodeEnd = function(context) {\n  context.out('</li>');\n};\n\n/* jshint camelcase: false */\n\nHtmlFormatter.prototype.format_unchanged = function(context, delta, left) {\n  if (typeof left === 'undefined') {\n    return;\n  }\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatValue(context, left);\n  context.out('</div>');\n};\n\nHtmlFormatter.prototype.format_movedestination = function(context, delta, left) {\n  if (typeof left === 'undefined') {\n    return;\n  }\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatValue(context, left);\n  context.out('</div>');\n};\n\nHtmlFormatter.prototype.format_node = function(context, delta, left) {\n  // recurse\n  var nodeType = (delta._t === 'a') ? 'array' : 'object';\n  context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n  this.formatDeltaChildren(context, delta, left);\n  context.out('</ul>');\n};\n\nHtmlFormatter.prototype.format_added = function(context, delta) {\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatValue(context, delta[0]);\n  context.out('</div>');\n};\n\nHtmlFormatter.prototype.format_modified = function(context, delta) {\n  context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n  this.formatValue(context, delta[0]);\n  context.out('</div>' +\n    '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n  this.formatValue(context, delta[1]);\n  context.out('</div>');\n};\n\nHtmlFormatter.prototype.format_deleted = function(context, delta) {\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatValue(context, delta[0]);\n  context.out('</div>');\n};\n\nHtmlFormatter.prototype.format_moved = function(context, delta) {\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatValue(context, delta[0]);\n  context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\n  // draw an SVG arrow from here to move destination\n  context.out(\n    /*jshint multistr: true */\n    '<div class=\"jsondiffpatch-arrow\" style=\"position: relative; left: -34px;\">\\\n        <svg width=\"30\" height=\"60\" style=\"position: absolute; display: none;\">\\\n        <defs>\\\n            <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\" refx=\"2\" refy=\"4\"\\\n                   orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\\n                <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\\n            </marker>\\\n        </defs>\\\n        <path d=\"M30,0 Q-10,25 26,50\" style=\"stroke: #88f; stroke-width: 2px; fill: none;\\\n        stroke-opacity: 0.5; marker-end: url(#markerArrow);\"></path>\\\n        </svg>\\\n        </div>');\n  context.hasArrows = true;\n};\n\nHtmlFormatter.prototype.format_textdiff = function(context, delta) {\n  context.out('<div class=\"jsondiffpatch-value\">');\n  this.formatTextDiffString(context, delta[0]);\n  context.out('</div>');\n};\n\n/* jshint camelcase: true */\n\nvar showUnchanged = function(show, node, delay) {\n  var el = node || document.body;\n  var prefix = 'jsondiffpatch-unchanged-';\n  var classes = {\n    showing: prefix + 'showing',\n    hiding: prefix + 'hiding',\n    visible: prefix + 'visible',\n    hidden: prefix + 'hidden',\n  };\n  var list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(function() {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  var intervalId = setInterval(function() {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(function() {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(function() {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nvar hideUnchanged = function(node, delay) {\n  return showUnchanged(false, node, delay);\n};\n\nexports.HtmlFormatter = HtmlFormatter;\n\nexports.showUnchanged = showUnchanged;\n\nexports.hideUnchanged = hideUnchanged;\n\nvar defaultInstance;\n\nexports.format = function(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/html.js\n ** module id = 60\n ** module chunks = 0\n **/","var environment = require('../environment');\n\nexports.base = require('./base');\nexports.html = require('./html');\nexports.annotated = require('./annotated');\nexports.jsonpatch = require('./jsonpatch');\n\nif (!environment.isBrowser) {\n  var consoleModuleName = './console';\n  exports.console = require(consoleModuleName);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/index.js\n ** module id = 61\n ** module chunks = 0\n **/","(function () {\n  var base = require('./base');\n  var BaseFormatter = base.BaseFormatter;\n\n  var named = {\n    added: 'add',\n    deleted: 'remove',\n    modified: 'replace',\n    moved: 'moved',\n    movedestination: 'movedestination',\n    unchanged: 'unchanged',\n    error: 'error',\n    textDiffLine: 'textDiffLine'\n  };\n\n  function JSONFormatter() {\n    this.includeMoveDestinations = false;\n  }\n\n  JSONFormatter.prototype = new BaseFormatter();\n\n  JSONFormatter.prototype.prepareContext = function (context) {\n    BaseFormatter.prototype.prepareContext.call(this, context);\n    context.result = [];\n    context.path = [];\n    context.pushCurrentOp = function (op, value) {\n      var val = {\n        op: op,\n        path: this.currentPath()\n      };\n      if (typeof value !== 'undefined') {\n        val.value = value;\n      }\n      this.result.push(val);\n    };\n\n    context.currentPath = function () {\n      return '/' + this.path.join('/');\n    };\n  };\n\n  JSONFormatter.prototype.typeFormattterErrorFormatter = function (context, err) {\n    context.out('[ERROR]' + err);\n  };\n\n  JSONFormatter.prototype.rootBegin = function () {\n  };\n\n  JSONFormatter.prototype.rootEnd = function () {\n  };\n\n  JSONFormatter.prototype.nodeBegin = function (context, key, leftKey) {\n    context.path.push(leftKey);\n  };\n\n  JSONFormatter.prototype.nodeEnd = function (context) {\n    context.path.pop();\n  };\n\n  /* jshint camelcase: false */\n\n  JSONFormatter.prototype.format_unchanged = function (context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.pushCurrentOp(named.unchanged, left);\n  };\n\n  JSONFormatter.prototype.format_movedestination = function (context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.pushCurrentOp(named.movedestination, left);\n  };\n\n  JSONFormatter.prototype.format_node = function (context, delta, left) {\n    this.formatDeltaChildren(context, delta, left);\n  };\n\n  JSONFormatter.prototype.format_added = function (context, delta) {\n    context.pushCurrentOp(named.added, delta[0]);\n  };\n\n  JSONFormatter.prototype.format_modified = function (context, delta) {\n    context.pushCurrentOp(named.modified, delta[1]);\n  };\n\n  JSONFormatter.prototype.format_deleted = function (context) {\n    context.pushCurrentOp(named.deleted);\n  };\n\n  JSONFormatter.prototype.format_moved = function (context, delta) {\n    context.pushCurrentOp(named.moved, delta[1]);\n  };\n\n  JSONFormatter.prototype.format_textdiff = function () {\n    throw 'not implimented';\n  };\n\n  JSONFormatter.prototype.format = function (delta, left) {\n    var context = {};\n    this.prepareContext(context);\n    this.recurse(context, delta, left);\n    return context.result;\n  };\n  /* jshint camelcase: true */\n\n  exports.JSONFormatter = JSONFormatter;\n\n  var defaultInstance;\n\n  function last(arr) {\n    return arr[arr.length - 1];\n  }\n\n  function sortBy(arr, pred) {\n    arr.sort(pred);\n    return arr;\n  }\n\n  var compareByIndexDesc = function (indexA, indexB) {\n    var lastA = parseInt(indexA, 10);\n    var lastB = parseInt(indexB, 10);\n    if (!(isNaN(lastA) || isNaN(lastB))) {\n      return lastB - lastA;\n    } else {\n      return 0;\n    }\n  };\n\n  function opsByDescendingOrder(removeOps) {\n    return sortBy(removeOps, function (a, b) {\n      var splitA = a.path.split('/');\n      var splitB = b.path.split('/');\n      if (splitA.length !== splitB.length) {\n        return splitA.length - splitB.length;\n      } else {\n        return compareByIndexDesc(last(splitA), last(splitB));\n      }\n    });\n  }\n\n  function partition(arr, pred) {\n    var left = [];\n    var right = [];\n\n    arr.forEach(function (el) {\n      var coll = pred(el) ? left : right;\n      coll.push(el);\n    });\n    return [left, right];\n  }\n\n  function reorderOps(jsonFormattedDiff) {\n    var removeOpsOtherOps = partition(jsonFormattedDiff, function (operation) {\n      return operation.op === 'remove';\n    });\n    var removeOps = removeOpsOtherOps[0];\n    var otherOps = removeOpsOtherOps[1];\n\n    var removeOpsReverse = opsByDescendingOrder(removeOps);\n    return removeOpsReverse.concat(otherOps);\n  }\n\n\n  var format = function (delta, left) {\n    if (!defaultInstance) {\n      defaultInstance = new JSONFormatter();\n    }\n    return reorderOps(defaultInstance.format(delta, left));\n  };\n\n  exports.log = function (delta, left) {\n    console.log(format(delta, left));\n  };\n\n  exports.format = format;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters/jsonpatch.js\n ** module id = 62\n ** module chunks = 0\n **/","var map = {\n\t\"./annotated\": 50,\n\t\"./annotated.js\": 50,\n\t\"./base\": 51,\n\t\"./base.js\": 51,\n\t\"./console\": 52,\n\t\"./console.js\": 52,\n\t\"./html\": 60,\n\t\"./html.js\": 60,\n\t\"./index\": 61,\n\t\"./index.js\": 61,\n\t\"./jsonpatch\": 62,\n\t\"./jsonpatch.js\": 62\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 63;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/formatters ^\\.\\/.*$\n ** module id = 63\n ** module chunks = 0\n **/","\nmodule.exports = require('./formatters');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/main-formatters.js\n ** module id = 64\n ** module chunks = 0\n **/","var environment = require('./environment');\n\nif (environment.isBrowser) {\n  /* global window */\n  /* jshint camelcase: false */\n  window.diff_match_patch = require('../public/external/diff_match_patch_uncompressed');\n  /* jshint camelcase: true */\n}\n\nmodule.exports = require('./main');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/jsondiffpatch/src/main-full.js\n ** module id = 65\n ** module chunks = 0\n **/","import EventObject from './event';\nimport API from './api';\nimport log from './logger';\nimport error from './error';\n\n/**\n * Use Channels to create, update and remove Telepat objects. You can create new Channels using the {@link #Telepat#subscribe subscribe}\n * or the {@link #Telepat#getChannel getChannel} methods of the main {@link Telepat} object.\n *\n * @class Channel\n *\n * @example\n * let articleChannel = telepat.subscribe({\n *  channel: {\n *    context: 'context-unique-identifier',\n *    model: 'article'\n *  }\n * }, () => {\n *  console.log(articleChannel.objectsArray);\n *\n *  // Create a new article object\n *  articleChannel.objects['new'] = {\n *    title: 'New article',\n *    text: 'Article body'\n *  };\n *\n *  // Update a specific article\n *  articleChannel.objects['article-unique-id'].title = 'New title';\n *\n *  // Delete a specific article\n *  delete articleChannel.objects['article-unique-id'];\n *\n *  // React to object updates\n *  articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n *    console.log(`Received article update of type ${operationType}, for object with id ${objectId}`);\n *    // Objects are already updated\n *    console.log(articleChannel.objects);\n *  });\n *\n *  // Unsubscribe and clear objects\n *  articleChannel.unsubscribe();\n * });\n */\nexport default class Channel {\n  constructor(monitor, options, addCallback = null, updateCallback = null, removeCallback = null) {\n    this._event = new EventObject(log);\n    this._monitor = monitor;\n    this._options = options;\n    this._addCallback = addCallback;\n    this._updateCallback = updateCallback;\n    this._removeCallback = removeCallback;\n\n    /**\n     * A container object referencing all of the objects retrieved via subscription. Each object is stored on a key equal to its own unique id.\n     * @type {Object}\n     * @memberof Channel\n     * @instance\n     */\n    this.objects = {};\n    /**\n     * A container array referencing all of the objects retrieved via subscription. The order of the objects reflects the sorting options set for the channel.\n     * @type {Array<Object>}\n     * @memberof Channel\n     * @instance\n     */\n    this.objectsArray = [];\n    /**\n     * The current object count.\n     * @type {number|null}\n     * @memberof Channel\n     * @instance\n     */\n    this.objectsCount = null;\n  }\n\n  _sortObjectArray() {\n    if (this._options.sort) {\n      this.objectsArray.sort((a, b) => {\n        let result = null;\n\n        Object.keys(this._options.sort).map(key => {\n          let order = this._options.sort[key];\n          let factor = (order === 'asc') ? 1 : -1;\n\n          if (a[key] && !b[key]) {\n            result = factor;\n          }\n          if (!a[key] && b[key]) {\n            result = -factor;\n          }\n          if (a[key] && b[key]) {\n            if (a[key] < b[key]) {\n              result = -factor;\n            }\n            if (a[key] > b[key]) {\n              result = factor;\n            }\n          }\n        });\n\n        if (!result) {\n          return 0;\n        }\n        return result;\n      });\n    }\n  }\n\n/**\n * Call this function to perform the actual subscribe for the configured channel. This is usually invoked by the\n * {@link #Telepat#subscribe subscribe} method on the main {@link Telepat} object.\n *\n * @param {TelepatCallback} callback Callback invoked after subscribe is finished\n */\n  subscribe(callback = () => {}) {\n    API.call('object/subscribe',\n    this._options,\n    (err, res) => {\n      if (err) {\n        this._event.emit('error', error('Subscribe failed with error: ' + err));\n        callback(err, null);\n      } else {\n        var i;\n\n        for (i = 0; i < res.body.content.length; i++) {\n          this.objects[res.body.content[i].id] = res.body.content[i];\n        }\n        this.objectsArray = res.body.content;\n        this._sortObjectArray();\n        var objectKeys = Object.keys(this.objects);\n\n        for (i = 0; i < objectKeys.length; i++) {\n          this.objects[objectKeys[i]].$$event = new EventObject(log);\n        }\n        this._monitor.add(\n          this._options,\n          this.objects,\n          this._event,\n          this._addCallback || this.add.bind(this),\n          this._removeCallback || this.remove.bind(this),\n          this._updateCallback || this.update.bind(this)\n        );\n        this._event.on('update', (operation, parentId, parentObject, delta) => {\n          if (operation === 'add') {\n            this.objectsArray.push(parentObject);\n            this._sortObjectArray();\n            if (this.objectsCount) {\n              this.objectsCount++;\n            }\n          } else if (operation === 'delete') {\n            this.objectsArray = this.objectsArray.filter(object => {\n              return object.id !== parentId;\n            });\n            this._sortObjectArray();\n            if (this.objectsCount) {\n              this.objectsCount--;\n            }\n          }\n        });\n        this._event.emit('subscribe');\n        callback(null, this);\n      }\n    });\n  }\n\n/**\n * Call this function to unsubscribe from the configured channel. All channel properties will be reset to original values.\n *\n * @param {TelepatCallback} callback Callback invoked after unsubscribe is finished\n */\n  unsubscribe(callback = () => {}) {\n    API.call('object/unsubscribe',\n      this._options,\n      err => {\n        if (err) {\n          this._event.emit('error', error('Unsubscribe failed with error: ' + err));\n          callback(err, null);\n        } else {\n          this.objects = {};\n          this.objectsArray = [];\n          this.objectsCount = null;\n          this._monitor.remove(this._options);\n          this._event.emit('unsubscribe');\n          this._event.emit('_unsubscribe');\n          callback(null, this);\n        }\n      });\n  }\n\n  /**\n   * Call this to retrieve the number of objects available for this channel. Value will be available on the {@link #ChannelobjectsCount objectsCount} property.\n   *\n   * @param  {TelepatCallback} callback Callback invoked after getting object count is finished\n   */\n  getCount(callback = () => {}) {\n    API.call('object/count',\n      this._options,\n      (err, res) => {\n        if (err) {\n          this._event.emit('error', error('Get object count failed with error: ' + err));\n          callback(err, null);\n        } else {\n          this.objectsCount = res.body.content.count;\n          callback(null, this.objectsCount);\n        }\n      });\n  }\n\n/**\n * Add a new Telepat object to the current channel.\n * Instead of using this function, you can also add the object to {@link #Channelobjects Channel.objects}, on any new key.\n * The key will be automatically replaced with the new object id after the backend processes the operation.\n *\n * @param {Object} object The new object to add\n * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the new object\n *\n * @example\n * // This is one way of adding a new object using the channel instance.\n * // The new key will be picked up by the monitoring system, which will signal the new event creation\n * //   to the Telepat backend, and then delete the new key you just set from the objects property.\n * // After processing the request, Telepat will signal the change back to the client, and the new object will be\n * //   re-added to the objects property, but this time on the right key (equal to the new object's assigned id).\n * //   This is when the 'update' event will get triggered on the channel.\n * channel.objects['new'] = newObject;\n *\n * // Alternatively, you can call the add method:\n * channel.add(newObject, err => {\n *  if (err) {\n *    // There's been a server error, check err. The object will not be added.\n *  } else {\n *    // We've successfully signaled that we want to add the object.\n *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n *    //   event on the channel, signaling the availability of the new object on the channel.objects property.\n *  }\n * });\n */\n  add(object, callback = () => {}) {\n    API.call('object/create',\n      {\n        model: this._options.channel.model,\n        context: this._options.channel.context || object.context_id,\n        content: object\n      },\n      err => {\n        if (err) {\n          this._event.emit('error', error('Adding object failed with error: ' + err));\n          callback(err, null);\n        } else {\n          callback(null, object);\n        }\n      });\n  }\n\n/**\n * Remove a Telepat object from the current channel.\n * Instead of using this function, you can also delete the object from {@link #Channelobjects Channel.objects}.\n *\n * @param {string} id The id of the object to delete\n * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the deleted object\n *\n * @example\n * // This is one way of deleting an object using the channel instance.\n * // The deleted key will be picked up by the monitoring system, which will signal the object removal\n * //   to the Telepat backend. The change will be then signaled back to the client as confirmation, triggering\n * //   the channel's 'update' event.\n * // This is the optimistic way of doing a delete, as the removed object will be instantly gone from the local\n * //   state, before the 'update' event is triggered (and even if it is not).\n * delete channel.objects[objectId];\n *\n * // Alternatively, the pessimistic approach is to call the remove method:\n * channel.remove(objectId, err => {\n *  if (err) {\n *    // There's been a server error, check err. The object will not be deleted.\n *  } else {\n *    // We've successfully signaled that we want to delete the object.\n *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n *    //   event on the channel, signaling that the object has been removed from the channel.objects property.\n *  }\n * });\n */\n  remove(id, callback = () => {}) {\n    API.del('object/delete',\n      {\n        model: this._options.channel.model,\n        context: this._options.channel.context || this.objects[id].context_id,\n        id: id\n      },\n      err => {\n        if (err) {\n          this._event.emit('error', error('Removing object failed with error: ' + err));\n          callback(err, null);\n        } else {\n          callback(null, id);\n        }\n      });\n  }\n\n/**\n * Updates a Telepat object from the current channel.\n * To call this function, you need to create an  array containing 'patch' objects, representing the\n  modifications that need to be persisted. The structure of a patch object is:\n *\n * `{'op': 'replace', 'path': channel + '/' + object_id + '/' + object_property, 'value': modified_value}`\n *\n * Instead of using this function, you can also update the object directly from {@link #Channelobjects Channel.objects}.\n *\n * @param {number} id The id of the object to update\n * @param {Array<Object>} patches The array of patches representing the modifications that need to be persisted.\n * @param {TelepatCallback} callback Callback invoked after notifying the Telepat backend of the updated object\n *\n * @example\n * // This is one way of updating an object using the channel instance.\n * // The updated key will be picked up by the monitoring system, which will signal the object update\n * //   to the Telepat backend. The change will be then signaled back to the client as confirmation, triggering\n * //   the channel's 'update' event.\n * // This is the optimistic way of doing a delete, as the updated object will be instantly modified within the local\n * //   state, before the 'update' event is triggered (and even if it is not).\n * channel.objects[objectId].title = \"New title\";\n *\n * // Alternatively, the pessimistic approach is to call the update method:\n * channel.update(objectId, [\n *  {\n *    'op': 'replace',\n *    'path': `article/${objectId}/title`,\n *    'value': 'New title'\n *  }\n * ], err => {\n *  if (err) {\n *    // There's been a server error, check err. The object will not be updated.\n *  } else {\n *    // We've successfully signaled that we want to update the object.\n *    // Keep in mind that this is not a sync process, so we still have to wait for the 'update'\n *    //   event on the channel, signaling that the object has been updated within the channel.objects property.\n *  }\n * });\n */\n  update(id, patches, callback = () => {}) {\n    API.call('object/update',\n      {\n        model: this._options.channel.model,\n        context: this._options.channel.context || this.objects[id].context_id,\n        id: id,\n        patches: patches\n      },\n      err => {\n        if (err) {\n          this._event.emit('error', error('Updating object failed with error: ' + err));\n        } else {\n        }\n      });\n  }\n\n/**\n * Invoked when there was an error processing the requested operation.\n *\n * @event error\n * @type {Error}\n */\n/**\n * Invoked when channel subscription is successful.\n *\n * @event subscribe\n */\n/**\n * Invoked when channel unsubscription is successful.\n *\n * @event unsubscribe\n */\n/**\n * Invoked when objects in the subscription have been modified (there was an update of an existing object, a new object has been added or an object has been deleted).\n *\n * @event update\n * @param {string} eventType One of 'add', 'delete' or 'replace'\n * @param {string} objectId The id of the affected object\n * @param {Object} object The affected object itself\n * @param {Object} oldObject Present only for the 'replace' eventType, the old state of the affected object\n */\n\n/**\n * Call this function to add callbacks to be invoked on event triggers.\n * Available callbacks:\n *\n * | Name                                               | Description           |\n * | -------------------------------------------------- | --------------------- |\n * | {@link #Channel.event:error error}                 | Invoked when there was an error processing the requested operation |\n * | {@link #Channel.event:subscribe subscribe}         | Invoked when channel subscription is successful |\n * | {@link #Channel.event:unsubscribe unsubscribe}     | Invoked when channel unsubscription is successful |\n * | {@link #Channel.event:update update}               | Invoked when objects in the subscription have been modified (update of an existing object, new object or deleted object) |\n *\n * @param {string} name The name of the event to associate the callback with\n * @param {function} callback The callback to be executed\n * @return {number} A callback id. Save this in order to later remove the callback from the event (using {@link #Channel#removeCallback removeCallback})\n * @example\n * // React to object updates\n *  articleChannel.on('update', (operationType, objectId, object, oldObject) => {\n *    console.log(`Received article update of type ${operationType}, for object with id ${objectId}`);\n *    // Objects are already updated\n *    console.log(articleChannel.objects);\n *  });\n */\n  on(name, callback) {\n    return this._event.on(name, callback);\n  }\n\n  /**\n   * Call this function to remove callbacks that have been set using {@link #Channel#on on}.\n   *\n   * @param {string} name The name of the event the callback was associated with\n   * @param {number} callbackId The callback id returned by calling {@link #Channel#on on}\n   * @example\n   * let updateCallbackId = channel.on('update', () => {\n   *  // Remove the callback after the first update event\n   *  channel.removeCallback(updateCallbackId);\n   * });\n   */\n  removeCallback(name, index) {\n    return this._event.removeCallback(name, index);\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/channel.js\n **/","import API from './api';\nimport log from './logger';\nimport error from './error';\nimport Admin from './admin';\n\n/**\n * You can access an instance of this class using the {@link #Telepatuser user} property of the Telepat object.\n *\n * @class User\n *\n * @example\n * telepat.user.login('email', 'password', (err) => {\n *  if (err) {\n *    // Treat login error\n *  } else {\n *    // Treat successful login\n *    console.log(telepat.user.data);\n *\n *    // Update user data\n *    telepat.user.data.points++;\n *  }\n * });\n */\nexport default class User {\n  constructor(db, event, monitor, setAdmin, callback = () => {}) {\n    this._event = event;\n    this._monitor = monitor;\n    this._setAdmin = setAdmin;\n    this._db = db;\n    this._customProperties = [];\n    this._userChannel = null;\n\n    /**\n     * Indicates if the currently logged in user is an admin\n     * @type {boolean}\n     * @memberof User\n     * @instance\n     */\n    this.isAdmin = false;\n    /**\n     * Indicates if there's a saved authentication token that can be used to re-login\n     * @type {boolean}\n     * @memberof User\n     * @instance\n     */\n    this.canReauth = null;\n    /**\n     * Object that holds all key-value data about the currently logged in user\n     * @type {Object}\n     * @memberof User\n     * @instance\n     */\n    this.data = {};\n    API.tokenUpdateCallback = (newToken) => {\n      this._saveToken(newToken);\n    };\n\n    this._db.get(':userToken').then(doc => {\n      this.canReauth = true;\n      callback();\n    }).catch(() => {\n      this.canReauth = false;\n      callback();\n    });\n  }\n\n  _saveToken(token) {\n    var newObject = {\n      _id: ':userToken',\n      value: {\n        token: token,\n        admin: this.isAdmin\n      }\n    };\n\n    this._db.get(':userToken').then(doc => {\n      newObject._rev = doc._rev;\n      log.info('Replacing existing authentication token');\n      this._db.put(newObject).then(doc => {\n        this.canReauth = true;\n      }).catch(err => {\n        this.canReauth = false;\n        log.warn('Could not persist authentication token. Error: ' + err);\n      });\n    }).catch(() => {\n      this._db.put(newObject).then(doc => {\n        this.canReauth = true;\n      }).catch(err => {\n        this.canReauth = false;\n        log.warn('Could not persist authentication token. Error: ' + err);\n      });\n    });\n  }\n\n  _login(endpoint, options, isAdmin, callback = () => {}) {\n    var self = this;\n\n    function success(res) {\n      let userContainer = {};\n\n      for (let k in res.body.content.user) {\n        self.data[k] = res.body.content.user[k];\n        self._customProperties.push(k);\n      }\n      if (isAdmin) {\n        self.isAdmin = true;\n        self._setAdmin(new Admin(self));\n      }\n\n      userContainer[self.data.id] = self.data;\n      self._monitor.add(\n        {channel: {model: (self.isAdmin ? 'admin' : 'user')}},\n        userContainer,\n        null,\n        () => {},\n        () => {},\n        self.update.bind(self)\n      );\n\n      API.authenticationToken = res.body.content.token;\n      self._saveToken(API.authenticationToken);\n      self._event.emit('login');\n      callback(null, self);\n    }\n\n    API.call(endpoint, options, (err, res) => {\n      if (err) {\n        if (err.status === 404 && options.hasOwnProperty('access_token')) {\n          log.info('Got 404 on Facebook login, registering user first');\n          API.call('user/register-facebook', options, (err, res) => {\n            if (err) {\n              log.error('Failed to login with Facebook. Could not register or login user.');\n              self._event.emit('login_error', error('Login failed with error: ' + err));\n            } else {\n              API.call(endpoint, options, function (err, res) {\n                if (err) {\n                  log.error('Failed to login with Facebook. User registration was successful, but login failed.');\n                  self._event.emit('login_error', error('Login failed with error: ' + err));\n                } else {\n                  success(res);\n                }\n              });\n            }\n          });\n        } else {\n          self._event.emit('login_error', error('Login failed with error: ' + err));\n          callback(err, null);\n        }\n      } else {\n        success(res);\n      }\n    });\n  }\n\n  /**\n   * If there is a saved authentication token from previous connections, try to use it to login again.\n   * You can call this method if the {@link #UsercanReauth canReauth} property is true.\n   *\n   * @param  {TelepatCallback} callback Callback invoked after reauth operation is finished\n   */\n  reauth(callback = () => {}) {\n    this._db.get(':userToken').then(doc => {\n      log.info('Retrieved saved authentication token');\n      API.authenticationToken = doc.value.token;\n      API.get((doc.value.admin ? 'admin/me' : 'user/me'), '', function (err, res) {\n        if (err) {\n          API.authenticationToken = null;\n          this._setAdmin(null);\n          this._db.remove(doc._id, doc._rev);\n          this.canReauth = false;\n          callback(error('Saved authentication token expired'), null);\n          this._customProperties = [];\n          this.data = {};\n          this._event.emit('logout');\n        } else {\n          let userContainer = {};\n\n          for (let k in res.body.content) {\n            this.data[k] = res.body.content[k];\n            this._customProperties.push(k);\n          }\n          if (res.body.content.type === 'admin') {\n            this.isAdmin = true;\n            this._saveToken(API.authenticationToken);\n            this._setAdmin(new Admin(this));\n          }\n\n          userContainer[this.data.id] = this.data;\n          this._monitor.add(\n            {channel: {model: (this.isAdmin ? 'admin' : 'user')}},\n            userContainer,\n            null,\n            () => {},\n            () => {},\n            this.update.bind(this)\n          );\n          callback(null, res);\n          this._event.emit('login');\n        }\n      }.bind(this));\n    }).catch(function (err) {\n      callback(error('Error retrieving authentication token: ' + err), null);\n    });\n  }\n\n  /**\n   * Call this to update your profile.\n   *\n   * To call this method, you need to create an  array containing 'patch' objects, representing the\n   * modifications that need to be persisted. The structure of a patch object is:\n   *\n   * `{'op': 'replace', 'path': user or admin + '/' + user_id + '/' + property, 'value': modified_value}`\n   *\n   * Instead of using this function, you can also update the user directly from {@link #Userdata User.data}.\n   *\n   * @param {string} id The user id of the updated user profile\n   * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  update(id, patches, callback = () => {}) {\n    API.call(this.isAdmin ? 'admin/update' : 'user/update', {patches: patches}, (err, res) => {\n      if (err) {\n        callback(error('Failed updating user: ' + res.body.message));\n      } else {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * Call this to request a password reset for the logged in user.\n   * The process involves a confirmation email, with a link that needs to be clicked on in order to get a unique pass reset token.\n   * You then use that token to call the {@link #User#resetPassword resetPassword} method that finishes the process by setting a new password.\n   *\n   * @param  {string} email The email/username of the user to reset the pass for\n   * @param  {string} callbackURL The URL the user will be pointed to after verifying the request by clicking the link in the sent email\n   * @param  {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  requestPasswordReset(email, callbackURL = null, callback = () => {}) {\n    if (!email) {\n      if (this.email) {\n        email = this.email;\n      } else {\n        callback(error('You must provide a valid email address for the account that needs the password reset'), null);\n        return;\n      }\n    }\n\n    API.call('user/request_password_reset',\n      {\n        'type': 'app',\n        'username': email,\n        'callbackUrl': callbackURL\n      },\n    (err, res) => {\n      if (err) {\n        callback(error('Password reset request failed with error: ' + err), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  };\n\n  /**\n   * @param  {string} userId The id of the user that needs the password reset\n   * @param  {string} token The token obtained from the redirect generated by calling {@link #User#requestPasswordReset requestPasswordReset}.\n   * @param  {string} newPassword The new password\n   * @param  {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  resetPassword(id, token, newPassword, callback = () => {}) {\n    if (!id || !token || !newPassword) {\n      callback(error('You must provide a valid user-id, pass reset token and new password for the account that needs the password reset'), null);\n      return;\n    }\n\n    API.call('user/request_password_reset',\n      {\n        'token': token,\n        'user_id': id,\n        'password': newPassword\n      },\n    (err, res) => {\n      if (err) {\n        callback(error('Password reset request failed with error: ' + err), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  };\n\n  /**\n   * This function creates a new user profile.\n   *\n   * @param {Object} user The object representing the new user profile\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  register(user, callback = () => {}) {\n    API.call('user/register-username', user, callback);\n  };\n\n  /**\n   * This function creates a new admin profile.\n   *\n   * @param {Object} admin The object representing the new admin profile\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  registerAdmin(admin, callback = () => {}) {\n    API.call('admin/add', admin, (err, res) => {\n      if (err) {\n        callback(error('Register failed with error: ' + (res.body.message) || ''), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  };\n\n  /**\n   * This function associates the current anonymous device to a Telepat user profile, using a Facebook\n    account for authentication.\n   *\n   * @param {string} facebookToken The user token obtained from Facebook after login\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  loginWithFacebook(facebookToken, callback = () => {}) {\n    return this._login('user/login-facebook', { 'access_token': facebookToken }, false, callback);\n  };\n\n  /**\n   * This function associates the current anonymous device to a Telepat user profile, using a password for authentication.\n   *\n   * @param {string} email The user's email address\n   * @param {string} password The user's password\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   * @example\n   * telepat.user.login('email', 'password', (err) => {\n   *  if (err) {\n   *    // Treat login error\n   *  } else {\n   *    // Treat successful login\n   *    console.log(telepat.user.data);\n   *  }\n   * });\n   */\n  login(email, password, callback = () => {}) {\n    return this._login('user/login_password', { username: email, password: password }, false, callback);\n  };\n\n  /**\n   * This function associates the current anonymous device to a Telepat administrator profile, using a password for authentication.\n   *\n   * @param {string} email The admin email address\n   * @param {string} password The admin password\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   * @example\n   * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n   *  if (err) {\n   *    // Treat login error\n   *  } else {\n   *    telepat.admin.getAppUsers((err) => {\n   *      if (err) {\n   *        // Treat error\n   *      } else {\n   *        // Treat success\n   *        console.log(telepat.admin.users);\n   *      }\n   *    })\n   *  }\n   * });\n   */\n  loginAdmin(email, password, callback = () => {}) {\n    return this._login('admin/login', { email: email, password: password }, true, callback);\n  };\n\n  /**\n   * Call this to retrieve a specific application user object.\n   * Results will be sent as a callback argument.\n   *\n   * @param {string} userId The id of the requested user\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  get(userId, callback = () => {}) {\n    API.get('user/get', 'user_id=' + encodeURIComponent(userId), (err, res) => {\n      if (err) {\n        callback(error('Retrieving user failed with error: ' + err), null);\n      } else {\n        callback(null, res.body.content);\n      }\n    });\n  };\n\n  /**\n   * This function retrieves the currently logged in user's information.\n   *\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  me(callback = () => {}) {\n    API.get((this.isAdmin ? 'admin/me' : 'user/me'), '', (err, res) => {\n      if (err) {\n        callback(console.error('Request failed with error: ' + err), null);\n      } else {\n        callback(null, JSON.parse(res.text).content);\n      }\n    });\n  };\n\n  /**\n   * Logs the current user out.\n   *\n   * @param {TelepatCallback} callback Callback invoked after the operation is finished\n   */\n  logout(callback = () => {}) {\n    this._db.get(':userToken').then(doc => {\n      this._db.remove(doc._id, doc._rev);\n    }).catch(function () {\n    });\n    this._setAdmin(null);\n    this.isAdmin = false;\n    this.canReauth = false;\n    this._customProperties = [];\n    this.data = {};\n\n    API.get('user/logout', '', err => {\n      API.authenticationToken = null;\n      if (err) {\n        this._event.emit('logout_error', error('Logout failed with error: ' + err));\n        callback(err);\n      } else {\n        this._event.emit('logout');\n        callback();\n      }\n    });\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/user.js\n **/","import API from './api';\nimport error from './error';\nimport EventObject from './event';\nimport log from './logger';\n\n/**\n * You can access an instance of this class using the {@link #Telepatadmin admin} property of the Telepat object.\n * This instance becomes available after successfully logging in as an administrator.\n *\n * @class Admin\n *\n * @example\n * telepat.user.loginAdmin('admin@email.com', 'password', (err) => {\n *  if (err) {\n *    // Treat login error\n *  } else {\n *    telepat.admin.getAppUsers((err) => {\n *      if (err) {\n *        // Treat error\n *      } else {\n *        // Treat success\n *        console.log(telepat.admin.users);\n *\n *        // Update users\n *        telepat.admin.users[goodUserId].isAwesome = true;\n *        delete telepat.admin.users[badUserId];\n *\n *        // Update collection metadata\n *        telepat.collections[currentCollectionId].topic = 'Cats';\n *      }\n *    })\n *  }\n * });\n */\nexport default class Admin {\n  constructor(user) {\n    this._user = user;\n    this._monitor = user._monitor;\n    this._event = user._event;\n\n    /**\n     * This {@link Channel} instance allows registering callbacks for 'update' events on user data.\n     * @type {Object}\n     * @memberof Admin\n     * @instance\n     */\n    this.userChannel = null;\n    /**\n     * This object contains data about all of the applications the current administrator can access.\n     * Each app data is stored using a key equal to the application unique identifier.\n     * You can access this after calling {@link #Admin#getApps getApps}.\n     * Modifications to app objects stored within will be automatically synchronized with the Telepat backend.\n     * @type {Object}\n     * @memberof Admin\n     * @instance\n     */\n    this.apps = null;\n    /**\n     * This object contains data about the currently connected app.\n     * You can access this after calling {@link #Admin#getApps getApps}.\n     * Modifications to this object will be automatically synchronized with the Telepat backend.\n     * @type {Object}\n     * @memberof Admin\n     * @instance\n     */\n    this.app = null;\n    /**\n     * This object contains data about all of the users of the current app.\n     * Each user data is stored using a key equal to the user unique identifier.\n     * You can access this after calling {@link #Admin#getAppUsers getAppUsers}.\n     * Modifications to user objects stored within will be automatically synchronized with the Telepat backend.\n     * @type {Object}\n     * @memberof Admin\n     * @instance\n     */\n    this.users = null;\n  }\n\n  /**\n   * Call this to retrieve all the application objects the current administrator can access.\n   * Results will be sent as a callback argument, and persisted on the {@link #Adminapps apps} property.\n   * The object belonging to the currently connected app will also be made available, on the {@link #Adminapp app} property.\n   *\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  getApps(callback = function () {}) {\n    API.call('admin/apps',\n      '',\n      (err, res) => {\n        if (err) {\n          callback(error('Retrieving apps failed with error: ' + err), null);\n        } else {\n          this.apps = {};\n          for (var index in res.body.content) {\n            var app = res.body.content[index];\n\n            this.apps[app.id] = app;\n          }\n          this.app = this.apps[API.appId];\n          this._monitor.add({channel: {model: 'application'}}, this.apps, new EventObject(log), () => {}, ()=>{}, this.updateApp);\n          callback(null, res.body.content);\n        }\n      }, 'get');\n  }\n\n  /**\n   * Call this to create a new application.\n   *\n   * @param {Object} properties Data about the new application. Can hold any key-value data.\n   * Must contain at least a 'keys' key, with an array of string values that will be used as valid API keys for the app.\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  addApp(properties, callback = function () {}) {\n    API.call('admin/app/add',\n      properties,\n      (err, res) => {\n        if (err) {\n          callback(error('Adding application failed with error: ' + err), null);\n        } else {\n          this._monitor.processMessage({\n            'data': {\n              'new': [\n                {\n                  'op': 'create',\n                  'object': res.body.content,\n                  'subscriptions': [\n                    'blg:null:application'\n                  ]\n                }\n              ],\n              'updated': [],\n              'deleted': []\n            }\n          });\n          callback(null, res.body.content);\n        }\n      });\n  }\n\n  /**\n   * Updates key-value data within an application object.\n   *\n   * To call this method, you need to create an  array containing 'patch' objects, representing the\n   * modifications that need to be persisted. The structure of a patch object is:\n   *\n   * `{'op': 'replace', 'path': application + '/' + app_id + '/' + property, 'value': modified_value}`\n   *\n   * Instead of using this function, you can also update the app directly from {@link #Adminapps Admin.apps}.\n   *\n   * @param  {string} id The application id\n   * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n   * @param  {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  updateApp(id, patches, callback = () => {}) {\n    if (id !== API.appId) {\n      callback(error('Cannot update an app that is not active. Please reconnect to that specific app id to make updates.'));\n    }\n    API.call('admin/app/update',\n      {id: id, patches: patches},\n      (err, res) => {\n        if (err) {\n          callback(error('Updating application failed with error: ' + err));\n        } else {\n          callback();\n        }\n      });\n  }\n\n  /**\n   * Call this to delete an application.\n   * Instead of using this function, you can also delete the app directly from {@link #Adminapps Admin.apps}.\n   *\n   * @param {string} id The application id\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  deleteApp(id, callback = function () {}) {\n    API.del('admin/app/remove',\n      {id: id},\n      (err, res) => {\n        if (err) {\n          callback(error('Removing application failed with error: ' + err), null);\n        } else {\n          this._monitor.processMessage({\n            'data': {\n              'deleted': [\n                {\n                  'op': 'delete',\n                  'object': {\n                    id: id\n                  },\n                  'subscriptions': [\n                    'blg:null:application'\n                  ]\n                }\n              ],\n              'updated': [],\n              'new': []\n            }\n          });\n          callback();\n        }\n      });\n  }\n\n  /**\n   * Call this to create a new collection.\n   *\n   * @param {Object} collection Data about the new application. Can hold any key-value data. May be empty object.\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  addCollection(collection, callback = () => {}) {\n    API.call('admin/context/add',\n      collection,\n      (err, res) => {\n        if (err) {\n          callback(error('Creating collection failed with error: ' + err));\n        } else {\n          callback(null, res);\n        }\n      });\n  }\n\n  /**\n   * Updates key-value data within a collection object.\n   *\n   * To call this method, you need to create an  array containing 'patch' objects, representing the\n   * modifications that need to be persisted. The structure of a patch object is:\n   *\n   * `{'op': 'replace', 'path': context + '/' + collection_id + '/' + property, 'value': modified_value}`\n   *\n   * Instead of using this function, you can also update the collection directly from {@link #Telepatcollections Telepat.collections}.\n   *\n   * @param  {string} id The collection id\n   * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n   * @param  {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  updateCollection(id, patches, callback = () => {}) {\n    API.call('admin/context/update',\n      {id: id, patches: patches},\n      (err, res) => {\n        if (err) {\n          callback(error('Updating collection failed with error: ' + err));\n        } else {\n          callback();\n        }\n      });\n  }\n\n  /**\n   * Call this to delete a collection.\n   * Instead of using this function, you can also delete the collection directly from {@link #Telepatcollections Telepat.collections}.\n   *\n   * @param {string} id The collection id\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  deleteCollection(id, callback = () => {}) {\n    API.del('admin/context/remove',\n      {id: id},\n      (err, res) => {\n        if (err) {\n          callback(error('Deleting collection failed with error: ' + err));\n        } else {\n          callback();\n        }\n      });\n  }\n\n  /**\n   * Call this to remove a model from the schema, together with all objects of that specific type.\n   *\n   * @param {string} type The model name\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  deleteModel(type, callback) {\n    API.del('admin/schema/remove_model', {\n      'model_name': type\n    }, (err, res) => {\n      if (err) {\n        callback(error('Deleting model failed with error: ' + err));\n      } else {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * Call this to retrieve all the current application user objects.\n   * Results will be sent as a callback argument, and persisted on the {@link #Adminusers users} property.\n   *\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  getAppUsers(callback = function () {}) {\n    API.call('admin/users',\n    {},\n    (err, res) => {\n      if (err) {\n        callback(error('Retrieving users failed with error: ' + err), null);\n      } else {\n        this.users = {};\n        for (let index in res.body.content) {\n          this.users[res.body.content[index].id] = res.body.content[index];\n        }\n        this.userChannel = new EventObject(log);\n        this._monitor.add({channel: {model: 'user'}}, this.users, this.userChannel, this.addUser.bind(this), this.deleteUser, this.updateUser);\n        callback(null, this.users);\n      }\n    });\n  }\n\n  /**\n   * This is an alias for {@link #User#register}.\n   *\n   *  @param {Object} user The object representing the new user profile\n   *  @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  addUser(user, callback = function () {}) {\n    this._user.register(user, callback);\n  };\n\n  /**\n   * Call this to delete a user profile.\n   * Instead of using this function, you can also delete the user directly from {@link #Adminusers Admin.users}.\n   *\n   *  @param {string} username The email address of the user profile to delete\n   *  @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  deleteUser(id, callback = function () {}) {\n    API.del('admin/user/delete',\n    { id: id },\n    (err, res) => {\n      if (err) {\n        callback(error('Removing user failed with error: ' + err), null);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Call this to update a user profile.\n   *\n   * To call this method, you need to create an  array containing 'patch' objects, representing the\n   * modifications that need to be persisted. The structure of a patch object is:\n   *\n   * `{'op': 'replace', 'path': user + '/' + user_id + '/' + property, 'value': modified_value}`\n   *\n   * Instead of using this function, you can also update the user directly from {@link #Adminusers Admin.users}.\n   *\n   * @param {string} id The id of the user to be updated\n   * @param  {Array<Object>} patches The array of patches representing the modifications that need to be persisted\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  updateUser(id, patches, callback = function () {}) {\n    API.call('admin/user/update', {\n      patches: patches\n    },\n    (err, res) => {\n      if (err) {\n        callback(error('Updating user failed with error: ' + err), null);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Call this to authorize access to the current app for another administrator account\n   * within the same Telepat instance.\n   *\n   * @param {string} user The email associated with the account of the new administrator\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  authorize(user, callback) {\n    API.call('/admin/app/authorize', {\n      email: user\n    }, (err, res) => {\n      if (err) {\n        callback(error('Authorizing admin failed with error: ' + err), null);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  /**\n   * Call this to deauthorize access to the current app for another administrator account\n   * within the same Telepat instance.\n   *\n   * @param {string} user The email associated with the account of the administrator to be removed\n   * @param {TelepatCallback} callback Callback invoked after operation is finished\n   */\n  deauthorize(user, callback) {\n    API.call('/admin/app/deauthorize', {\n      email: user\n    }, (err, res) => {\n      if (err) {\n        callback(error('Deauthorizing admin failed with error: ' + err), null);\n      } else {\n        callback();\n      }\n    });\n  };\n\n  unhook() {\n    this._monitor.remove({channel: {model: 'application'}});\n    this._monitor.remove({channel: {model: 'user'}});\n  };\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/admin.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/index.js\n ** module id = 69\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/url.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/parseuri/index.js\n ** module id = 71\n ** module chunks = 0\n **/","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/browser.js\n ** module id = 72\n ** module chunks = 0\n **/","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/debug.js\n ** module id = 73\n ** module chunks = 0\n **/","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/debug/~/ms/index.js\n ** module id = 74\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/index.js\n ** module id = 75\n ** module chunks = 0\n **/","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/json3/lib/json3.js\n ** module id = 76\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 77\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 78\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/isarray/index.js\n ** module id = 79\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js\n ** module id = 80\n ** module chunks = 0\n **/","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/binary.js\n ** module id = 81\n ** module chunks = 0\n **/","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/socket.io-parser/is-buffer.js\n ** module id = 82\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/manager.js\n ** module id = 83\n ** module chunks = 0\n **/","\nmodule.exports =  require('./lib/');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/index.js\n ** module id = 84\n ** module chunks = 0\n **/","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/index.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/socket.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/index.js\n ** module id = 87\n ** module chunks = 0\n **/","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/xmlhttprequest.js\n ** module id = 88\n ** module chunks = 0\n **/","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/has-cors/index.js\n ** module id = 89\n ** module chunks = 0\n **/","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling-xhr.js\n ** module id = 90\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling.js\n ** module id = 91\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transport.js\n ** module id = 92\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/browser.js\n ** module id = 93\n ** module chunks = 0\n **/","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/lib/keys.js\n ** module id = 94\n ** module chunks = 0\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/index.js\n ** module id = 95\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/has-binary/~/isarray/index.js\n ** module id = 96\n ** module chunks = 0\n **/","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/arraybuffer.slice/index.js\n ** module id = 97\n ** module chunks = 0\n **/","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/base64-arraybuffer/lib/base64-arraybuffer.js\n ** module id = 98\n ** module chunks = 0\n **/","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/after/index.js\n ** module id = 99\n ** module chunks = 0\n **/","/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/utf8/utf8.js\n ** module id = 100\n ** module chunks = 0\n **/","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/engine.io-parser/~/blob/index.js\n ** module id = 101\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/component-emitter/index.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/parseqs/index.js\n ** module id = 103\n ** module chunks = 0\n **/","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/component-inherit/index.js\n ** module id = 104\n ** module chunks = 0\n **/","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/yeast/index.js\n ** module id = 105\n ** module chunks = 0\n **/","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  }\n  else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/polling-jsonp.js\n ** module id = 106\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/lib/transports/websocket.js\n ** module id = 107\n ** module chunks = 0\n **/","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/indexof/index.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/engine.io-client/~/parsejson/index.js\n ** module id = 110\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/socket.js\n ** module id = 111\n ** module chunks = 0\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/component-emitter/index.js\n ** module id = 112\n ** module chunks = 0\n **/","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/to-array/index.js\n ** module id = 113\n ** module chunks = 0\n **/","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/lib/on.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/component-bind/index.js\n ** module id = 115\n ** module chunks = 0\n **/","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/has-binary/index.js\n ** module id = 116\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/has-binary/~/isarray/index.js\n ** module id = 117\n ** module chunks = 0\n **/","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/socket.io-client/~/backo2/index.js\n ** module id = 118\n ** module chunks = 0\n **/"],"sourceRoot":""}